const rt="ENTRIES",W="KEYS",$="VALUES",F="";class M{constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=C(this._path);if(C(s)===F)return{done:!1,value:this.result()};const n=t.get(C(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=C(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>C(t)).filter(t=>t!==F).join("")}value(){return C(this._path).node.get(F)}result(){switch(this._type){case $:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const C=e=>e[e.length-1],ct=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const h=o*i;t:for(const c of e.keys())if(c===F){const a=u[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=o;for(let l=0;l<c.length;++l,++a){const m=c[l],g=i*a,f=g-i;let d=u[g];const p=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let A=p;A<_;++A){const O=m!==t[A],x=u[f+A]+ +O,y=u[f+A+1]+1,k=u[g+A]+1,T=u[g+A+1]=Math.min(x,y,k);T<d&&(d=T)}if(d>s)continue t}R(e.get(c),t,s,n,u,a,i,r+c)}};let q=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=v(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=j(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,lt(this._tree,t)}entries(){return new M(this,rt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ct(this._tree,t,s)}get(t){const s=B(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=B(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new M(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,S(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new M(this,$)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const v=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),v(e.get(n),t.slice(n.length),s);return s.push([e,t]),v(void 0,"",s)},B=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return B(e.get(s),t.slice(s.length))},S=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const h=e.get(o);if(r===o.length)e=h;else{const c=new Map;c.set(o.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(o),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},lt=(e,t)=>{const[s,n]=v(e,t);if(s!==void 0){if(s.delete(F),s.size===0)P(n);else if(s.size===1){const[u,o]=s.entries().next().value;N(n,u,o)}}},P=e=>{if(e.length===0)return;const[t,s]=j(e);if(t.delete(s),t.size===0)P(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&N(e.slice(0,-1),n,u)}},N=(e,t,s)=>{if(e.length===0)return;const[n,u]=j(e);n.set(u+t,s),n.delete(u)},j=e=>e[e.length-1],ht=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,L="or",G="and",dt="and_not",at=(e,t)=>{e.includes(t)||e.push(t)},J=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},U=({score:e},{score:t})=>t-e,ft=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},H=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,gt={[L]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),J(n.terms,o)}}return e},[G]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);J(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[dt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},pt=(e,t,s,n,u,o)=>{const{k:i,b:r,d:h}=o;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/u)))},mt=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},Ft={k:1.2,b:.7,d:.5},_t={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ht),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},K={combineWith:L,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Ft},At={combineWith:G,prefix:(e,t,s)=>t===s.length-1},yt={batchSize:1e3,batchWait:10},X={minDirtFactor:.1,minDirtCount:20},Ct={...yt,...X};class zt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ct:t.autoVacuum;this._options={..._t,...t,autoVacuum:s,searchOptions:{...K,...t.searchOptions||{}},autoSuggestOptions:{...At,...t.autoSuggestOptions||{}}},this._index=new q,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=X,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const Y=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},Q=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},Et=(e,t,s,n)=>{if(!e._index.has(n)){Q(e,s,t,n);return}const u=e._index.fetch(n,ft),o=u.get(t);o==null||o.get(s)==null?Q(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Z=(e,t=L)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(gt[s])||new Map},V=(e,t,s,n,u,o,i,r,h=new Map)=>{if(u==null)return h;for(const c of Object.keys(o)){const a=o[c],l=e._fieldIds[c],m=u.get(l);if(m==null)continue;let g=m.size;const f=e._avgFieldLength[l];for(const d of m.keys()){if(!e._documentIds.has(d)){Et(e,l,d,s),g-=1;continue}const p=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!p)continue;const _=m.get(d),A=e._fieldLength.get(d)[l],O=pt(_,g,e._documentCount,A,f,r),x=n*a*p*O,y=h.get(d);if(y){y.score+=x,at(y.terms,t);const k=H(y.match,s);k?k.push(c):y.match[s]=[c]}else h.set(d,{score:x,terms:[t],match:{[s]:[c]}})}}return h},wt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((d,p)=>({...d,[p]:H(n.boost,p)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...K.weights,...i},l=e._index.get(t.term),m=V(e,t.term,t.term,1,l,u,o,h);let g,f;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,p=d<1?Math.min(r,Math.round(t.term.length*d)):d;p&&(f=e._index.fuzzyGet(t.term,p))}if(g)for(const[d,p]of g){const _=d.length-t.term.length;if(!_)continue;f==null||f.delete(d);const A=a*d.length/(d.length+.3*_);V(e,t.term,d,A,p,u,o,h,m)}if(f)for(const d of f.keys()){const[p,_]=f.get(d);if(!_)continue;const A=c*d.length/(d.length+_);V(e,t.term,d,A,p,u,o,h,m)}return m},tt=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(m=>tt(e,m,a));return Z(l,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(mt(i)).map(a=>wt(e,a,i));return Z(c,i.combineWith)},et=(e,t,s={})=>{const n=tt(e,t,s),u=[];for(const[o,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(o),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(U),u},xt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of et(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=o,h.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:h}]of n)u.push({suggestion:o,terms:r,score:i/h});return u.sort(U),u},kt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new zt(a);l._documentCount=t,l._nextId=s,l._documentIds=b(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=b(o),l._avgFieldLength=i,l._storedFields=b(r),l._dirtCount=h||0,l._index=new q;for(const[m,g]of l._documentIds)l._idToShortId.set(g,m);for(const[m,g]of e){const f=new Map;for(const d of Object.keys(g)){let p=g[d];c===1&&(p=p.ds),f.set(parseInt(d,10),b(p))}l._index.set(m,f)}return l},st=Object.entries,vt=Object.fromEntries,z=100,E=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>E?`… ${c.slice(-E)}`:c:a?l=c.length+i>z?`${c.slice(0,z-i)}… `:c:l=c.length>E?`${c.slice(0,E)} … ${c.slice(-E)}`:c,l&&u.push(l),i+=l.length,a||(u.push(["mark",t]),i+=t.length,i>=z&&u.push(" …"))};let h=s.indexOf(n,o);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(o,h)),o=c,i>z)break;h=s.indexOf(n,o)}return i<z&&r(e.slice(o),!0),u},nt=/[\u4e00-\u9fa5]/g,ut=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(nt)||[],n=t.replace(nt,"").toLowerCase();return n?[n,...s]:[...s]},...e}),ot=(e,t,s={})=>{const n={};return et(t,e,ut({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,h=o.includes("/"),c=!h&&o.includes("#"),a=o.includes("@"),[l,m]=o.split(/[#@]/),{contents:g}=n[l]??={title:"",contents:[]};if(c)g.push([{type:"heading",key:l,anchor:u.a,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r]);else if(h){const[f]=m.split("/"),{h:d="",a:p=""}=Y(t,`${l}#${f}`)||{};g.push([{type:"text",key:l,header:d,anchor:p,display:i.map(_=>D(u.t,_)).filter(_=>_!==null)},r])}else a?g.push([{type:"customField",key:l,index:m,display:i.map(f=>u.c.map(d=>D(d,f))).flat().filter(f=>f!==null)},r]):g.push([{type:"title",key:l,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r])}),st(n).sort(([,u],[,o])=>o.contents.reduce((i,[,r])=>i+r,0)-u.contents.reduce((i,[,r])=>i+r,0)).map(([u,{title:o,contents:i}])=>{if(!o){const r=Y(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},it=(e,t,s={})=>xt(t,e,ut(s)).map(({suggestion:n})=>n),I=vt(st(JSON.parse("{\"/i18n/en/\":{\"documentCount\":8,\"nextId\":8,\"documentIds\":{\"0\":\"v-d6ccd53e\",\"1\":\"v-d6ccd53e#1\",\"2\":\"v-0faa6ad6\",\"3\":\"v-0faa6ad6#1\",\"4\":\"v-523878c7\",\"5\":\"v-523878c7#1\",\"6\":\"v-a744b148\",\"7\":\"v-a744b148#1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[4],\"2\":[1],\"3\":[4],\"4\":[1],\"5\":[4],\"6\":[1],\"7\":[4]},\"averageFieldLength\":[2.5],\"storedFields\":{\"0\":{\"h\":\"Guide\"},\"1\":{\"h\":\"en version not complete\",\"a\":\"en-version-not-complete\"},\"2\":{\"h\":\"Config\"},\"3\":{\"h\":\"en version not complete\",\"a\":\"en-version-not-complete\"},\"4\":{\"h\":\"Installation\"},\"5\":{\"h\":\"en version not complete\",\"a\":\"en-version-not-complete\"},\"6\":{\"h\":\"Usage\"},\"7\":{\"h\":\"en version not complete\",\"a\":\"en-version-not-complete\"}},\"dirtCount\":0,\"index\":[[\"usage\",{\"0\":{\"6\":1}}],[\"installation\",{\"0\":{\"4\":1}}],[\"config\",{\"0\":{\"2\":1}}],[\"complete\",{\"0\":{\"1\":1,\"3\":1,\"5\":1,\"7\":1}}],[\"not\",{\"0\":{\"1\":1,\"3\":1,\"5\":1,\"7\":1}}],[\"version\",{\"0\":{\"1\":1,\"3\":1,\"5\":1,\"7\":1}}],[\"en\",{\"0\":{\"1\":1,\"3\":1,\"5\":1,\"7\":1}}],[\"guide\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":2409,\"nextId\":2409,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#1\",\"2\":\"v-8daa1a0e#2\",\"3\":\"v-8daa1a0e#3\",\"4\":\"v-74bc627b\",\"5\":\"v-74bc627b#0/0\",\"6\":\"v-74bc627b#0/1\",\"7\":\"v-744497ce\",\"8\":\"v-744497ce#1\",\"9\":\"v-744497ce#1/0\",\"10\":\"v-744497ce#2\",\"11\":\"v-744497ce#2/0\",\"12\":\"v-744497ce#2/1\",\"13\":\"v-0e602bfd\",\"14\":\"v-0e602bfd#1\",\"15\":\"v-0e602bfd#1/0\",\"16\":\"v-71063999\",\"17\":\"v-71063999#1\",\"18\":\"v-71063999#1/0\",\"19\":\"v-71063999#1/1\",\"20\":\"v-7446a652\",\"21\":\"v-7446a652#1\",\"22\":\"v-7446a652#1/0\",\"23\":\"v-7446a652#1/1\",\"24\":\"v-42a53056\",\"25\":\"v-42a53056#1\",\"26\":\"v-42a53056#1/0\",\"27\":\"v-42a53056#1/1\",\"28\":\"v-42a53056#2\",\"29\":\"v-42a53056#2/0\",\"30\":\"v-42a53056#3\",\"31\":\"v-42a53056#3/0\",\"32\":\"v-42a53056#4\",\"33\":\"v-42a53056#4/0\",\"34\":\"v-42a53056#5\",\"35\":\"v-42a53056#5/0\",\"36\":\"v-42a53056#6\",\"37\":\"v-42a53056#6/0\",\"38\":\"v-42a53056#7\",\"39\":\"v-42a53056#7/0\",\"40\":\"v-42a53056#8\",\"41\":\"v-42a53056#8/0\",\"42\":\"v-42a53056#9\",\"43\":\"v-42a53056#9/0\",\"44\":\"v-755b04cd\",\"45\":\"v-755b04cd#1\",\"46\":\"v-755b04cd#1/0\",\"47\":\"v-755b04cd#1/1\",\"48\":\"v-755b04cd#1/2\",\"49\":\"v-755b04cd#1/3\",\"50\":\"v-755b04cd#1/4\",\"51\":\"v-755b04cd#1/5\",\"52\":\"v-755b04cd#1/6\",\"53\":\"v-6ed3b755\",\"54\":\"v-6ed3b755#1\",\"55\":\"v-6ed3b755#1/0\",\"56\":\"v-6ed3b755#1/1\",\"57\":\"v-6ed3b755#2\",\"58\":\"v-6ed3b755#2/0\",\"59\":\"v-6ed3b755#2/1\",\"60\":\"v-6ed3b755#2/2\",\"61\":\"v-6ed3b755#2/3\",\"62\":\"v-6ed3b755#2/4\",\"63\":\"v-6ed3b755#2/5\",\"64\":\"v-85fa9b2a\",\"65\":\"v-85fa9b2a#1\",\"66\":\"v-85fa9b2a#2\",\"67\":\"v-85fa9b2a#2/0\",\"68\":\"v-85fa9b2a#2/1\",\"69\":\"v-85fa9b2a#2/2\",\"70\":\"v-85fa9b2a#3\",\"71\":\"v-85fa9b2a#3/0\",\"72\":\"v-85fa9b2a#4\",\"73\":\"v-85fa9b2a#4/1\",\"74\":\"v-34d2cb8d\",\"75\":\"v-34d2cb8d#1\",\"76\":\"v-34d2cb8d#1/0\",\"77\":\"v-34d2cb8d#1/1\",\"78\":\"v-34d2cb8d#2\",\"79\":\"v-34d2cb8d#2/0\",\"80\":\"v-34d2cb8d#2/1\",\"81\":\"v-12e7e6d6\",\"82\":\"v-12e7e6d6#1\",\"83\":\"v-12e7e6d6#1/0\",\"84\":\"v-12e7e6d6#2\",\"85\":\"v-12e7e6d6#2/1\",\"86\":\"v-12e7e6d6#2/2\",\"87\":\"v-12e7e6d6#2/3\",\"88\":\"v-12e7e6d6#2/4\",\"89\":\"v-12e7e6d6#2/5\",\"90\":\"v-12e7e6d6#2/6\",\"91\":\"v-12e7e6d6#2/7\",\"92\":\"v-12e7e6d6#2/8\",\"93\":\"v-12e7e6d6#2/9\",\"94\":\"v-12e7e6d6#2/10\",\"95\":\"v-12e7e6d6#2/11\",\"96\":\"v-12e7e6d6#2/12\",\"97\":\"v-12e7e6d6#2/13\",\"98\":\"v-12e7e6d6#2/14\",\"99\":\"v-12e7e6d6#2/15\",\"100\":\"v-12e7e6d6#2/16\",\"101\":\"v-12e7e6d6#2/17\",\"102\":\"v-12e7e6d6#2/18\",\"103\":\"v-12e7e6d6#2/19\",\"104\":\"v-12e7e6d6#2/20\",\"105\":\"v-12e7e6d6#2/21\",\"106\":\"v-12e7e6d6#2/22\",\"107\":\"v-12e7e6d6#2/23\",\"108\":\"v-12e7e6d6#2/24\",\"109\":\"v-12e7e6d6#2/25\",\"110\":\"v-12e7e6d6#2/26\",\"111\":\"v-12e7e6d6#2/27\",\"112\":\"v-12e7e6d6#2/28\",\"113\":\"v-12e7e6d6#2/29\",\"114\":\"v-12e7e6d6#2/30\",\"115\":\"v-12e7e6d6#2/31\",\"116\":\"v-12e7e6d6#2/32\",\"117\":\"v-12e7e6d6#2/33\",\"118\":\"v-12e7e6d6#2/34\",\"119\":\"v-12e7e6d6#2/35\",\"120\":\"v-12e7e6d6#2/36\",\"121\":\"v-12e7e6d6#2/37\",\"122\":\"v-12e7e6d6#2/38\",\"123\":\"v-12e7e6d6#2/39\",\"124\":\"v-12e7e6d6#2/40\",\"125\":\"v-12e7e6d6#2/41\",\"126\":\"v-12e7e6d6#2/42\",\"127\":\"v-12e7e6d6#2/43\",\"128\":\"v-12e7e6d6#2/44\",\"129\":\"v-12e7e6d6#2/45\",\"130\":\"v-12e7e6d6#2/46\",\"131\":\"v-12e7e6d6#2/47\",\"132\":\"v-12e7e6d6#2/48\",\"133\":\"v-12e7e6d6#2/49\",\"134\":\"v-12e7e6d6#3\",\"135\":\"v-12e7e6d6#3/50\",\"136\":\"v-12e7e6d6#3/51\",\"137\":\"v-12e7e6d6#3/52\",\"138\":\"v-12e7e6d6#3/53\",\"139\":\"v-12e7e6d6#3/54\",\"140\":\"v-12e7e6d6#3/55\",\"141\":\"v-12e7e6d6#3/56\",\"142\":\"v-12e7e6d6#3/57\",\"143\":\"v-12e7e6d6#3/58\",\"144\":\"v-12e7e6d6#3/59\",\"145\":\"v-12e7e6d6#3/60\",\"146\":\"v-12e7e6d6#3/61\",\"147\":\"v-12e7e6d6#3/62\",\"148\":\"v-12e7e6d6#3/63\",\"149\":\"v-12e7e6d6#3/64\",\"150\":\"v-12e7e6d6#3/65\",\"151\":\"v-12e7e6d6#3/66\",\"152\":\"v-12e7e6d6#3/67\",\"153\":\"v-12e7e6d6#3/68\",\"154\":\"v-12e7e6d6#3/69\",\"155\":\"v-12e7e6d6#3/70\",\"156\":\"v-12e7e6d6#3/71\",\"157\":\"v-12e7e6d6#3/72\",\"158\":\"v-12e7e6d6#3/73\",\"159\":\"v-12e7e6d6#3/74\",\"160\":\"v-12e7e6d6#3/75\",\"161\":\"v-12e7e6d6#3/76\",\"162\":\"v-12e7e6d6#3/77\",\"163\":\"v-12e7e6d6#3/78\",\"164\":\"v-12e7e6d6#3/79\",\"165\":\"v-12e7e6d6#3/80\",\"166\":\"v-12e7e6d6#3/81\",\"167\":\"v-12e7e6d6#3/82\",\"168\":\"v-12e7e6d6#3/83\",\"169\":\"v-12e7e6d6#3/84\",\"170\":\"v-12e7e6d6#3/85\",\"171\":\"v-12e7e6d6#3/86\",\"172\":\"v-12e7e6d6#3/87\",\"173\":\"v-12e7e6d6#3/88\",\"174\":\"v-12e7e6d6#3/89\",\"175\":\"v-12e7e6d6#3/90\",\"176\":\"v-12e7e6d6#3/91\",\"177\":\"v-12e7e6d6#3/92\",\"178\":\"v-12e7e6d6#3/93\",\"179\":\"v-12e7e6d6#3/94\",\"180\":\"v-12e7e6d6#3/95\",\"181\":\"v-12e7e6d6#3/96\",\"182\":\"v-12e7e6d6#3/97\",\"183\":\"v-12e7e6d6#3/98\",\"184\":\"v-12e7e6d6#3/99\",\"185\":\"v-12e7e6d6#3/100\",\"186\":\"v-12e7e6d6#3/101\",\"187\":\"v-12e7e6d6#3/102\",\"188\":\"v-12e7e6d6#3/103\",\"189\":\"v-12e7e6d6#3/104\",\"190\":\"v-12e7e6d6#3/105\",\"191\":\"v-12e7e6d6#3/106\",\"192\":\"v-12e7e6d6#3/107\",\"193\":\"v-12e7e6d6#3/108\",\"194\":\"v-12e7e6d6#3/109\",\"195\":\"v-12e7e6d6#3/110\",\"196\":\"v-12e7e6d6#3/111\",\"197\":\"v-12e7e6d6#3/112\",\"198\":\"v-12e7e6d6#3/113\",\"199\":\"v-12e7e6d6#3/114\",\"200\":\"v-12e7e6d6#3/115\",\"201\":\"v-12e7e6d6#3/116\",\"202\":\"v-12e7e6d6#3/117\",\"203\":\"v-12e7e6d6#3/118\",\"204\":\"v-12e7e6d6#3/119\",\"205\":\"v-12e7e6d6#3/120\",\"206\":\"v-12e7e6d6#3/121\",\"207\":\"v-12e7e6d6#3/122\",\"208\":\"v-12e7e6d6#3/123\",\"209\":\"v-12e7e6d6#4\",\"210\":\"v-12e7e6d6#5\",\"211\":\"v-12e7e6d6#5/124\",\"212\":\"v-12e7e6d6#5/125\",\"213\":\"v-12e7e6d6#5/126\",\"214\":\"v-12e7e6d6#5/127\",\"215\":\"v-12e7e6d6#5/128\",\"216\":\"v-12e7e6d6#5/129\",\"217\":\"v-12e7e6d6#5/130\",\"218\":\"v-12e7e6d6#5/131\",\"219\":\"v-12e7e6d6#5/132\",\"220\":\"v-12e7e6d6#5/133\",\"221\":\"v-12e7e6d6#5/134\",\"222\":\"v-12e7e6d6#5/135\",\"223\":\"v-12e7e6d6#5/136\",\"224\":\"v-12e7e6d6#5/137\",\"225\":\"v-12e7e6d6#5/138\",\"226\":\"v-12e7e6d6#5/139\",\"227\":\"v-12e7e6d6#5/140\",\"228\":\"v-12e7e6d6#5/141\",\"229\":\"v-12e7e6d6#5/142\",\"230\":\"v-12e7e6d6#5/143\",\"231\":\"v-12e7e6d6#6\",\"232\":\"v-12e7e6d6#6/0\",\"233\":\"v-12e7e6d6#6/1\",\"234\":\"v-12e7e6d6#7\",\"235\":\"v-12e7e6d6#7/0\",\"236\":\"v-12e7e6d6#7/1\",\"237\":\"v-12e7e6d6#8\",\"238\":\"v-12e7e6d6#8/0\",\"239\":\"v-12e7e6d6#8/1\",\"240\":\"v-12e7e6d6#8/2\",\"241\":\"v-12e7e6d6#8/3\",\"242\":\"v-12e7e6d6#8/4\",\"243\":\"v-12e7e6d6#9\",\"244\":\"v-12e7e6d6#9/0\",\"245\":\"v-acb10be2\",\"246\":\"v-acb10be2#1\",\"247\":\"v-acb10be2#1/0\",\"248\":\"v-acb10be2#1/1\",\"249\":\"v-acb10be2#1/2\",\"250\":\"v-acb10be2#2\",\"251\":\"v-acb10be2#2/0\",\"252\":\"v-acb10be2#3\",\"253\":\"v-acb10be2#3/0\",\"254\":\"v-acb10be2#3/1\",\"255\":\"v-acb10be2#4\",\"256\":\"v-acb10be2#4/2\",\"257\":\"v-acb10be2#5\",\"258\":\"v-acb10be2#5/0\",\"259\":\"v-acb10be2#5/1\",\"260\":\"v-138687e8\",\"261\":\"v-138687e8#1\",\"262\":\"v-138687e8#1/0\",\"263\":\"v-138687e8#2\",\"264\":\"v-138687e8#2/1\",\"265\":\"v-138687e8#2/2\",\"266\":\"v-138687e8#2/3\",\"267\":\"v-138687e8#3\",\"268\":\"v-138687e8#3/4\",\"269\":\"v-138687e8#3/5\",\"270\":\"v-138687e8#4\",\"271\":\"v-138687e8#4/6\",\"272\":\"v-138687e8#4/7\",\"273\":\"v-138687e8#5\",\"274\":\"v-138687e8#5/0\",\"275\":\"v-138687e8#6\",\"276\":\"v-138687e8#6/1\",\"277\":\"v-138687e8#7\",\"278\":\"v-138687e8#7/2\",\"279\":\"v-138687e8#7/3\",\"280\":\"v-e6d8a19c\",\"281\":\"v-e6d8a19c#1\",\"282\":\"v-e6d8a19c#1/0\",\"283\":\"v-e6d8a19c#1/1\",\"284\":\"v-e6d8a19c#2\",\"285\":\"v-e6d8a19c#2/0\",\"286\":\"v-e6d8a19c#2/1\",\"287\":\"v-e6d8a19c#2/2\",\"288\":\"v-e6d8a19c#2/3\",\"289\":\"v-e6d8a19c#2/4\",\"290\":\"v-e6d8a19c#3\",\"291\":\"v-e6d8a19c#3/0\",\"292\":\"v-e6d8a19c#3/1\",\"293\":\"v-e6d8a19c#3/2\",\"294\":\"v-e6d8a19c#3/3\",\"295\":\"v-e6d8a19c#3/4\",\"296\":\"v-e6d8a19c#3/5\",\"297\":\"v-e6d8a19c#3/6\",\"298\":\"v-e6d8a19c#3/7\",\"299\":\"v-e6d8a19c#3/8\",\"300\":\"v-e6d8a19c#3/9\",\"301\":\"v-e6d8a19c#3/10\",\"302\":\"v-e6d8a19c#3/11\",\"303\":\"v-e6d8a19c#3/12\",\"304\":\"v-e6d8a19c#3/13\",\"305\":\"v-e6d8a19c#3/14\",\"306\":\"v-e6d8a19c#3/15\",\"307\":\"v-e6d8a19c#3/16\",\"308\":\"v-e6d8a19c#3/17\",\"309\":\"v-e6d8a19c#3/18\",\"310\":\"v-e6d8a19c#3/19\",\"311\":\"v-e6d8a19c#3/20\",\"312\":\"v-e6d8a19c#3/21\",\"313\":\"v-e6d8a19c#3/22\",\"314\":\"v-e6d8a19c#3/23\",\"315\":\"v-e6d8a19c#3/24\",\"316\":\"v-e6d8a19c#3/25\",\"317\":\"v-e6d8a19c#3/26\",\"318\":\"v-e6d8a19c#3/27\",\"319\":\"v-e6d8a19c#3/28\",\"320\":\"v-e6d8a19c#3/29\",\"321\":\"v-e6d8a19c#3/30\",\"322\":\"v-e6d8a19c#3/31\",\"323\":\"v-e6d8a19c#3/32\",\"324\":\"v-e6d8a19c#3/33\",\"325\":\"v-e6d8a19c#3/34\",\"326\":\"v-e6d8a19c#3/35\",\"327\":\"v-e6d8a19c#3/36\",\"328\":\"v-e6d8a19c#3/37\",\"329\":\"v-e6d8a19c#3/38\",\"330\":\"v-e6d8a19c#3/39\",\"331\":\"v-e6d8a19c#3/40\",\"332\":\"v-e6d8a19c#3/41\",\"333\":\"v-e6d8a19c#3/42\",\"334\":\"v-32253aef\",\"335\":\"v-32253aef#1\",\"336\":\"v-32253aef#1/0\",\"337\":\"v-32253aef#2\",\"338\":\"v-32253aef#3\",\"339\":\"v-32253aef#3/0\",\"340\":\"v-32253aef#3/1\",\"341\":\"v-32253aef#3/2\",\"342\":\"v-32253aef#3/3\",\"343\":\"v-32253aef#3/4\",\"344\":\"v-32253aef#4\",\"345\":\"v-32253aef#4/0\",\"346\":\"v-32253aef#4/1\",\"347\":\"v-32253aef#4/2\",\"348\":\"v-32253aef#4/3\",\"349\":\"v-08a5d2dc\",\"350\":\"v-08a5d2dc#1\",\"351\":\"v-08a5d2dc#1/0\",\"352\":\"v-08a5d2dc#1/1\",\"353\":\"v-08a5d2dc#1/2\",\"354\":\"v-08a5d2dc#1/3\",\"355\":\"v-08a5d2dc#1/4\",\"356\":\"v-569c19e4\",\"357\":\"v-569c19e4#1\",\"358\":\"v-569c19e4#2\",\"359\":\"v-569c19e4#2/0\",\"360\":\"v-12785340\",\"361\":\"v-12785340#1\",\"362\":\"v-12785340#1/0\",\"363\":\"v-12785340#1/1\",\"364\":\"v-279bbe06\",\"365\":\"v-279bbe06#1\",\"366\":\"v-279bbe06#2\",\"367\":\"v-279bbe06#2/0\",\"368\":\"v-b5c211be\",\"369\":\"v-b5c211be#1\",\"370\":\"v-b5c211be#2\",\"371\":\"v-b5c211be#2/0\",\"372\":\"v-b5c211be#2/1\",\"373\":\"v-b5c211be#3\",\"374\":\"v-b5c211be#3/2\",\"375\":\"v-b5c211be#3/3\",\"376\":\"v-b5c211be#3/4\",\"377\":\"v-b5c211be#3/5\",\"378\":\"v-b5c211be#3/6\",\"379\":\"v-b5c211be#3/7\",\"380\":\"v-b5c211be#3/8\",\"381\":\"v-b5c211be#3/9\",\"382\":\"v-b5c211be#3/10\",\"383\":\"v-b5c211be#3/11\",\"384\":\"v-b5c211be#3/12\",\"385\":\"v-b5c211be#3/13\",\"386\":\"v-b5c211be#3/14\",\"387\":\"v-b5c211be#3/15\",\"388\":\"v-b5c211be#3/16\",\"389\":\"v-b5c211be#4\",\"390\":\"v-b5c211be#5\",\"391\":\"v-b5c211be#5/17\",\"392\":\"v-b5c211be#5/18\",\"393\":\"v-0aa7fc58\",\"394\":\"v-0aa7fc58#1\",\"395\":\"v-0aa7fc58#2\",\"396\":\"v-0aa7fc58#2/0\",\"397\":\"v-0aa7fc58#3\",\"398\":\"v-0aa7fc58#3/1\",\"399\":\"v-0aa7fc58#3/2\",\"400\":\"v-0aa7fc58#3/3\",\"401\":\"v-0aa7fc58#3/4\",\"402\":\"v-0aa7fc58#3/5\",\"403\":\"v-0aa7fc58#3/6\",\"404\":\"v-6f612ca0\",\"405\":\"v-6f612ca0#1\",\"406\":\"v-6f612ca0#1/0\",\"407\":\"v-6f612ca0#1/1\",\"408\":\"v-6f612ca0#2\",\"409\":\"v-6f612ca0#2/0\",\"410\":\"v-6f612ca0#2/1\",\"411\":\"v-6f612ca0#3\",\"412\":\"v-6f612ca0#3/0\",\"413\":\"v-6f612ca0#4\",\"414\":\"v-6f612ca0#4/1\",\"415\":\"v-6f612ca0#4/2\",\"416\":\"v-6f612ca0#4/3\",\"417\":\"v-80b1ad58\",\"418\":\"v-80b1ad58#1\",\"419\":\"v-80b1ad58#1/0\",\"420\":\"v-80b1ad58#1/1\",\"421\":\"v-80b1ad58#2\",\"422\":\"v-80b1ad58#2/0\",\"423\":\"v-80b1ad58#2/1\",\"424\":\"v-80b1ad58#3\",\"425\":\"v-80b1ad58#3/0\",\"426\":\"v-80b1ad58#4\",\"427\":\"v-80b1ad58#4/1\",\"428\":\"v-80b1ad58#4/2\",\"429\":\"v-80b1ad58#4/3\",\"430\":\"v-d0736a32\",\"431\":\"v-d0736a32#1\",\"432\":\"v-d0736a32#1/0\",\"433\":\"v-d0736a32#1/1\",\"434\":\"v-d0736a32#2\",\"435\":\"v-d0736a32#2/0\",\"436\":\"v-d0736a32#2/1\",\"437\":\"v-d0736a32#2/2\",\"438\":\"v-d0736a32#2/3\",\"439\":\"v-d0736a32#2/4\",\"440\":\"v-d0736a32#2/5\",\"441\":\"v-d0736a32#2/6\",\"442\":\"v-d0736a32#2/7\",\"443\":\"v-d0736a32#2/8\",\"444\":\"v-d0736a32#2/9\",\"445\":\"v-d0736a32#2/10\",\"446\":\"v-d0736a32#2/11\",\"447\":\"v-d0736a32#2/12\",\"448\":\"v-d0736a32#2/13\",\"449\":\"v-d0736a32#2/14\",\"450\":\"v-d0736a32#2/15\",\"451\":\"v-d0736a32#2/16\",\"452\":\"v-d0736a32#2/17\",\"453\":\"v-d0736a32#2/18\",\"454\":\"v-d0736a32#2/19\",\"455\":\"v-d0736a32#2/20\",\"456\":\"v-d0736a32#2/21\",\"457\":\"v-d0736a32#2/22\",\"458\":\"v-d0736a32#2/23\",\"459\":\"v-d0736a32#2/24\",\"460\":\"v-d0736a32#2/25\",\"461\":\"v-d0736a32#2/26\",\"462\":\"v-d0736a32#2/27\",\"463\":\"v-d0736a32#2/28\",\"464\":\"v-d0736a32#2/29\",\"465\":\"v-d0736a32#2/30\",\"466\":\"v-d0736a32#2/31\",\"467\":\"v-d0736a32#2/32\",\"468\":\"v-d0736a32#2/33\",\"469\":\"v-d0736a32#2/34\",\"470\":\"v-d0736a32#2/35\",\"471\":\"v-d0736a32#2/36\",\"472\":\"v-d0736a32#2/37\",\"473\":\"v-d0736a32#2/38\",\"474\":\"v-d0736a32#2/39\",\"475\":\"v-d0736a32#2/40\",\"476\":\"v-d0736a32#2/41\",\"477\":\"v-d0736a32#2/42\",\"478\":\"v-d0736a32#2/43\",\"479\":\"v-d0736a32#2/44\",\"480\":\"v-d0736a32#2/45\",\"481\":\"v-d0736a32#2/46\",\"482\":\"v-d0736a32#2/47\",\"483\":\"v-d0736a32#2/48\",\"484\":\"v-d0736a32#2/49\",\"485\":\"v-d0736a32#3\",\"486\":\"v-d0736a32#3/0\",\"487\":\"v-d0736a32#3/1\",\"488\":\"v-d0736a32#3/2\",\"489\":\"v-d0736a32#3/3\",\"490\":\"v-d0736a32#3/4\",\"491\":\"v-5b209a76\",\"492\":\"v-5b209a76#1\",\"493\":\"v-5b209a76#1/0\",\"494\":\"v-5b209a76#2\",\"495\":\"v-5b209a76#2/1\",\"496\":\"v-7b99c310\",\"497\":\"v-7b99c310#1\",\"498\":\"v-7b99c310#1/0\",\"499\":\"v-7b99c310#2\",\"500\":\"v-7b99c310#2/1\",\"501\":\"v-7b99c310#2/2\",\"502\":\"v-3aa4eac4\",\"503\":\"v-3aa4eac4#1\",\"504\":\"v-3aa4eac4#1/0\",\"505\":\"v-6469e50c\",\"506\":\"v-6469e50c#1\",\"507\":\"v-6469e50c#1/0\",\"508\":\"v-740c2a20\",\"509\":\"v-740c2a20#1\",\"510\":\"v-740c2a20#1/0\",\"511\":\"v-2a2293f6\",\"512\":\"v-2a2293f6#1\",\"513\":\"v-2a2293f6#1/0\",\"514\":\"v-2a2293f6#2\",\"515\":\"v-2a2293f6#2/1\",\"516\":\"v-05eded4b\",\"517\":\"v-05eded4b#1\",\"518\":\"v-05eded4b#1/0\",\"519\":\"v-05eded4b#2\",\"520\":\"v-05eded4b#2/1\",\"521\":\"v-05eded4b#2/2\",\"522\":\"v-05eded4b#2/3\",\"523\":\"v-05eded4b#2/4\",\"524\":\"v-05eded4b#2/5\",\"525\":\"v-05eded4b#2/6\",\"526\":\"v-d4419d1a\",\"527\":\"v-d4419d1a#1\",\"528\":\"v-d4419d1a#1/0\",\"529\":\"v-d4419d1a#2\",\"530\":\"v-d4419d1a#3\",\"531\":\"v-d4419d1a#3/1\",\"532\":\"v-d4419d1a#3/2\",\"533\":\"v-d4419d1a#3/3\",\"534\":\"v-d4419d1a#4\",\"535\":\"v-d4419d1a#4/4\",\"536\":\"v-d4419d1a#5\",\"537\":\"v-d4419d1a#5/5\",\"538\":\"v-d4419d1a#6\",\"539\":\"v-d4419d1a#6/6\",\"540\":\"v-d4419d1a#7\",\"541\":\"v-d4419d1a#7/7\",\"542\":\"v-d4419d1a#7/8\",\"543\":\"v-d4419d1a#7/9\",\"544\":\"v-d4419d1a#8\",\"545\":\"v-d4419d1a#8/0\",\"546\":\"v-d4419d1a#8/1\",\"547\":\"v-d4419d1a#8/2\",\"548\":\"v-d4419d1a#8/3\",\"549\":\"v-d4419d1a#8/4\",\"550\":\"v-d4419d1a#9\",\"551\":\"v-d4419d1a#9/5\",\"552\":\"v-d4419d1a#9/6\",\"553\":\"v-d4419d1a#10\",\"554\":\"v-d4419d1a#10/0\",\"555\":\"v-d4419d1a#10/1\",\"556\":\"v-fb0ddf56\",\"557\":\"v-fb0ddf56#1\",\"558\":\"v-fb0ddf56#1/0\",\"559\":\"v-1e557e01\",\"560\":\"v-1e557e01#1\",\"561\":\"v-1e557e01#1/0\",\"562\":\"v-1e557e01#2\",\"563\":\"v-1e557e01#2/1\",\"564\":\"v-1e557e01#2/2\",\"565\":\"v-1e557e01#2/3\",\"566\":\"v-1e557e01#2/4\",\"567\":\"v-1e557e01#2/5\",\"568\":\"v-1e557e01#3\",\"569\":\"v-1e557e01#3/0\",\"570\":\"v-1e557e01#3/1\",\"571\":\"v-862106b8\",\"572\":\"v-862106b8#1\",\"573\":\"v-862106b8#1/0\",\"574\":\"v-862106b8#2\",\"575\":\"v-862106b8#2/1\",\"576\":\"v-2908ef5a\",\"577\":\"v-2908ef5a#1\",\"578\":\"v-2908ef5a#1/0\",\"579\":\"v-2908ef5a#2\",\"580\":\"v-2908ef5a#2/1\",\"581\":\"v-7d239a72\",\"582\":\"v-7d239a72#1\",\"583\":\"v-7d239a72#1/0\",\"584\":\"v-7d239a72#2\",\"585\":\"v-7d239a72#2/1\",\"586\":\"v-7d239a72#3\",\"587\":\"v-7d239a72#3/0\",\"588\":\"v-37950ebd\",\"589\":\"v-37950ebd#1\",\"590\":\"v-37950ebd#1/0\",\"591\":\"v-37950ebd#2\",\"592\":\"v-37950ebd#2/1\",\"593\":\"v-37950ebd#2/2\",\"594\":\"v-37950ebd#2/3\",\"595\":\"v-37950ebd#3\",\"596\":\"v-37950ebd#3/4\",\"597\":\"v-37950ebd#4\",\"598\":\"v-37950ebd#4/0\",\"599\":\"v-37950ebd#4/1\",\"600\":\"v-78eb7bfc\",\"601\":\"v-78eb7bfc#1\",\"602\":\"v-78eb7bfc#1/0\",\"603\":\"v-78eb7bfc#2\",\"604\":\"v-78eb7bfc#2/1\",\"605\":\"v-78eb7bfc#2/2\",\"606\":\"v-78eb7bfc#3\",\"607\":\"v-78eb7bfc#4\",\"608\":\"v-78eb7bfc#4/0\",\"609\":\"v-78eb7bfc#4/1\",\"610\":\"v-78eb7bfc#4/2\",\"611\":\"v-78eb7bfc#5\",\"612\":\"v-78eb7bfc#5/3\",\"613\":\"v-78eb7bfc#5/4\",\"614\":\"v-78eb7bfc#5/5\",\"615\":\"v-0b9108e4\",\"616\":\"v-0b9108e4#1\",\"617\":\"v-0b9108e4#1/0\",\"618\":\"v-0b9108e4#2\",\"619\":\"v-0b9108e4#2/1\",\"620\":\"v-1239b7d3\",\"621\":\"v-1239b7d3#1\",\"622\":\"v-1239b7d3#1/0\",\"623\":\"v-1239b7d3#1/1\",\"624\":\"v-1239b7d3#1/2\",\"625\":\"v-1239b7d3#1/3\",\"626\":\"v-2e0aae40\",\"627\":\"v-2e0aae40#1\",\"628\":\"v-2e0aae40#1/0\",\"629\":\"v-2e0aae40#1/1\",\"630\":\"v-41687980\",\"631\":\"v-41687980#1\",\"632\":\"v-41687980#1/0\",\"633\":\"v-1029dfba\",\"634\":\"v-1029dfba#1\",\"635\":\"v-1029dfba#1/0\",\"636\":\"v-1029dfba#2\",\"637\":\"v-1029dfba#2/1\",\"638\":\"v-1029dfba#3\",\"639\":\"v-1029dfba#3/0\",\"640\":\"v-4ee5614e\",\"641\":\"v-4ee5614e#1\",\"642\":\"v-4ee5614e#1/0\",\"643\":\"v-4ee5614e#2\",\"644\":\"v-4ee5614e#2/1\",\"645\":\"v-4ee5614e#2/2\",\"646\":\"v-4ee5614e#2/3\",\"647\":\"v-4ee5614e#2/4\",\"648\":\"v-4ee5614e#3\",\"649\":\"v-4ee5614e#3/0\",\"650\":\"v-4ee5614e#3/1\",\"651\":\"v-4ee5614e#3/2\",\"652\":\"v-4ee5614e#4\",\"653\":\"v-4ee5614e#4/0\",\"654\":\"v-4ee5614e#4/1\",\"655\":\"v-4ee5614e#4/2\",\"656\":\"v-4ee5614e#4/3\",\"657\":\"v-4ee5614e#4/4\",\"658\":\"v-4ee5614e#5\",\"659\":\"v-4ee5614e#5/0\",\"660\":\"v-05537b02\",\"661\":\"v-05537b02#1\",\"662\":\"v-05537b02#1/0\",\"663\":\"v-05537b02#2\",\"664\":\"v-05537b02#2/1\",\"665\":\"v-05537b02#3\",\"666\":\"v-05537b02#3/0\",\"667\":\"v-05537b02#3/1\",\"668\":\"v-05537b02#3/2\",\"669\":\"v-05537b02#3/3\",\"670\":\"v-05537b02#4\",\"671\":\"v-05537b02#4/0\",\"672\":\"v-a0ae011a\",\"673\":\"v-a0ae011a#0/0\",\"674\":\"v-19b171d4\",\"675\":\"v-19b171d4#0/0\",\"676\":\"v-cbd12854\",\"677\":\"v-cbd12854#1\",\"678\":\"v-cbd12854#1/0\",\"679\":\"v-cbd12854#2\",\"680\":\"v-cbd12854#2/1\",\"681\":\"v-cbd12854#3\",\"682\":\"v-cbd12854#3/0\",\"683\":\"v-06ac991b\",\"684\":\"v-06ac991b#1\",\"685\":\"v-06ac991b#1/0\",\"686\":\"v-06ac991b#2\",\"687\":\"v-06ac991b#2/1\",\"688\":\"v-06ac991b#2/2\",\"689\":\"v-06ac991b#2/3\",\"690\":\"v-3dde1764\",\"691\":\"v-3dde1764#0/0\",\"692\":\"v-3f9877cf\",\"693\":\"v-3f9877cf#1\",\"694\":\"v-3f9877cf#1/0\",\"695\":\"v-3f9877cf#2\",\"696\":\"v-3f9877cf#2/1\",\"697\":\"v-3ac3eb0a\",\"698\":\"v-3ac3eb0a#1\",\"699\":\"v-3ac3eb0a#1/0\",\"700\":\"v-3ac3eb0a#2\",\"701\":\"v-3ac3eb0a#2/1\",\"702\":\"v-3ac3eb0a#3\",\"703\":\"v-3ac3eb0a#3/0\",\"704\":\"v-00bf25ec\",\"705\":\"v-00bf25ec#1\",\"706\":\"v-00bf25ec#1/0\",\"707\":\"v-00bf25ec#2\",\"708\":\"v-00bf25ec#2/1\",\"709\":\"v-08720c4a\",\"710\":\"v-08720c4a#1\",\"711\":\"v-08720c4a#1/0\",\"712\":\"v-08720c4a#2\",\"713\":\"v-08720c4a#2/1\",\"714\":\"v-08720c4a#2/2\",\"715\":\"v-08720c4a#2/3\",\"716\":\"v-08720c4a#2/4\",\"717\":\"v-08720c4a#2/5\",\"718\":\"v-42c4d318\",\"719\":\"v-42c4d318#1\",\"720\":\"v-42c4d318#1/0\",\"721\":\"v-42c4d318#2\",\"722\":\"v-42c4d318#2/1\",\"723\":\"v-42c4d318#3\",\"724\":\"v-42c4d318#3/0\",\"725\":\"v-42c4d318#3/1\",\"726\":\"v-42c4d318#3/2\",\"727\":\"v-42c4d318#3/3\",\"728\":\"v-42c4d318#3/4\",\"729\":\"v-6e9e0eb6\",\"730\":\"v-6e9e0eb6#1\",\"731\":\"v-6e9e0eb6#1/0\",\"732\":\"v-6e9e0eb6#2\",\"733\":\"v-6e9e0eb6#2/1\",\"734\":\"v-6e9e0eb6#2/2\",\"735\":\"v-5cd5165e\",\"736\":\"v-5cd5165e#1\",\"737\":\"v-5cd5165e#2\",\"738\":\"v-5cd5165e#2/0\",\"739\":\"v-5cd5165e#2/1\",\"740\":\"v-5cd5165e#2/2\",\"741\":\"v-5cd5165e#2/3\",\"742\":\"v-5cd5165e#2/4\",\"743\":\"v-5cd5165e#2/5\",\"744\":\"v-5cd5165e#2/6\",\"745\":\"v-5cd5165e#2/7\",\"746\":\"v-5cd5165e#2/8\",\"747\":\"v-5cd5165e#2/9\",\"748\":\"v-5cd5165e#2/10\",\"749\":\"v-5cd5165e#2/11\",\"750\":\"v-5cd5165e#2/12\",\"751\":\"v-5cd5165e#2/13\",\"752\":\"v-5cd5165e#2/14\",\"753\":\"v-5cd5165e#2/15\",\"754\":\"v-5cd5165e#2/16\",\"755\":\"v-5cd5165e#3\",\"756\":\"v-5cd5165e#4\",\"757\":\"v-5cd5165e#4/17\",\"758\":\"v-5cd5165e#4/18\",\"759\":\"v-5cd5165e#4/19\",\"760\":\"v-5cd5165e#4/20\",\"761\":\"v-5cd5165e#4/21\",\"762\":\"v-5cd5165e#4/22\",\"763\":\"v-5cd5165e#4/23\",\"764\":\"v-5cd5165e#4/24\",\"765\":\"v-5cd5165e#4/25\",\"766\":\"v-5cd5165e#4/26\",\"767\":\"v-5cd5165e#4/27\",\"768\":\"v-5cd5165e#4/28\",\"769\":\"v-5cd5165e#4/29\",\"770\":\"v-5cd5165e#4/30\",\"771\":\"v-5cd5165e#4/31\",\"772\":\"v-5cd5165e#4/32\",\"773\":\"v-5cd5165e#4/33\",\"774\":\"v-5cd5165e#5\",\"775\":\"v-5cd5165e#6\",\"776\":\"v-5cd5165e#6/34\",\"777\":\"v-5cd5165e#6/35\",\"778\":\"v-5cd5165e#6/36\",\"779\":\"v-5cd5165e#6/37\",\"780\":\"v-5cd5165e#6/38\",\"781\":\"v-5cd5165e#6/39\",\"782\":\"v-5cd5165e#6/40\",\"783\":\"v-5cd5165e#6/41\",\"784\":\"v-5cd5165e#6/42\",\"785\":\"v-5cd5165e#6/43\",\"786\":\"v-5cd5165e#6/44\",\"787\":\"v-5cd5165e#6/45\",\"788\":\"v-5cd5165e#6/46\",\"789\":\"v-5cd5165e#6/47\",\"790\":\"v-5cd5165e#6/48\",\"791\":\"v-5cd5165e#6/49\",\"792\":\"v-5cd5165e#6/50\",\"793\":\"v-5cd5165e#7\",\"794\":\"v-5cd5165e#8\",\"795\":\"v-5cd5165e#8/51\",\"796\":\"v-5cd5165e#8/52\",\"797\":\"v-5cd5165e#8/53\",\"798\":\"v-5cd5165e#8/54\",\"799\":\"v-5cd5165e#8/55\",\"800\":\"v-5cd5165e#8/56\",\"801\":\"v-5cd5165e#8/57\",\"802\":\"v-5cd5165e#8/58\",\"803\":\"v-5cd5165e#8/59\",\"804\":\"v-5cd5165e#8/60\",\"805\":\"v-5cd5165e#8/61\",\"806\":\"v-5cd5165e#8/62\",\"807\":\"v-5cd5165e#8/63\",\"808\":\"v-5cd5165e#8/64\",\"809\":\"v-5cd5165e#8/65\",\"810\":\"v-5cd5165e#8/66\",\"811\":\"v-5cd5165e#8/67\",\"812\":\"v-5cd5165e#9\",\"813\":\"v-5cd5165e#10\",\"814\":\"v-5cd5165e#10/68\",\"815\":\"v-5cd5165e#10/69\",\"816\":\"v-5cd5165e#10/70\",\"817\":\"v-5cd5165e#10/71\",\"818\":\"v-5cd5165e#10/72\",\"819\":\"v-5cd5165e#10/73\",\"820\":\"v-5cd5165e#10/74\",\"821\":\"v-5cd5165e#10/75\",\"822\":\"v-5cd5165e#10/76\",\"823\":\"v-5cd5165e#10/77\",\"824\":\"v-5cd5165e#10/78\",\"825\":\"v-5cd5165e#10/79\",\"826\":\"v-5cd5165e#10/80\",\"827\":\"v-5cd5165e#10/81\",\"828\":\"v-5cd5165e#10/82\",\"829\":\"v-5cd5165e#11\",\"830\":\"v-5cd5165e#12\",\"831\":\"v-5cd5165e#12/83\",\"832\":\"v-5cd5165e#12/84\",\"833\":\"v-5cd5165e#12/85\",\"834\":\"v-5cd5165e#12/86\",\"835\":\"v-5cd5165e#12/87\",\"836\":\"v-5cd5165e#12/88\",\"837\":\"v-5cd5165e#12/89\",\"838\":\"v-5cd5165e#12/90\",\"839\":\"v-5cd5165e#12/91\",\"840\":\"v-5cd5165e#12/92\",\"841\":\"v-5cd5165e#12/93\",\"842\":\"v-5cd5165e#12/94\",\"843\":\"v-5cd5165e#12/95\",\"844\":\"v-5cd5165e#12/96\",\"845\":\"v-5cd5165e#12/97\",\"846\":\"v-5cd5165e#13\",\"847\":\"v-5cd5165e#14\",\"848\":\"v-5cd5165e#14/98\",\"849\":\"v-5cd5165e#14/99\",\"850\":\"v-5cd5165e#14/100\",\"851\":\"v-5cd5165e#14/101\",\"852\":\"v-5cd5165e#14/102\",\"853\":\"v-5cd5165e#14/103\",\"854\":\"v-5cd5165e#14/104\",\"855\":\"v-5cd5165e#14/105\",\"856\":\"v-5cd5165e#14/106\",\"857\":\"v-5cd5165e#14/107\",\"858\":\"v-5cd5165e#14/108\",\"859\":\"v-5cd5165e#14/109\",\"860\":\"v-5cd5165e#14/110\",\"861\":\"v-5cd5165e#14/111\",\"862\":\"v-5cd5165e#14/112\",\"863\":\"v-5cd5165e#15\",\"864\":\"v-5cd5165e#16\",\"865\":\"v-5cd5165e#16/113\",\"866\":\"v-5cd5165e#16/114\",\"867\":\"v-5cd5165e#16/115\",\"868\":\"v-5cd5165e#16/116\",\"869\":\"v-5cd5165e#16/117\",\"870\":\"v-5cd5165e#16/118\",\"871\":\"v-5cd5165e#16/119\",\"872\":\"v-5cd5165e#16/120\",\"873\":\"v-5cd5165e#16/121\",\"874\":\"v-5cd5165e#16/122\",\"875\":\"v-5cd5165e#16/123\",\"876\":\"v-5cd5165e#16/124\",\"877\":\"v-5cd5165e#16/125\",\"878\":\"v-5cd5165e#16/126\",\"879\":\"v-5cd5165e#16/127\",\"880\":\"v-7d7de98b\",\"881\":\"v-7d7de98b#1\",\"882\":\"v-7d7de98b#2\",\"883\":\"v-7d7de98b#2/0\",\"884\":\"v-7d7de98b#2/1\",\"885\":\"v-7d7de98b#2/2\",\"886\":\"v-7d7de98b#2/3\",\"887\":\"v-7d7de98b#2/4\",\"888\":\"v-7d7de98b#2/5\",\"889\":\"v-7d7de98b#2/6\",\"890\":\"v-7d7de98b#2/7\",\"891\":\"v-7d7de98b#2/8\",\"892\":\"v-7d7de98b#2/9\",\"893\":\"v-7d7de98b#2/10\",\"894\":\"v-7d7de98b#2/11\",\"895\":\"v-7d7de98b#2/12\",\"896\":\"v-7d7de98b#2/13\",\"897\":\"v-7d7de98b#2/14\",\"898\":\"v-7d7de98b#2/15\",\"899\":\"v-7d7de98b#2/16\",\"900\":\"v-7d7de98b#3\",\"901\":\"v-7d7de98b#4\",\"902\":\"v-7d7de98b#4/17\",\"903\":\"v-7d7de98b#4/18\",\"904\":\"v-7d7de98b#4/19\",\"905\":\"v-7d7de98b#4/20\",\"906\":\"v-7d7de98b#4/21\",\"907\":\"v-7d7de98b#4/22\",\"908\":\"v-7d7de98b#4/23\",\"909\":\"v-7d7de98b#4/24\",\"910\":\"v-7d7de98b#4/25\",\"911\":\"v-7d7de98b#4/26\",\"912\":\"v-7d7de98b#4/27\",\"913\":\"v-7d7de98b#4/28\",\"914\":\"v-7d7de98b#4/29\",\"915\":\"v-7d7de98b#4/30\",\"916\":\"v-7d7de98b#4/31\",\"917\":\"v-7d7de98b#4/32\",\"918\":\"v-7d7de98b#4/33\",\"919\":\"v-7d7de98b#5\",\"920\":\"v-7d7de98b#6\",\"921\":\"v-7d7de98b#6/34\",\"922\":\"v-7d7de98b#6/35\",\"923\":\"v-7d7de98b#6/36\",\"924\":\"v-7d7de98b#6/37\",\"925\":\"v-7d7de98b#6/38\",\"926\":\"v-7d7de98b#6/39\",\"927\":\"v-7d7de98b#6/40\",\"928\":\"v-7d7de98b#6/41\",\"929\":\"v-7d7de98b#6/42\",\"930\":\"v-7d7de98b#6/43\",\"931\":\"v-7d7de98b#6/44\",\"932\":\"v-7d7de98b#6/45\",\"933\":\"v-7d7de98b#6/46\",\"934\":\"v-7d7de98b#6/47\",\"935\":\"v-7d7de98b#6/48\",\"936\":\"v-7d7de98b#6/49\",\"937\":\"v-7d7de98b#6/50\",\"938\":\"v-7d7de98b#6/51\",\"939\":\"v-7d7de98b#6/52\",\"940\":\"v-7d7de98b#7\",\"941\":\"v-7d7de98b#8\",\"942\":\"v-7d7de98b#8/53\",\"943\":\"v-7d7de98b#8/54\",\"944\":\"v-7d7de98b#8/55\",\"945\":\"v-7d7de98b#8/56\",\"946\":\"v-7d7de98b#8/57\",\"947\":\"v-7d7de98b#8/58\",\"948\":\"v-7d7de98b#8/59\",\"949\":\"v-7d7de98b#8/60\",\"950\":\"v-7d7de98b#8/61\",\"951\":\"v-7d7de98b#8/62\",\"952\":\"v-7d7de98b#8/63\",\"953\":\"v-7d7de98b#8/64\",\"954\":\"v-7d7de98b#8/65\",\"955\":\"v-7d7de98b#8/66\",\"956\":\"v-7d7de98b#8/67\",\"957\":\"v-7d7de98b#8/68\",\"958\":\"v-7d7de98b#8/69\",\"959\":\"v-4c1e1aa6\",\"960\":\"v-4c1e1aa6#1\",\"961\":\"v-4c1e1aa6#2\",\"962\":\"v-4c1e1aa6#2/0\",\"963\":\"v-4c1e1aa6#2/1\",\"964\":\"v-4c1e1aa6#2/2\",\"965\":\"v-4c1e1aa6#2/3\",\"966\":\"v-4c1e1aa6#2/4\",\"967\":\"v-4c1e1aa6#2/5\",\"968\":\"v-4c1e1aa6#2/6\",\"969\":\"v-4c1e1aa6#2/7\",\"970\":\"v-4c1e1aa6#2/8\",\"971\":\"v-4c1e1aa6#2/9\",\"972\":\"v-4c1e1aa6#2/10\",\"973\":\"v-4c1e1aa6#2/11\",\"974\":\"v-4c1e1aa6#2/12\",\"975\":\"v-4c1e1aa6#2/13\",\"976\":\"v-4c1e1aa6#2/14\",\"977\":\"v-4c1e1aa6#2/15\",\"978\":\"v-4c1e1aa6#2/16\",\"979\":\"v-4c1e1aa6#2/17\",\"980\":\"v-4c1e1aa6#2/18\",\"981\":\"v-4c1e1aa6#2/19\",\"982\":\"v-4c1e1aa6#2/20\",\"983\":\"v-4c1e1aa6#2/21\",\"984\":\"v-4c1e1aa6#2/22\",\"985\":\"v-4c1e1aa6#3\",\"986\":\"v-4c1e1aa6#4\",\"987\":\"v-4c1e1aa6#4/23\",\"988\":\"v-4c1e1aa6#4/24\",\"989\":\"v-4c1e1aa6#4/25\",\"990\":\"v-4c1e1aa6#4/26\",\"991\":\"v-4c1e1aa6#4/27\",\"992\":\"v-4c1e1aa6#4/28\",\"993\":\"v-4c1e1aa6#4/29\",\"994\":\"v-4c1e1aa6#4/30\",\"995\":\"v-4c1e1aa6#4/31\",\"996\":\"v-4c1e1aa6#4/32\",\"997\":\"v-4c1e1aa6#4/33\",\"998\":\"v-4c1e1aa6#4/34\",\"999\":\"v-4c1e1aa6#4/35\",\"1000\":\"v-4c1e1aa6#4/36\",\"1001\":\"v-4c1e1aa6#4/37\",\"1002\":\"v-4c1e1aa6#4/38\",\"1003\":\"v-4c1e1aa6#4/39\",\"1004\":\"v-0203e285\",\"1005\":\"v-0203e285#1\",\"1006\":\"v-0203e285#2\",\"1007\":\"v-0203e285#2/0\",\"1008\":\"v-0203e285#2/1\",\"1009\":\"v-0203e285#2/2\",\"1010\":\"v-0203e285#2/3\",\"1011\":\"v-0203e285#2/4\",\"1012\":\"v-0203e285#2/5\",\"1013\":\"v-0203e285#2/6\",\"1014\":\"v-0203e285#2/7\",\"1015\":\"v-0203e285#2/8\",\"1016\":\"v-0203e285#2/9\",\"1017\":\"v-0203e285#2/10\",\"1018\":\"v-0203e285#2/11\",\"1019\":\"v-0203e285#2/12\",\"1020\":\"v-0203e285#2/13\",\"1021\":\"v-0203e285#2/14\",\"1022\":\"v-0203e285#2/15\",\"1023\":\"v-0203e285#2/16\",\"1024\":\"v-0203e285#2/17\",\"1025\":\"v-0203e285#2/18\",\"1026\":\"v-0203e285#3\",\"1027\":\"v-0203e285#4\",\"1028\":\"v-0203e285#4/19\",\"1029\":\"v-0203e285#4/20\",\"1030\":\"v-0203e285#4/21\",\"1031\":\"v-0203e285#4/22\",\"1032\":\"v-0203e285#4/23\",\"1033\":\"v-0203e285#4/24\",\"1034\":\"v-0203e285#4/25\",\"1035\":\"v-0203e285#4/26\",\"1036\":\"v-0203e285#4/27\",\"1037\":\"v-0203e285#4/28\",\"1038\":\"v-0203e285#4/29\",\"1039\":\"v-0203e285#4/30\",\"1040\":\"v-0203e285#4/31\",\"1041\":\"v-0203e285#4/32\",\"1042\":\"v-0203e285#4/33\",\"1043\":\"v-0203e285#4/34\",\"1044\":\"v-0203e285#4/35\",\"1045\":\"v-0203e285#5\",\"1046\":\"v-0203e285#6\",\"1047\":\"v-0203e285#6/36\",\"1048\":\"v-0203e285#6/37\",\"1049\":\"v-0203e285#6/38\",\"1050\":\"v-0203e285#6/39\",\"1051\":\"v-0203e285#6/40\",\"1052\":\"v-0203e285#6/41\",\"1053\":\"v-0203e285#6/42\",\"1054\":\"v-0203e285#6/43\",\"1055\":\"v-0203e285#6/44\",\"1056\":\"v-0203e285#6/45\",\"1057\":\"v-0203e285#6/46\",\"1058\":\"v-0203e285#6/47\",\"1059\":\"v-0203e285#6/48\",\"1060\":\"v-0203e285#6/49\",\"1061\":\"v-0203e285#6/50\",\"1062\":\"v-0203e285#6/51\",\"1063\":\"v-0203e285#6/52\",\"1064\":\"v-0203e285#7\",\"1065\":\"v-0203e285#8\",\"1066\":\"v-0203e285#8/53\",\"1067\":\"v-0203e285#8/54\",\"1068\":\"v-0203e285#8/55\",\"1069\":\"v-0203e285#8/56\",\"1070\":\"v-0203e285#8/57\",\"1071\":\"v-0203e285#8/58\",\"1072\":\"v-0203e285#8/59\",\"1073\":\"v-0203e285#8/60\",\"1074\":\"v-0203e285#8/61\",\"1075\":\"v-0203e285#8/62\",\"1076\":\"v-0203e285#8/63\",\"1077\":\"v-0203e285#8/64\",\"1078\":\"v-0203e285#8/65\",\"1079\":\"v-0203e285#8/66\",\"1080\":\"v-0203e285#8/67\",\"1081\":\"v-0203e285#8/68\",\"1082\":\"v-0203e285#8/69\",\"1083\":\"v-0203e285#9\",\"1084\":\"v-0203e285#10\",\"1085\":\"v-0203e285#10/70\",\"1086\":\"v-0203e285#10/71\",\"1087\":\"v-0203e285#10/72\",\"1088\":\"v-0203e285#10/73\",\"1089\":\"v-0203e285#10/74\",\"1090\":\"v-0203e285#10/75\",\"1091\":\"v-0203e285#10/76\",\"1092\":\"v-0203e285#10/77\",\"1093\":\"v-0203e285#10/78\",\"1094\":\"v-0203e285#10/79\",\"1095\":\"v-0203e285#10/80\",\"1096\":\"v-0203e285#10/81\",\"1097\":\"v-0203e285#10/82\",\"1098\":\"v-0203e285#10/83\",\"1099\":\"v-0203e285#10/84\",\"1100\":\"v-0203e285#10/85\",\"1101\":\"v-0203e285#10/86\",\"1102\":\"v-0203e285#11\",\"1103\":\"v-0203e285#12\",\"1104\":\"v-0203e285#12/87\",\"1105\":\"v-0203e285#12/88\",\"1106\":\"v-0203e285#12/89\",\"1107\":\"v-0203e285#12/90\",\"1108\":\"v-0203e285#12/91\",\"1109\":\"v-0203e285#12/92\",\"1110\":\"v-0203e285#12/93\",\"1111\":\"v-0203e285#12/94\",\"1112\":\"v-0203e285#12/95\",\"1113\":\"v-0203e285#12/96\",\"1114\":\"v-0203e285#12/97\",\"1115\":\"v-0203e285#12/98\",\"1116\":\"v-0203e285#12/99\",\"1117\":\"v-0203e285#12/100\",\"1118\":\"v-0203e285#12/101\",\"1119\":\"v-0203e285#13\",\"1120\":\"v-0203e285#14\",\"1121\":\"v-0203e285#14/102\",\"1122\":\"v-0203e285#14/103\",\"1123\":\"v-0203e285#14/104\",\"1124\":\"v-0203e285#14/105\",\"1125\":\"v-0203e285#14/106\",\"1126\":\"v-0203e285#14/107\",\"1127\":\"v-0203e285#14/108\",\"1128\":\"v-0203e285#14/109\",\"1129\":\"v-0203e285#14/110\",\"1130\":\"v-0203e285#14/111\",\"1131\":\"v-0203e285#14/112\",\"1132\":\"v-0203e285#14/113\",\"1133\":\"v-0203e285#14/114\",\"1134\":\"v-0203e285#14/115\",\"1135\":\"v-0203e285#14/116\",\"1136\":\"v-0203e285#14/117\",\"1137\":\"v-0203e285#14/118\",\"1138\":\"v-0203e285#14/119\",\"1139\":\"v-0203e285#14/120\",\"1140\":\"v-0203e285#15\",\"1141\":\"v-0203e285#16\",\"1142\":\"v-0203e285#16/121\",\"1143\":\"v-0203e285#16/122\",\"1144\":\"v-0203e285#16/123\",\"1145\":\"v-0203e285#16/124\",\"1146\":\"v-0203e285#16/125\",\"1147\":\"v-0203e285#16/126\",\"1148\":\"v-0203e285#16/127\",\"1149\":\"v-0203e285#16/128\",\"1150\":\"v-0203e285#16/129\",\"1151\":\"v-0203e285#16/130\",\"1152\":\"v-0203e285#16/131\",\"1153\":\"v-0203e285#16/132\",\"1154\":\"v-0203e285#16/133\",\"1155\":\"v-0203e285#16/134\",\"1156\":\"v-0203e285#16/135\",\"1157\":\"v-0203e285#16/136\",\"1158\":\"v-0203e285#16/137\",\"1159\":\"v-0203e285#16/138\",\"1160\":\"v-0203e285#16/139\",\"1161\":\"v-0203e285#16/140\",\"1162\":\"v-0203e285#16/141\",\"1163\":\"v-0203e285#17\",\"1164\":\"v-0203e285#18\",\"1165\":\"v-0203e285#18/142\",\"1166\":\"v-0203e285#18/143\",\"1167\":\"v-0203e285#18/144\",\"1168\":\"v-0203e285#18/145\",\"1169\":\"v-0203e285#18/146\",\"1170\":\"v-0203e285#18/147\",\"1171\":\"v-0203e285#18/148\",\"1172\":\"v-0203e285#18/149\",\"1173\":\"v-0203e285#18/150\",\"1174\":\"v-0203e285#18/151\",\"1175\":\"v-0203e285#18/152\",\"1176\":\"v-0203e285#18/153\",\"1177\":\"v-0203e285#18/154\",\"1178\":\"v-0203e285#18/155\",\"1179\":\"v-0203e285#18/156\",\"1180\":\"v-0203e285#18/157\",\"1181\":\"v-0203e285#18/158\",\"1182\":\"v-61653a0e\",\"1183\":\"v-61653a0e#1\",\"1184\":\"v-61653a0e#2\",\"1185\":\"v-61653a0e#2/0\",\"1186\":\"v-61653a0e#2/1\",\"1187\":\"v-61653a0e#2/2\",\"1188\":\"v-61653a0e#2/3\",\"1189\":\"v-61653a0e#2/4\",\"1190\":\"v-61653a0e#2/5\",\"1191\":\"v-61653a0e#2/6\",\"1192\":\"v-61653a0e#2/7\",\"1193\":\"v-61653a0e#2/8\",\"1194\":\"v-61653a0e#2/9\",\"1195\":\"v-61653a0e#2/10\",\"1196\":\"v-61653a0e#2/11\",\"1197\":\"v-61653a0e#2/12\",\"1198\":\"v-61653a0e#2/13\",\"1199\":\"v-61653a0e#2/14\",\"1200\":\"v-61653a0e#3\",\"1201\":\"v-61653a0e#4\",\"1202\":\"v-61653a0e#4/15\",\"1203\":\"v-61653a0e#4/16\",\"1204\":\"v-61653a0e#4/17\",\"1205\":\"v-61653a0e#4/18\",\"1206\":\"v-61653a0e#4/19\",\"1207\":\"v-61653a0e#4/20\",\"1208\":\"v-61653a0e#4/21\",\"1209\":\"v-61653a0e#4/22\",\"1210\":\"v-61653a0e#4/23\",\"1211\":\"v-61653a0e#4/24\",\"1212\":\"v-61653a0e#4/25\",\"1213\":\"v-61653a0e#4/26\",\"1214\":\"v-61653a0e#5\",\"1215\":\"v-61653a0e#6\",\"1216\":\"v-61653a0e#6/27\",\"1217\":\"v-61653a0e#6/28\",\"1218\":\"v-61653a0e#6/29\",\"1219\":\"v-61653a0e#6/30\",\"1220\":\"v-61653a0e#6/31\",\"1221\":\"v-61653a0e#6/32\",\"1222\":\"v-61653a0e#6/33\",\"1223\":\"v-61653a0e#6/34\",\"1224\":\"v-61653a0e#6/35\",\"1225\":\"v-61653a0e#6/36\",\"1226\":\"v-61653a0e#6/37\",\"1227\":\"v-61653a0e#6/38\",\"1228\":\"v-5bf8ca82\",\"1229\":\"v-5bf8ca82#1\",\"1230\":\"v-5bf8ca82#2\",\"1231\":\"v-5bf8ca82#2/0\",\"1232\":\"v-5bf8ca82#2/1\",\"1233\":\"v-5bf8ca82#2/2\",\"1234\":\"v-5bf8ca82#2/3\",\"1235\":\"v-5bf8ca82#2/4\",\"1236\":\"v-5bf8ca82#2/5\",\"1237\":\"v-5bf8ca82#2/6\",\"1238\":\"v-5bf8ca82#2/7\",\"1239\":\"v-5bf8ca82#2/8\",\"1240\":\"v-5bf8ca82#2/9\",\"1241\":\"v-5bf8ca82#2/10\",\"1242\":\"v-5bf8ca82#2/11\",\"1243\":\"v-5bf8ca82#2/12\",\"1244\":\"v-66b01a4e\",\"1245\":\"v-66b01a4e#1\",\"1246\":\"v-66b01a4e#2\",\"1247\":\"v-66b01a4e#2/0\",\"1248\":\"v-66b01a4e#2/1\",\"1249\":\"v-66b01a4e#2/2\",\"1250\":\"v-66b01a4e#2/3\",\"1251\":\"v-66b01a4e#2/4\",\"1252\":\"v-66b01a4e#2/5\",\"1253\":\"v-66b01a4e#2/6\",\"1254\":\"v-66b01a4e#2/7\",\"1255\":\"v-66b01a4e#2/8\",\"1256\":\"v-66b01a4e#2/9\",\"1257\":\"v-66b01a4e#2/10\",\"1258\":\"v-66b01a4e#2/11\",\"1259\":\"v-66b01a4e#2/12\",\"1260\":\"v-66b01a4e#2/13\",\"1261\":\"v-66b01a4e#2/14\",\"1262\":\"v-66b01a4e#2/15\",\"1263\":\"v-66b01a4e#2/16\",\"1264\":\"v-66b01a4e#2/17\",\"1265\":\"v-66b01a4e#2/18\",\"1266\":\"v-66b01a4e#2/19\",\"1267\":\"v-66b01a4e#2/20\",\"1268\":\"v-66b01a4e#2/21\",\"1269\":\"v-66b01a4e#2/22\",\"1270\":\"v-66b01a4e#2/23\",\"1271\":\"v-66b01a4e#2/24\",\"1272\":\"v-66b01a4e#2/25\",\"1273\":\"v-66b01a4e#2/26\",\"1274\":\"v-66b01a4e#3\",\"1275\":\"v-66b01a4e#4\",\"1276\":\"v-66b01a4e#4/27\",\"1277\":\"v-66b01a4e#4/28\",\"1278\":\"v-66b01a4e#4/29\",\"1279\":\"v-66b01a4e#4/30\",\"1280\":\"v-66b01a4e#4/31\",\"1281\":\"v-66b01a4e#4/32\",\"1282\":\"v-66b01a4e#4/33\",\"1283\":\"v-66b01a4e#4/34\",\"1284\":\"v-66b01a4e#4/35\",\"1285\":\"v-66b01a4e#4/36\",\"1286\":\"v-66b01a4e#4/37\",\"1287\":\"v-66b01a4e#4/38\",\"1288\":\"v-66b01a4e#4/39\",\"1289\":\"v-66b01a4e#4/40\",\"1290\":\"v-66b01a4e#4/41\",\"1291\":\"v-66b01a4e#4/42\",\"1292\":\"v-66b01a4e#4/43\",\"1293\":\"v-66b01a4e#4/44\",\"1294\":\"v-66b01a4e#4/45\",\"1295\":\"v-66b01a4e#4/46\",\"1296\":\"v-66b01a4e#4/47\",\"1297\":\"v-66b01a4e#4/48\",\"1298\":\"v-66b01a4e#4/49\",\"1299\":\"v-66b01a4e#4/50\",\"1300\":\"v-66b01a4e#4/51\",\"1301\":\"v-66b01a4e#4/52\",\"1302\":\"v-66b01a4e#4/53\",\"1303\":\"v-66b01a4e#5\",\"1304\":\"v-66b01a4e#6\",\"1305\":\"v-66b01a4e#6/54\",\"1306\":\"v-66b01a4e#6/55\",\"1307\":\"v-66b01a4e#6/56\",\"1308\":\"v-66b01a4e#6/57\",\"1309\":\"v-66b01a4e#6/58\",\"1310\":\"v-66b01a4e#6/59\",\"1311\":\"v-66b01a4e#6/60\",\"1312\":\"v-66b01a4e#6/61\",\"1313\":\"v-66b01a4e#6/62\",\"1314\":\"v-66b01a4e#6/63\",\"1315\":\"v-66b01a4e#6/64\",\"1316\":\"v-66b01a4e#6/65\",\"1317\":\"v-66b01a4e#6/66\",\"1318\":\"v-66b01a4e#6/67\",\"1319\":\"v-66b01a4e#6/68\",\"1320\":\"v-66b01a4e#6/69\",\"1321\":\"v-66b01a4e#6/70\",\"1322\":\"v-66b01a4e#6/71\",\"1323\":\"v-66b01a4e#6/72\",\"1324\":\"v-66b01a4e#6/73\",\"1325\":\"v-66b01a4e#6/74\",\"1326\":\"v-66b01a4e#7\",\"1327\":\"v-66b01a4e#8\",\"1328\":\"v-66b01a4e#8/75\",\"1329\":\"v-66b01a4e#8/76\",\"1330\":\"v-66b01a4e#8/77\",\"1331\":\"v-66b01a4e#8/78\",\"1332\":\"v-66b01a4e#8/79\",\"1333\":\"v-66b01a4e#8/80\",\"1334\":\"v-66b01a4e#8/81\",\"1335\":\"v-66b01a4e#8/82\",\"1336\":\"v-66b01a4e#8/83\",\"1337\":\"v-66b01a4e#8/84\",\"1338\":\"v-66b01a4e#8/85\",\"1339\":\"v-66b01a4e#8/86\",\"1340\":\"v-66b01a4e#8/87\",\"1341\":\"v-66b01a4e#8/88\",\"1342\":\"v-66b01a4e#8/89\",\"1343\":\"v-66b01a4e#8/90\",\"1344\":\"v-66b01a4e#8/91\",\"1345\":\"v-66b01a4e#8/92\",\"1346\":\"v-66b01a4e#8/93\",\"1347\":\"v-66b01a4e#8/94\",\"1348\":\"v-66b01a4e#8/95\",\"1349\":\"v-66b01a4e#9\",\"1350\":\"v-66b01a4e#10\",\"1351\":\"v-66b01a4e#10/96\",\"1352\":\"v-66b01a4e#10/97\",\"1353\":\"v-66b01a4e#10/98\",\"1354\":\"v-66b01a4e#10/99\",\"1355\":\"v-66b01a4e#10/100\",\"1356\":\"v-66b01a4e#10/101\",\"1357\":\"v-66b01a4e#10/102\",\"1358\":\"v-66b01a4e#10/103\",\"1359\":\"v-66b01a4e#10/104\",\"1360\":\"v-66b01a4e#10/105\",\"1361\":\"v-66b01a4e#10/106\",\"1362\":\"v-66b01a4e#10/107\",\"1363\":\"v-66b01a4e#10/108\",\"1364\":\"v-66b01a4e#10/109\",\"1365\":\"v-66b01a4e#10/110\",\"1366\":\"v-66b01a4e#10/111\",\"1367\":\"v-66b01a4e#10/112\",\"1368\":\"v-66b01a4e#10/113\",\"1369\":\"v-66b01a4e#10/114\",\"1370\":\"v-66b01a4e#10/115\",\"1371\":\"v-66b01a4e#10/116\",\"1372\":\"v-66b01a4e#10/117\",\"1373\":\"v-66b01a4e#10/118\",\"1374\":\"v-66b01a4e#10/119\",\"1375\":\"v-66b01a4e#10/120\",\"1376\":\"v-66b01a4e#10/121\",\"1377\":\"v-66b01a4e#10/122\",\"1378\":\"v-66b01a4e#11\",\"1379\":\"v-66b01a4e#12\",\"1380\":\"v-66b01a4e#12/123\",\"1381\":\"v-66b01a4e#12/124\",\"1382\":\"v-66b01a4e#12/125\",\"1383\":\"v-66b01a4e#12/126\",\"1384\":\"v-66b01a4e#12/127\",\"1385\":\"v-66b01a4e#12/128\",\"1386\":\"v-66b01a4e#12/129\",\"1387\":\"v-66b01a4e#12/130\",\"1388\":\"v-66b01a4e#12/131\",\"1389\":\"v-66b01a4e#12/132\",\"1390\":\"v-66b01a4e#12/133\",\"1391\":\"v-66b01a4e#12/134\",\"1392\":\"v-66b01a4e#12/135\",\"1393\":\"v-66b01a4e#12/136\",\"1394\":\"v-66b01a4e#12/137\",\"1395\":\"v-66b01a4e#12/138\",\"1396\":\"v-66b01a4e#12/139\",\"1397\":\"v-66b01a4e#12/140\",\"1398\":\"v-66b01a4e#12/141\",\"1399\":\"v-66b01a4e#12/142\",\"1400\":\"v-66b01a4e#12/143\",\"1401\":\"v-66b01a4e#12/144\",\"1402\":\"v-66b01a4e#12/145\",\"1403\":\"v-66b01a4e#12/146\",\"1404\":\"v-66b01a4e#12/147\",\"1405\":\"v-66b01a4e#12/148\",\"1406\":\"v-66b01a4e#12/149\",\"1407\":\"v-66b01a4e#13\",\"1408\":\"v-66b01a4e#14\",\"1409\":\"v-66b01a4e#14/150\",\"1410\":\"v-66b01a4e#14/151\",\"1411\":\"v-66b01a4e#14/152\",\"1412\":\"v-66b01a4e#14/153\",\"1413\":\"v-66b01a4e#14/154\",\"1414\":\"v-66b01a4e#14/155\",\"1415\":\"v-66b01a4e#14/156\",\"1416\":\"v-66b01a4e#14/157\",\"1417\":\"v-66b01a4e#14/158\",\"1418\":\"v-66b01a4e#14/159\",\"1419\":\"v-66b01a4e#14/160\",\"1420\":\"v-66b01a4e#14/161\",\"1421\":\"v-66b01a4e#14/162\",\"1422\":\"v-66b01a4e#14/163\",\"1423\":\"v-66b01a4e#14/164\",\"1424\":\"v-66b01a4e#14/165\",\"1425\":\"v-66b01a4e#14/166\",\"1426\":\"v-66b01a4e#14/167\",\"1427\":\"v-66b01a4e#14/168\",\"1428\":\"v-66b01a4e#14/169\",\"1429\":\"v-66b01a4e#14/170\",\"1430\":\"v-66b01a4e#15\",\"1431\":\"v-66b01a4e#16\",\"1432\":\"v-66b01a4e#16/171\",\"1433\":\"v-66b01a4e#16/172\",\"1434\":\"v-66b01a4e#16/173\",\"1435\":\"v-66b01a4e#16/174\",\"1436\":\"v-66b01a4e#16/175\",\"1437\":\"v-66b01a4e#16/176\",\"1438\":\"v-66b01a4e#16/177\",\"1439\":\"v-66b01a4e#16/178\",\"1440\":\"v-66b01a4e#16/179\",\"1441\":\"v-66b01a4e#16/180\",\"1442\":\"v-66b01a4e#16/181\",\"1443\":\"v-66b01a4e#16/182\",\"1444\":\"v-66b01a4e#16/183\",\"1445\":\"v-66b01a4e#16/184\",\"1446\":\"v-66b01a4e#16/185\",\"1447\":\"v-66b01a4e#16/186\",\"1448\":\"v-66b01a4e#16/187\",\"1449\":\"v-66b01a4e#16/188\",\"1450\":\"v-66b01a4e#16/189\",\"1451\":\"v-66b01a4e#16/190\",\"1452\":\"v-66b01a4e#16/191\",\"1453\":\"v-66b01a4e#17\",\"1454\":\"v-66b01a4e#18\",\"1455\":\"v-66b01a4e#18/192\",\"1456\":\"v-66b01a4e#18/193\",\"1457\":\"v-66b01a4e#18/194\",\"1458\":\"v-66b01a4e#18/195\",\"1459\":\"v-66b01a4e#18/196\",\"1460\":\"v-66b01a4e#18/197\",\"1461\":\"v-66b01a4e#18/198\",\"1462\":\"v-66b01a4e#18/199\",\"1463\":\"v-66b01a4e#18/200\",\"1464\":\"v-66b01a4e#18/201\",\"1465\":\"v-66b01a4e#18/202\",\"1466\":\"v-66b01a4e#18/203\",\"1467\":\"v-66b01a4e#18/204\",\"1468\":\"v-66b01a4e#18/205\",\"1469\":\"v-66b01a4e#18/206\",\"1470\":\"v-66b01a4e#18/207\",\"1471\":\"v-66b01a4e#18/208\",\"1472\":\"v-66b01a4e#18/209\",\"1473\":\"v-66b01a4e#18/210\",\"1474\":\"v-66b01a4e#18/211\",\"1475\":\"v-66b01a4e#18/212\",\"1476\":\"v-66b01a4e#18/213\",\"1477\":\"v-66b01a4e#18/214\",\"1478\":\"v-66b01a4e#18/215\",\"1479\":\"v-66b01a4e#18/216\",\"1480\":\"v-66b01a4e#18/217\",\"1481\":\"v-66b01a4e#18/218\",\"1482\":\"v-66b01a4e#19\",\"1483\":\"v-66b01a4e#20\",\"1484\":\"v-66b01a4e#20/219\",\"1485\":\"v-66b01a4e#20/220\",\"1486\":\"v-66b01a4e#20/221\",\"1487\":\"v-66b01a4e#20/222\",\"1488\":\"v-66b01a4e#20/223\",\"1489\":\"v-66b01a4e#20/224\",\"1490\":\"v-66b01a4e#20/225\",\"1491\":\"v-66b01a4e#20/226\",\"1492\":\"v-66b01a4e#20/227\",\"1493\":\"v-66b01a4e#20/228\",\"1494\":\"v-66b01a4e#20/229\",\"1495\":\"v-66b01a4e#20/230\",\"1496\":\"v-66b01a4e#20/231\",\"1497\":\"v-66b01a4e#20/232\",\"1498\":\"v-66b01a4e#20/233\",\"1499\":\"v-66b01a4e#20/234\",\"1500\":\"v-66b01a4e#20/235\",\"1501\":\"v-66b01a4e#20/236\",\"1502\":\"v-66b01a4e#20/237\",\"1503\":\"v-66b01a4e#20/238\",\"1504\":\"v-66b01a4e#20/239\",\"1505\":\"v-66b01a4e#20/240\",\"1506\":\"v-66b01a4e#20/241\",\"1507\":\"v-66b01a4e#20/242\",\"1508\":\"v-66b01a4e#20/243\",\"1509\":\"v-66b01a4e#20/244\",\"1510\":\"v-66b01a4e#20/245\",\"1511\":\"v-66b01a4e#21\",\"1512\":\"v-66b01a4e#22\",\"1513\":\"v-66b01a4e#22/246\",\"1514\":\"v-66b01a4e#22/247\",\"1515\":\"v-66b01a4e#22/248\",\"1516\":\"v-66b01a4e#22/249\",\"1517\":\"v-66b01a4e#22/250\",\"1518\":\"v-66b01a4e#22/251\",\"1519\":\"v-66b01a4e#22/252\",\"1520\":\"v-66b01a4e#22/253\",\"1521\":\"v-66b01a4e#22/254\",\"1522\":\"v-66b01a4e#22/255\",\"1523\":\"v-66b01a4e#22/256\",\"1524\":\"v-66b01a4e#22/257\",\"1525\":\"v-66b01a4e#22/258\",\"1526\":\"v-66b01a4e#22/259\",\"1527\":\"v-66b01a4e#22/260\",\"1528\":\"v-66b01a4e#22/261\",\"1529\":\"v-66b01a4e#22/262\",\"1530\":\"v-66b01a4e#22/263\",\"1531\":\"v-66b01a4e#22/264\",\"1532\":\"v-66b01a4e#22/265\",\"1533\":\"v-66b01a4e#22/266\",\"1534\":\"v-66b01a4e#23\",\"1535\":\"v-66b01a4e#24\",\"1536\":\"v-66b01a4e#24/267\",\"1537\":\"v-66b01a4e#24/268\",\"1538\":\"v-66b01a4e#24/269\",\"1539\":\"v-66b01a4e#24/270\",\"1540\":\"v-66b01a4e#24/271\",\"1541\":\"v-66b01a4e#24/272\",\"1542\":\"v-66b01a4e#24/273\",\"1543\":\"v-66b01a4e#24/274\",\"1544\":\"v-66b01a4e#24/275\",\"1545\":\"v-66b01a4e#24/276\",\"1546\":\"v-66b01a4e#24/277\",\"1547\":\"v-66b01a4e#24/278\",\"1548\":\"v-66b01a4e#24/279\",\"1549\":\"v-66b01a4e#24/280\",\"1550\":\"v-66b01a4e#24/281\",\"1551\":\"v-66b01a4e#24/282\",\"1552\":\"v-66b01a4e#24/283\",\"1553\":\"v-66b01a4e#24/284\",\"1554\":\"v-66b01a4e#24/285\",\"1555\":\"v-66b01a4e#24/286\",\"1556\":\"v-66b01a4e#24/287\",\"1557\":\"v-66b01a4e#25\",\"1558\":\"v-66b01a4e#26\",\"1559\":\"v-66b01a4e#26/288\",\"1560\":\"v-66b01a4e#26/289\",\"1561\":\"v-66b01a4e#26/290\",\"1562\":\"v-66b01a4e#26/291\",\"1563\":\"v-66b01a4e#26/292\",\"1564\":\"v-66b01a4e#26/293\",\"1565\":\"v-66b01a4e#26/294\",\"1566\":\"v-66b01a4e#26/295\",\"1567\":\"v-66b01a4e#26/296\",\"1568\":\"v-66b01a4e#26/297\",\"1569\":\"v-66b01a4e#26/298\",\"1570\":\"v-66b01a4e#26/299\",\"1571\":\"v-66b01a4e#26/300\",\"1572\":\"v-66b01a4e#26/301\",\"1573\":\"v-66b01a4e#26/302\",\"1574\":\"v-66b01a4e#26/303\",\"1575\":\"v-66b01a4e#26/304\",\"1576\":\"v-66b01a4e#26/305\",\"1577\":\"v-66b01a4e#26/306\",\"1578\":\"v-66b01a4e#26/307\",\"1579\":\"v-66b01a4e#26/308\",\"1580\":\"v-66b01a4e#26/309\",\"1581\":\"v-66b01a4e#26/310\",\"1582\":\"v-66b01a4e#27\",\"1583\":\"v-66b01a4e#28\",\"1584\":\"v-66b01a4e#28/311\",\"1585\":\"v-66b01a4e#28/312\",\"1586\":\"v-66b01a4e#28/313\",\"1587\":\"v-66b01a4e#28/314\",\"1588\":\"v-66b01a4e#28/315\",\"1589\":\"v-66b01a4e#28/316\",\"1590\":\"v-66b01a4e#28/317\",\"1591\":\"v-66b01a4e#28/318\",\"1592\":\"v-66b01a4e#28/319\",\"1593\":\"v-66b01a4e#28/320\",\"1594\":\"v-66b01a4e#28/321\",\"1595\":\"v-66b01a4e#28/322\",\"1596\":\"v-66b01a4e#28/323\",\"1597\":\"v-66b01a4e#28/324\",\"1598\":\"v-66b01a4e#28/325\",\"1599\":\"v-66b01a4e#28/326\",\"1600\":\"v-66b01a4e#28/327\",\"1601\":\"v-66b01a4e#28/328\",\"1602\":\"v-66b01a4e#28/329\",\"1603\":\"v-66b01a4e#28/330\",\"1604\":\"v-66b01a4e#28/331\",\"1605\":\"v-66b01a4e#28/332\",\"1606\":\"v-66b01a4e#28/333\",\"1607\":\"v-66b01a4e#29\",\"1608\":\"v-66b01a4e#30\",\"1609\":\"v-66b01a4e#30/334\",\"1610\":\"v-66b01a4e#30/335\",\"1611\":\"v-66b01a4e#30/336\",\"1612\":\"v-66b01a4e#30/337\",\"1613\":\"v-66b01a4e#30/338\",\"1614\":\"v-66b01a4e#30/339\",\"1615\":\"v-66b01a4e#30/340\",\"1616\":\"v-66b01a4e#30/341\",\"1617\":\"v-66b01a4e#30/342\",\"1618\":\"v-66b01a4e#30/343\",\"1619\":\"v-66b01a4e#30/344\",\"1620\":\"v-66b01a4e#30/345\",\"1621\":\"v-66b01a4e#30/346\",\"1622\":\"v-66b01a4e#30/347\",\"1623\":\"v-66b01a4e#30/348\",\"1624\":\"v-66b01a4e#30/349\",\"1625\":\"v-66b01a4e#30/350\",\"1626\":\"v-66b01a4e#30/351\",\"1627\":\"v-66b01a4e#30/352\",\"1628\":\"v-66b01a4e#30/353\",\"1629\":\"v-66b01a4e#30/354\",\"1630\":\"v-66b01a4e#30/355\",\"1631\":\"v-66b01a4e#30/356\",\"1632\":\"v-66b01a4e#30/357\",\"1633\":\"v-66b01a4e#30/358\",\"1634\":\"v-66b01a4e#31\",\"1635\":\"v-66b01a4e#32\",\"1636\":\"v-66b01a4e#32/359\",\"1637\":\"v-66b01a4e#32/360\",\"1638\":\"v-66b01a4e#32/361\",\"1639\":\"v-66b01a4e#32/362\",\"1640\":\"v-66b01a4e#32/363\",\"1641\":\"v-66b01a4e#32/364\",\"1642\":\"v-66b01a4e#32/365\",\"1643\":\"v-66b01a4e#32/366\",\"1644\":\"v-66b01a4e#32/367\",\"1645\":\"v-66b01a4e#32/368\",\"1646\":\"v-66b01a4e#32/369\",\"1647\":\"v-66b01a4e#32/370\",\"1648\":\"v-66b01a4e#32/371\",\"1649\":\"v-66b01a4e#32/372\",\"1650\":\"v-66b01a4e#32/373\",\"1651\":\"v-66b01a4e#32/374\",\"1652\":\"v-66b01a4e#32/375\",\"1653\":\"v-66b01a4e#32/376\",\"1654\":\"v-66b01a4e#32/377\",\"1655\":\"v-66b01a4e#32/378\",\"1656\":\"v-66b01a4e#32/379\",\"1657\":\"v-66b01a4e#32/380\",\"1658\":\"v-66b01a4e#32/381\",\"1659\":\"v-66b01a4e#32/382\",\"1660\":\"v-66b01a4e#32/383\",\"1661\":\"v-66b01a4e#32/384\",\"1662\":\"v-66b01a4e#32/385\",\"1663\":\"v-66b01a4e#32/386\",\"1664\":\"v-66b01a4e#32/387\",\"1665\":\"v-66b01a4e#33\",\"1666\":\"v-66b01a4e#34\",\"1667\":\"v-66b01a4e#34/388\",\"1668\":\"v-66b01a4e#34/389\",\"1669\":\"v-66b01a4e#34/390\",\"1670\":\"v-66b01a4e#34/391\",\"1671\":\"v-66b01a4e#34/392\",\"1672\":\"v-66b01a4e#34/393\",\"1673\":\"v-66b01a4e#34/394\",\"1674\":\"v-66b01a4e#34/395\",\"1675\":\"v-66b01a4e#34/396\",\"1676\":\"v-66b01a4e#34/397\",\"1677\":\"v-66b01a4e#34/398\",\"1678\":\"v-66b01a4e#34/399\",\"1679\":\"v-66b01a4e#34/400\",\"1680\":\"v-66b01a4e#34/401\",\"1681\":\"v-66b01a4e#34/402\",\"1682\":\"v-66b01a4e#34/403\",\"1683\":\"v-66b01a4e#34/404\",\"1684\":\"v-66b01a4e#34/405\",\"1685\":\"v-66b01a4e#34/406\",\"1686\":\"v-66b01a4e#34/407\",\"1687\":\"v-66b01a4e#34/408\",\"1688\":\"v-66b01a4e#35\",\"1689\":\"v-66b01a4e#36\",\"1690\":\"v-66b01a4e#36/409\",\"1691\":\"v-66b01a4e#36/410\",\"1692\":\"v-66b01a4e#36/411\",\"1693\":\"v-66b01a4e#36/412\",\"1694\":\"v-66b01a4e#36/413\",\"1695\":\"v-66b01a4e#36/414\",\"1696\":\"v-66b01a4e#36/415\",\"1697\":\"v-66b01a4e#36/416\",\"1698\":\"v-66b01a4e#36/417\",\"1699\":\"v-66b01a4e#36/418\",\"1700\":\"v-66b01a4e#36/419\",\"1701\":\"v-66b01a4e#36/420\",\"1702\":\"v-66b01a4e#36/421\",\"1703\":\"v-66b01a4e#36/422\",\"1704\":\"v-66b01a4e#36/423\",\"1705\":\"v-66b01a4e#36/424\",\"1706\":\"v-66b01a4e#36/425\",\"1707\":\"v-66b01a4e#36/426\",\"1708\":\"v-66b01a4e#36/427\",\"1709\":\"v-66b01a4e#36/428\",\"1710\":\"v-66b01a4e#36/429\",\"1711\":\"v-66b01a4e#37\",\"1712\":\"v-66b01a4e#38\",\"1713\":\"v-66b01a4e#38/430\",\"1714\":\"v-66b01a4e#38/431\",\"1715\":\"v-66b01a4e#38/432\",\"1716\":\"v-66b01a4e#38/433\",\"1717\":\"v-66b01a4e#38/434\",\"1718\":\"v-66b01a4e#38/435\",\"1719\":\"v-66b01a4e#38/436\",\"1720\":\"v-66b01a4e#38/437\",\"1721\":\"v-66b01a4e#38/438\",\"1722\":\"v-66b01a4e#38/439\",\"1723\":\"v-66b01a4e#38/440\",\"1724\":\"v-66b01a4e#38/441\",\"1725\":\"v-66b01a4e#38/442\",\"1726\":\"v-66b01a4e#38/443\",\"1727\":\"v-66b01a4e#38/444\",\"1728\":\"v-66b01a4e#38/445\",\"1729\":\"v-66b01a4e#38/446\",\"1730\":\"v-66b01a4e#38/447\",\"1731\":\"v-66b01a4e#38/448\",\"1732\":\"v-66b01a4e#38/449\",\"1733\":\"v-66b01a4e#38/450\",\"1734\":\"v-66b01a4e#38/451\",\"1735\":\"v-66b01a4e#38/452\",\"1736\":\"v-66b01a4e#39\",\"1737\":\"v-66b01a4e#40\",\"1738\":\"v-66b01a4e#40/453\",\"1739\":\"v-66b01a4e#40/454\",\"1740\":\"v-66b01a4e#40/455\",\"1741\":\"v-66b01a4e#40/456\",\"1742\":\"v-66b01a4e#40/457\",\"1743\":\"v-66b01a4e#40/458\",\"1744\":\"v-66b01a4e#40/459\",\"1745\":\"v-66b01a4e#40/460\",\"1746\":\"v-66b01a4e#40/461\",\"1747\":\"v-66b01a4e#40/462\",\"1748\":\"v-66b01a4e#40/463\",\"1749\":\"v-66b01a4e#40/464\",\"1750\":\"v-66b01a4e#40/465\",\"1751\":\"v-66b01a4e#40/466\",\"1752\":\"v-66b01a4e#40/467\",\"1753\":\"v-66b01a4e#40/468\",\"1754\":\"v-66b01a4e#40/469\",\"1755\":\"v-66b01a4e#40/470\",\"1756\":\"v-66b01a4e#40/471\",\"1757\":\"v-66b01a4e#40/472\",\"1758\":\"v-66b01a4e#40/473\",\"1759\":\"v-66b01a4e#40/474\",\"1760\":\"v-66b01a4e#40/475\",\"1761\":\"v-66b01a4e#41\",\"1762\":\"v-66b01a4e#42\",\"1763\":\"v-66b01a4e#42/476\",\"1764\":\"v-66b01a4e#42/477\",\"1765\":\"v-66b01a4e#42/478\",\"1766\":\"v-66b01a4e#42/479\",\"1767\":\"v-66b01a4e#42/480\",\"1768\":\"v-66b01a4e#42/481\",\"1769\":\"v-66b01a4e#42/482\",\"1770\":\"v-66b01a4e#42/483\",\"1771\":\"v-66b01a4e#42/484\",\"1772\":\"v-66b01a4e#42/485\",\"1773\":\"v-66b01a4e#42/486\",\"1774\":\"v-66b01a4e#42/487\",\"1775\":\"v-66b01a4e#42/488\",\"1776\":\"v-66b01a4e#42/489\",\"1777\":\"v-66b01a4e#42/490\",\"1778\":\"v-66b01a4e#42/491\",\"1779\":\"v-66b01a4e#42/492\",\"1780\":\"v-66b01a4e#42/493\",\"1781\":\"v-66b01a4e#42/494\",\"1782\":\"v-66b01a4e#42/495\",\"1783\":\"v-66b01a4e#42/496\",\"1784\":\"v-66b01a4e#42/497\",\"1785\":\"v-66b01a4e#42/498\",\"1786\":\"v-66b01a4e#42/499\",\"1787\":\"v-66b01a4e#42/500\",\"1788\":\"v-66b01a4e#43\",\"1789\":\"v-66b01a4e#44\",\"1790\":\"v-66b01a4e#44/501\",\"1791\":\"v-66b01a4e#44/502\",\"1792\":\"v-66b01a4e#44/503\",\"1793\":\"v-66b01a4e#44/504\",\"1794\":\"v-66b01a4e#44/505\",\"1795\":\"v-66b01a4e#44/506\",\"1796\":\"v-66b01a4e#44/507\",\"1797\":\"v-66b01a4e#44/508\",\"1798\":\"v-66b01a4e#44/509\",\"1799\":\"v-66b01a4e#44/510\",\"1800\":\"v-66b01a4e#44/511\",\"1801\":\"v-66b01a4e#44/512\",\"1802\":\"v-66b01a4e#44/513\",\"1803\":\"v-66b01a4e#44/514\",\"1804\":\"v-66b01a4e#44/515\",\"1805\":\"v-66b01a4e#44/516\",\"1806\":\"v-66b01a4e#44/517\",\"1807\":\"v-66b01a4e#44/518\",\"1808\":\"v-66b01a4e#44/519\",\"1809\":\"v-66b01a4e#44/520\",\"1810\":\"v-66b01a4e#44/521\",\"1811\":\"v-66b01a4e#44/522\",\"1812\":\"v-66b01a4e#44/523\",\"1813\":\"v-66b01a4e#44/524\",\"1814\":\"v-66b01a4e#44/525\",\"1815\":\"v-66b01a4e#45\",\"1816\":\"v-66b01a4e#46\",\"1817\":\"v-66b01a4e#46/526\",\"1818\":\"v-66b01a4e#46/527\",\"1819\":\"v-66b01a4e#46/528\",\"1820\":\"v-66b01a4e#46/529\",\"1821\":\"v-66b01a4e#46/530\",\"1822\":\"v-66b01a4e#46/531\",\"1823\":\"v-66b01a4e#46/532\",\"1824\":\"v-66b01a4e#46/533\",\"1825\":\"v-66b01a4e#46/534\",\"1826\":\"v-66b01a4e#46/535\",\"1827\":\"v-66b01a4e#46/536\",\"1828\":\"v-66b01a4e#46/537\",\"1829\":\"v-66b01a4e#46/538\",\"1830\":\"v-66b01a4e#46/539\",\"1831\":\"v-66b01a4e#46/540\",\"1832\":\"v-66b01a4e#46/541\",\"1833\":\"v-66b01a4e#46/542\",\"1834\":\"v-66b01a4e#46/543\",\"1835\":\"v-66b01a4e#46/544\",\"1836\":\"v-66b01a4e#46/545\",\"1837\":\"v-66b01a4e#46/546\",\"1838\":\"v-66b01a4e#46/547\",\"1839\":\"v-66b01a4e#46/548\",\"1840\":\"v-66b01a4e#47\",\"1841\":\"v-66b01a4e#48\",\"1842\":\"v-66b01a4e#48/549\",\"1843\":\"v-66b01a4e#48/550\",\"1844\":\"v-66b01a4e#48/551\",\"1845\":\"v-66b01a4e#48/552\",\"1846\":\"v-66b01a4e#48/553\",\"1847\":\"v-66b01a4e#48/554\",\"1848\":\"v-66b01a4e#48/555\",\"1849\":\"v-66b01a4e#48/556\",\"1850\":\"v-66b01a4e#48/557\",\"1851\":\"v-66b01a4e#48/558\",\"1852\":\"v-66b01a4e#48/559\",\"1853\":\"v-66b01a4e#48/560\",\"1854\":\"v-66b01a4e#48/561\",\"1855\":\"v-66b01a4e#48/562\",\"1856\":\"v-66b01a4e#48/563\",\"1857\":\"v-66b01a4e#48/564\",\"1858\":\"v-66b01a4e#48/565\",\"1859\":\"v-66b01a4e#48/566\",\"1860\":\"v-66b01a4e#48/567\",\"1861\":\"v-66b01a4e#48/568\",\"1862\":\"v-66b01a4e#48/569\",\"1863\":\"v-66b01a4e#48/570\",\"1864\":\"v-66b01a4e#48/571\",\"1865\":\"v-66b01a4e#49\",\"1866\":\"v-66b01a4e#50\",\"1867\":\"v-66b01a4e#50/572\",\"1868\":\"v-66b01a4e#50/573\",\"1869\":\"v-66b01a4e#50/574\",\"1870\":\"v-66b01a4e#50/575\",\"1871\":\"v-66b01a4e#50/576\",\"1872\":\"v-66b01a4e#50/577\",\"1873\":\"v-66b01a4e#50/578\",\"1874\":\"v-66b01a4e#50/579\",\"1875\":\"v-66b01a4e#50/580\",\"1876\":\"v-66b01a4e#50/581\",\"1877\":\"v-66b01a4e#50/582\",\"1878\":\"v-66b01a4e#50/583\",\"1879\":\"v-66b01a4e#50/584\",\"1880\":\"v-66b01a4e#50/585\",\"1881\":\"v-66b01a4e#50/586\",\"1882\":\"v-66b01a4e#50/587\",\"1883\":\"v-66b01a4e#50/588\",\"1884\":\"v-66b01a4e#50/589\",\"1885\":\"v-66b01a4e#50/590\",\"1886\":\"v-66b01a4e#50/591\",\"1887\":\"v-66b01a4e#50/592\",\"1888\":\"v-66b01a4e#50/593\",\"1889\":\"v-66b01a4e#50/594\",\"1890\":\"v-66b01a4e#51\",\"1891\":\"v-66b01a4e#52\",\"1892\":\"v-66b01a4e#52/595\",\"1893\":\"v-66b01a4e#52/596\",\"1894\":\"v-66b01a4e#52/597\",\"1895\":\"v-66b01a4e#52/598\",\"1896\":\"v-66b01a4e#52/599\",\"1897\":\"v-66b01a4e#52/600\",\"1898\":\"v-66b01a4e#52/601\",\"1899\":\"v-66b01a4e#52/602\",\"1900\":\"v-66b01a4e#52/603\",\"1901\":\"v-66b01a4e#52/604\",\"1902\":\"v-66b01a4e#52/605\",\"1903\":\"v-66b01a4e#52/606\",\"1904\":\"v-66b01a4e#52/607\",\"1905\":\"v-66b01a4e#52/608\",\"1906\":\"v-66b01a4e#52/609\",\"1907\":\"v-66b01a4e#52/610\",\"1908\":\"v-66b01a4e#52/611\",\"1909\":\"v-66b01a4e#52/612\",\"1910\":\"v-66b01a4e#52/613\",\"1911\":\"v-66b01a4e#52/614\",\"1912\":\"v-66b01a4e#52/615\",\"1913\":\"v-66b01a4e#52/616\",\"1914\":\"v-66b01a4e#52/617\",\"1915\":\"v-66b01a4e#53\",\"1916\":\"v-66b01a4e#54\",\"1917\":\"v-66b01a4e#54/618\",\"1918\":\"v-66b01a4e#54/619\",\"1919\":\"v-66b01a4e#54/620\",\"1920\":\"v-66b01a4e#54/621\",\"1921\":\"v-66b01a4e#54/622\",\"1922\":\"v-66b01a4e#54/623\",\"1923\":\"v-66b01a4e#54/624\",\"1924\":\"v-66b01a4e#54/625\",\"1925\":\"v-66b01a4e#54/626\",\"1926\":\"v-66b01a4e#54/627\",\"1927\":\"v-66b01a4e#54/628\",\"1928\":\"v-66b01a4e#54/629\",\"1929\":\"v-66b01a4e#54/630\",\"1930\":\"v-66b01a4e#54/631\",\"1931\":\"v-66b01a4e#54/632\",\"1932\":\"v-66b01a4e#54/633\",\"1933\":\"v-66b01a4e#54/634\",\"1934\":\"v-66b01a4e#54/635\",\"1935\":\"v-66b01a4e#54/636\",\"1936\":\"v-66b01a4e#54/637\",\"1937\":\"v-66b01a4e#54/638\",\"1938\":\"v-66b01a4e#54/639\",\"1939\":\"v-66b01a4e#54/640\",\"1940\":\"v-66b01a4e#55\",\"1941\":\"v-66b01a4e#56\",\"1942\":\"v-66b01a4e#56/641\",\"1943\":\"v-66b01a4e#56/642\",\"1944\":\"v-66b01a4e#56/643\",\"1945\":\"v-66b01a4e#56/644\",\"1946\":\"v-66b01a4e#56/645\",\"1947\":\"v-66b01a4e#56/646\",\"1948\":\"v-66b01a4e#56/647\",\"1949\":\"v-66b01a4e#56/648\",\"1950\":\"v-66b01a4e#56/649\",\"1951\":\"v-66b01a4e#56/650\",\"1952\":\"v-66b01a4e#56/651\",\"1953\":\"v-66b01a4e#56/652\",\"1954\":\"v-66b01a4e#56/653\",\"1955\":\"v-66b01a4e#56/654\",\"1956\":\"v-66b01a4e#56/655\",\"1957\":\"v-66b01a4e#56/656\",\"1958\":\"v-66b01a4e#56/657\",\"1959\":\"v-66b01a4e#56/658\",\"1960\":\"v-66b01a4e#56/659\",\"1961\":\"v-66b01a4e#56/660\",\"1962\":\"v-66b01a4e#56/661\",\"1963\":\"v-66b01a4e#56/662\",\"1964\":\"v-66b01a4e#56/663\",\"1965\":\"v-66b01a4e#57\",\"1966\":\"v-66b01a4e#58\",\"1967\":\"v-66b01a4e#58/664\",\"1968\":\"v-66b01a4e#58/665\",\"1969\":\"v-66b01a4e#58/666\",\"1970\":\"v-66b01a4e#58/667\",\"1971\":\"v-66b01a4e#58/668\",\"1972\":\"v-66b01a4e#58/669\",\"1973\":\"v-66b01a4e#58/670\",\"1974\":\"v-66b01a4e#58/671\",\"1975\":\"v-66b01a4e#58/672\",\"1976\":\"v-66b01a4e#58/673\",\"1977\":\"v-66b01a4e#58/674\",\"1978\":\"v-66b01a4e#58/675\",\"1979\":\"v-66b01a4e#58/676\",\"1980\":\"v-66b01a4e#58/677\",\"1981\":\"v-66b01a4e#58/678\",\"1982\":\"v-66b01a4e#59\",\"1983\":\"v-66b01a4e#60\",\"1984\":\"v-66b01a4e#60/679\",\"1985\":\"v-66b01a4e#60/680\",\"1986\":\"v-66b01a4e#60/681\",\"1987\":\"v-66b01a4e#60/682\",\"1988\":\"v-66b01a4e#60/683\",\"1989\":\"v-66b01a4e#60/684\",\"1990\":\"v-66b01a4e#60/685\",\"1991\":\"v-66b01a4e#60/686\",\"1992\":\"v-66b01a4e#60/687\",\"1993\":\"v-66b01a4e#60/688\",\"1994\":\"v-66b01a4e#60/689\",\"1995\":\"v-66b01a4e#60/690\",\"1996\":\"v-66b01a4e#60/691\",\"1997\":\"v-66b01a4e#60/692\",\"1998\":\"v-66b01a4e#60/693\",\"1999\":\"v-66b01a4e#60/694\",\"2000\":\"v-66b01a4e#60/695\",\"2001\":\"v-66b01a4e#61\",\"2002\":\"v-66b01a4e#62\",\"2003\":\"v-66b01a4e#62/696\",\"2004\":\"v-66b01a4e#62/697\",\"2005\":\"v-66b01a4e#62/698\",\"2006\":\"v-66b01a4e#62/699\",\"2007\":\"v-66b01a4e#62/700\",\"2008\":\"v-66b01a4e#62/701\",\"2009\":\"v-66b01a4e#62/702\",\"2010\":\"v-66b01a4e#62/703\",\"2011\":\"v-66b01a4e#62/704\",\"2012\":\"v-66b01a4e#62/705\",\"2013\":\"v-66b01a4e#62/706\",\"2014\":\"v-66b01a4e#62/707\",\"2015\":\"v-66b01a4e#62/708\",\"2016\":\"v-66b01a4e#62/709\",\"2017\":\"v-66b01a4e#62/710\",\"2018\":\"v-66b01a4e#62/711\",\"2019\":\"v-66b01a4e#62/712\",\"2020\":\"v-66b01a4e#63\",\"2021\":\"v-66b01a4e#64\",\"2022\":\"v-66b01a4e#64/713\",\"2023\":\"v-66b01a4e#64/714\",\"2024\":\"v-66b01a4e#64/715\",\"2025\":\"v-66b01a4e#64/716\",\"2026\":\"v-66b01a4e#64/717\",\"2027\":\"v-66b01a4e#64/718\",\"2028\":\"v-66b01a4e#64/719\",\"2029\":\"v-66b01a4e#64/720\",\"2030\":\"v-66b01a4e#64/721\",\"2031\":\"v-66b01a4e#64/722\",\"2032\":\"v-66b01a4e#64/723\",\"2033\":\"v-66b01a4e#64/724\",\"2034\":\"v-66b01a4e#64/725\",\"2035\":\"v-66b01a4e#64/726\",\"2036\":\"v-66b01a4e#64/727\",\"2037\":\"v-66b01a4e#64/728\",\"2038\":\"v-66b01a4e#64/729\",\"2039\":\"v-66b01a4e#64/730\",\"2040\":\"v-66b01a4e#64/731\",\"2041\":\"v-66b01a4e#65\",\"2042\":\"v-66b01a4e#66\",\"2043\":\"v-66b01a4e#66/732\",\"2044\":\"v-66b01a4e#66/733\",\"2045\":\"v-66b01a4e#66/734\",\"2046\":\"v-66b01a4e#66/735\",\"2047\":\"v-66b01a4e#66/736\",\"2048\":\"v-66b01a4e#66/737\",\"2049\":\"v-66b01a4e#66/738\",\"2050\":\"v-66b01a4e#66/739\",\"2051\":\"v-66b01a4e#66/740\",\"2052\":\"v-66b01a4e#66/741\",\"2053\":\"v-66b01a4e#66/742\",\"2054\":\"v-66b01a4e#66/743\",\"2055\":\"v-66b01a4e#66/744\",\"2056\":\"v-66b01a4e#66/745\",\"2057\":\"v-66b01a4e#66/746\",\"2058\":\"v-66b01a4e#66/747\",\"2059\":\"v-66b01a4e#66/748\",\"2060\":\"v-66b01a4e#66/749\",\"2061\":\"v-66b01a4e#66/750\",\"2062\":\"v-66b01a4e#67\",\"2063\":\"v-66b01a4e#68\",\"2064\":\"v-66b01a4e#68/751\",\"2065\":\"v-66b01a4e#68/752\",\"2066\":\"v-66b01a4e#68/753\",\"2067\":\"v-66b01a4e#68/754\",\"2068\":\"v-66b01a4e#68/755\",\"2069\":\"v-66b01a4e#68/756\",\"2070\":\"v-66b01a4e#68/757\",\"2071\":\"v-66b01a4e#68/758\",\"2072\":\"v-66b01a4e#68/759\",\"2073\":\"v-66b01a4e#68/760\",\"2074\":\"v-66b01a4e#68/761\",\"2075\":\"v-66b01a4e#68/762\",\"2076\":\"v-66b01a4e#68/763\",\"2077\":\"v-66b01a4e#68/764\",\"2078\":\"v-66b01a4e#68/765\",\"2079\":\"v-66b01a4e#69\",\"2080\":\"v-66b01a4e#70\",\"2081\":\"v-66b01a4e#70/766\",\"2082\":\"v-66b01a4e#70/767\",\"2083\":\"v-66b01a4e#70/768\",\"2084\":\"v-66b01a4e#70/769\",\"2085\":\"v-66b01a4e#70/770\",\"2086\":\"v-66b01a4e#70/771\",\"2087\":\"v-66b01a4e#70/772\",\"2088\":\"v-66b01a4e#70/773\",\"2089\":\"v-66b01a4e#70/774\",\"2090\":\"v-66b01a4e#70/775\",\"2091\":\"v-66b01a4e#70/776\",\"2092\":\"v-66b01a4e#70/777\",\"2093\":\"v-66b01a4e#70/778\",\"2094\":\"v-66b01a4e#70/779\",\"2095\":\"v-66b01a4e#70/780\",\"2096\":\"v-4c8f7704\",\"2097\":\"v-4c8f7704#1\",\"2098\":\"v-4c8f7704#2\",\"2099\":\"v-4c8f7704#2/0\",\"2100\":\"v-4c8f7704#2/1\",\"2101\":\"v-4c8f7704#2/2\",\"2102\":\"v-4c8f7704#2/3\",\"2103\":\"v-4c8f7704#2/4\",\"2104\":\"v-4c8f7704#2/5\",\"2105\":\"v-4c8f7704#2/6\",\"2106\":\"v-4c8f7704#2/7\",\"2107\":\"v-4c8f7704#2/8\",\"2108\":\"v-4c8f7704#2/9\",\"2109\":\"v-4c8f7704#2/10\",\"2110\":\"v-4c8f7704#2/11\",\"2111\":\"v-4c8f7704#2/12\",\"2112\":\"v-4c8f7704#2/13\",\"2113\":\"v-4c8f7704#2/14\",\"2114\":\"v-4c8f7704#2/15\",\"2115\":\"v-4c8f7704#2/16\",\"2116\":\"v-4c8f7704#2/17\",\"2117\":\"v-4c8f7704#2/18\",\"2118\":\"v-0be6c672\",\"2119\":\"v-0be6c672#1\",\"2120\":\"v-0be6c672#2\",\"2121\":\"v-0be6c672#2/0\",\"2122\":\"v-0be6c672#2/1\",\"2123\":\"v-0be6c672#2/2\",\"2124\":\"v-0be6c672#2/3\",\"2125\":\"v-0be6c672#2/4\",\"2126\":\"v-0be6c672#2/5\",\"2127\":\"v-0be6c672#2/6\",\"2128\":\"v-0be6c672#2/7\",\"2129\":\"v-0be6c672#2/8\",\"2130\":\"v-0be6c672#2/9\",\"2131\":\"v-0be6c672#2/10\",\"2132\":\"v-0be6c672#2/11\",\"2133\":\"v-0be6c672#3\",\"2134\":\"v-0be6c672#4\",\"2135\":\"v-0be6c672#4/12\",\"2136\":\"v-0be6c672#4/13\",\"2137\":\"v-0be6c672#4/14\",\"2138\":\"v-0be6c672#4/15\",\"2139\":\"v-0be6c672#4/16\",\"2140\":\"v-0be6c672#4/17\",\"2141\":\"v-0be6c672#4/18\",\"2142\":\"v-0be6c672#4/19\",\"2143\":\"v-0be6c672#4/20\",\"2144\":\"v-0be6c672#4/21\",\"2145\":\"v-0be6c672#4/22\",\"2146\":\"v-0be6c672#4/23\",\"2147\":\"v-0be6c672#4/24\",\"2148\":\"v-0be6c672#4/25\",\"2149\":\"v-0be6c672#4/26\",\"2150\":\"v-0be6c672#4/27\",\"2151\":\"v-0be6c672#4/28\",\"2152\":\"v-0be6c672#4/29\",\"2153\":\"v-0be6c672#4/30\",\"2154\":\"v-0be6c672#4/31\",\"2155\":\"v-0be6c672#4/32\",\"2156\":\"v-0be6c672#4/33\",\"2157\":\"v-0be6c672#4/34\",\"2158\":\"v-0be6c672#4/35\",\"2159\":\"v-0be6c672#4/36\",\"2160\":\"v-0be6c672#4/37\",\"2161\":\"v-0be6c672#4/38\",\"2162\":\"v-944a2714\",\"2163\":\"v-944a2714#1\",\"2164\":\"v-944a2714#2\",\"2165\":\"v-944a2714#2/0\",\"2166\":\"v-944a2714#2/1\",\"2167\":\"v-944a2714#2/2\",\"2168\":\"v-944a2714#2/3\",\"2169\":\"v-944a2714#2/4\",\"2170\":\"v-944a2714#2/5\",\"2171\":\"v-944a2714#2/6\",\"2172\":\"v-944a2714#2/7\",\"2173\":\"v-944a2714#2/8\",\"2174\":\"v-944a2714#2/9\",\"2175\":\"v-944a2714#2/10\",\"2176\":\"v-944a2714#2/11\",\"2177\":\"v-944a2714#2/12\",\"2178\":\"v-944a2714#2/13\",\"2179\":\"v-944a2714#2/14\",\"2180\":\"v-944a2714#3\",\"2181\":\"v-944a2714#4\",\"2182\":\"v-944a2714#4/15\",\"2183\":\"v-944a2714#4/16\",\"2184\":\"v-944a2714#4/17\",\"2185\":\"v-944a2714#4/18\",\"2186\":\"v-944a2714#4/19\",\"2187\":\"v-944a2714#4/20\",\"2188\":\"v-944a2714#4/21\",\"2189\":\"v-944a2714#4/22\",\"2190\":\"v-944a2714#4/23\",\"2191\":\"v-944a2714#4/24\",\"2192\":\"v-944a2714#4/25\",\"2193\":\"v-944a2714#4/26\",\"2194\":\"v-944a2714#4/27\",\"2195\":\"v-944a2714#4/28\",\"2196\":\"v-944a2714#4/29\",\"2197\":\"v-944a2714#4/30\",\"2198\":\"v-944a2714#4/31\",\"2199\":\"v-944a2714#4/32\",\"2200\":\"v-944a2714#4/33\",\"2201\":\"v-944a2714#5\",\"2202\":\"v-944a2714#6\",\"2203\":\"v-944a2714#6/34\",\"2204\":\"v-944a2714#6/35\",\"2205\":\"v-944a2714#6/36\",\"2206\":\"v-944a2714#6/37\",\"2207\":\"v-944a2714#6/38\",\"2208\":\"v-944a2714#6/39\",\"2209\":\"v-944a2714#6/40\",\"2210\":\"v-944a2714#6/41\",\"2211\":\"v-944a2714#6/42\",\"2212\":\"v-944a2714#6/43\",\"2213\":\"v-944a2714#6/44\",\"2214\":\"v-944a2714#6/45\",\"2215\":\"v-944a2714#6/46\",\"2216\":\"v-944a2714#6/47\",\"2217\":\"v-944a2714#6/48\",\"2218\":\"v-944a2714#6/49\",\"2219\":\"v-944a2714#6/50\",\"2220\":\"v-944a2714#6/51\",\"2221\":\"v-944a2714#6/52\",\"2222\":\"v-51bd745e\",\"2223\":\"v-51bd745e#1\",\"2224\":\"v-51bd745e#2\",\"2225\":\"v-51bd745e#2/0\",\"2226\":\"v-51bd745e#2/1\",\"2227\":\"v-51bd745e#2/2\",\"2228\":\"v-51bd745e#2/3\",\"2229\":\"v-51bd745e#2/4\",\"2230\":\"v-51bd745e#2/5\",\"2231\":\"v-51bd745e#2/6\",\"2232\":\"v-51bd745e#2/7\",\"2233\":\"v-51bd745e#2/8\",\"2234\":\"v-51bd745e#2/9\",\"2235\":\"v-51bd745e#2/10\",\"2236\":\"v-51bd745e#2/11\",\"2237\":\"v-51bd745e#2/12\",\"2238\":\"v-51bd745e#2/13\",\"2239\":\"v-51bd745e#2/14\",\"2240\":\"v-51bd745e#2/15\",\"2241\":\"v-51bd745e#2/16\",\"2242\":\"v-51bd745e#2/17\",\"2243\":\"v-51bd745e#2/18\",\"2244\":\"v-51bd745e#2/19\",\"2245\":\"v-51bd745e#2/20\",\"2246\":\"v-51bd745e#2/21\",\"2247\":\"v-51bd745e#2/22\",\"2248\":\"v-51bd745e#2/23\",\"2249\":\"v-51bd745e#2/24\",\"2250\":\"v-51bd745e#2/25\",\"2251\":\"v-51bd745e#2/26\",\"2252\":\"v-51bd745e#2/27\",\"2253\":\"v-51bd745e#2/28\",\"2254\":\"v-51bd745e#2/29\",\"2255\":\"v-51bd745e#2/30\",\"2256\":\"v-51bd745e#2/31\",\"2257\":\"v-51bd745e#2/32\",\"2258\":\"v-51bd745e#3\",\"2259\":\"v-51bd745e#4\",\"2260\":\"v-51bd745e#4/33\",\"2261\":\"v-51bd745e#4/34\",\"2262\":\"v-51bd745e#4/35\",\"2263\":\"v-51bd745e#4/36\",\"2264\":\"v-51bd745e#4/37\",\"2265\":\"v-51bd745e#4/38\",\"2266\":\"v-51bd745e#4/39\",\"2267\":\"v-51bd745e#4/40\",\"2268\":\"v-51bd745e#4/41\",\"2269\":\"v-51bd745e#4/42\",\"2270\":\"v-51bd745e#4/43\",\"2271\":\"v-51bd745e#4/44\",\"2272\":\"v-51bd745e#4/45\",\"2273\":\"v-51bd745e#4/46\",\"2274\":\"v-51bd745e#4/47\",\"2275\":\"v-51bd745e#4/48\",\"2276\":\"v-51bd745e#4/49\",\"2277\":\"v-51bd745e#4/50\",\"2278\":\"v-51bd745e#4/51\",\"2279\":\"v-51bd745e#4/52\",\"2280\":\"v-51bd745e#4/53\",\"2281\":\"v-51bd745e#4/54\",\"2282\":\"v-51bd745e#4/55\",\"2283\":\"v-51bd745e#4/56\",\"2284\":\"v-51bd745e#4/57\",\"2285\":\"v-51bd745e#4/58\",\"2286\":\"v-51bd745e#4/59\",\"2287\":\"v-51bd745e#4/60\",\"2288\":\"v-51bd745e#4/61\",\"2289\":\"v-51bd745e#4/62\",\"2290\":\"v-51bd745e#4/63\",\"2291\":\"v-51bd745e#4/64\",\"2292\":\"v-51bd745e#4/65\",\"2293\":\"v-51bd745e#4/66\",\"2294\":\"v-51bd745e#4/67\",\"2295\":\"v-51bd745e#4/68\",\"2296\":\"v-51bd745e#4/69\",\"2297\":\"v-51bd745e#4/70\",\"2298\":\"v-51bd745e#4/71\",\"2299\":\"v-779e307d\",\"2300\":\"v-779e307d#1\",\"2301\":\"v-779e307d#1/0\",\"2302\":\"v-779e307d#2\",\"2303\":\"v-779e307d#2/0\",\"2304\":\"v-779e307d#2/1\",\"2305\":\"v-4264ab59\",\"2306\":\"v-4264ab59#1\",\"2307\":\"v-4264ab59#2\",\"2308\":\"v-4264ab59#2/0\",\"2309\":\"v-4264ab59#2/1\",\"2310\":\"v-4264ab59#2/2\",\"2311\":\"v-4264ab59#2/3\",\"2312\":\"v-4264ab59#2/4\",\"2313\":\"v-4264ab59#2/5\",\"2314\":\"v-4264ab59#2/6\",\"2315\":\"v-4264ab59#2/7\",\"2316\":\"v-4264ab59#2/8\",\"2317\":\"v-4264ab59#2/9\",\"2318\":\"v-4264ab59#2/10\",\"2319\":\"v-4264ab59#2/11\",\"2320\":\"v-4264ab59#2/12\",\"2321\":\"v-4264ab59#2/13\",\"2322\":\"v-4264ab59#2/14\",\"2323\":\"v-4264ab59#3\",\"2324\":\"v-4264ab59#4\",\"2325\":\"v-4264ab59#4/15\",\"2326\":\"v-4264ab59#4/16\",\"2327\":\"v-4264ab59#4/17\",\"2328\":\"v-4264ab59#4/18\",\"2329\":\"v-4264ab59#4/19\",\"2330\":\"v-4264ab59#4/20\",\"2331\":\"v-4264ab59#4/21\",\"2332\":\"v-4264ab59#4/22\",\"2333\":\"v-4264ab59#4/23\",\"2334\":\"v-4264ab59#4/24\",\"2335\":\"v-4264ab59#4/25\",\"2336\":\"v-4264ab59#4/26\",\"2337\":\"v-4264ab59#4/27\",\"2338\":\"v-4264ab59#4/28\",\"2339\":\"v-4264ab59#4/29\",\"2340\":\"v-4264ab59#4/30\",\"2341\":\"v-4264ab59#4/31\",\"2342\":\"v-16b45e31\",\"2343\":\"v-16b45e31#1\",\"2344\":\"v-16b45e31#2\",\"2345\":\"v-16b45e31#2/0\",\"2346\":\"v-16b45e31#2/1\",\"2347\":\"v-16b45e31#2/2\",\"2348\":\"v-16b45e31#2/3\",\"2349\":\"v-16b45e31#2/4\",\"2350\":\"v-16b45e31#2/5\",\"2351\":\"v-16b45e31#2/6\",\"2352\":\"v-16b45e31#2/7\",\"2353\":\"v-16b45e31#2/8\",\"2354\":\"v-16b45e31#2/9\",\"2355\":\"v-16b45e31#2/10\",\"2356\":\"v-16b45e31#2/11\",\"2357\":\"v-16b45e31#2/12\",\"2358\":\"v-16b45e31#2/13\",\"2359\":\"v-16b45e31#2/14\",\"2360\":\"v-128fab14\",\"2361\":\"v-128fab14#1\",\"2362\":\"v-128fab14#1/0\",\"2363\":\"v-4d85e582\",\"2364\":\"v-4d85e582#1\",\"2365\":\"v-4d85e582#1/0\",\"2366\":\"v-b4bde8a4\",\"2367\":\"v-b4bde8a4#1\",\"2368\":\"v-b4bde8a4#1/0\",\"2369\":\"v-b4bde8a4#1/1\",\"2370\":\"v-b4bde8a4#1/2\",\"2371\":\"v-b4bde8a4#1/3\",\"2372\":\"v-b4bde8a4#1/4\",\"2373\":\"v-b4bde8a4#1/5\",\"2374\":\"v-1feeda10\",\"2375\":\"v-1feeda10#0/0\",\"2376\":\"v-1feeda10#0/1\",\"2377\":\"v-13871802\",\"2378\":\"v-13871802#1\",\"2379\":\"v-13871802#1/0\",\"2380\":\"v-13871802#1/1\",\"2381\":\"v-f4ecc1f6\",\"2382\":\"v-f4ecc1f6#1\",\"2383\":\"v-f4ecc1f6#1/0\",\"2384\":\"v-f4ecc1f6#1/1\",\"2385\":\"v-26e56491\",\"2386\":\"v-26e56491#0/0\",\"2387\":\"v-2bdbf0e4\",\"2388\":\"v-2bdbf0e4#0/0\",\"2389\":\"v-2bdbf0e4#0/1\",\"2390\":\"v-2bdbf0e4#0/2\",\"2391\":\"v-2bdbf0e4#0/3\",\"2392\":\"v-ee768d5e\",\"2393\":\"v-ee768d5e#0/0\",\"2394\":\"v-ee768d5e#0/1\",\"2395\":\"v-ee768d5e#0/2\",\"2396\":\"v-ee768d5e#0/3\",\"2397\":\"v-5c5da655\",\"2398\":\"v-5c5da655#0/0\",\"2399\":\"v-5c5da655#0/1\",\"2400\":\"v-5c5da655#0/2\",\"2401\":\"v-5c5da655#0/3\",\"2402\":\"v-8bb3ea5c\",\"2403\":\"v-8bb3ea5c#0/0\",\"2404\":\"v-8bb3ea5c#0/1\",\"2405\":\"v-8bb3ea5c#0/2\",\"2406\":\"v-8bb3ea5c#0/3\",\"2407\":\"v-0dadcc03\",\"2408\":\"v-106be9a4\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2],\"2\":[1],\"3\":[3],\"4\":[1],\"5\":[null,1],\"6\":[null,1],\"7\":[1],\"8\":[1],\"9\":[null,2],\"10\":[1],\"11\":[null,5],\"12\":[null,1],\"13\":[1],\"14\":[1],\"15\":[null,2],\"16\":[1],\"17\":[1],\"18\":[null,1],\"19\":[null,2],\"20\":[1],\"21\":[2],\"22\":[null,1],\"23\":[null,1],\"24\":[3],\"25\":[4],\"26\":[null,18],\"27\":[null,6],\"28\":[2],\"29\":[null,7],\"30\":[2],\"31\":[null,7],\"32\":[2],\"33\":[null,11],\"34\":[5],\"35\":[null,3],\"36\":[5],\"37\":[null,9],\"38\":[6],\"39\":[null,10],\"40\":[4],\"41\":[null,6],\"42\":[1],\"43\":[null,12],\"44\":[1],\"45\":[6],\"46\":[null,8],\"47\":[null,4],\"48\":[null,4],\"49\":[null,4],\"50\":[null,2],\"51\":[null,4],\"52\":[null,3],\"53\":[1],\"54\":[1],\"55\":[null,11],\"56\":[null,14],\"57\":[1],\"58\":[null,3],\"59\":[null,5],\"60\":[null,4],\"61\":[null,2],\"62\":[null,2],\"63\":[null,2],\"64\":[1],\"65\":[1],\"66\":[1],\"67\":[null,1],\"68\":[null,6],\"69\":[null,5],\"70\":[1],\"71\":[null,9],\"72\":[3],\"73\":[null,30],\"74\":[1],\"75\":[1],\"76\":[null,5],\"77\":[null,4],\"78\":[1],\"79\":[null,4],\"80\":[null,4],\"81\":[1],\"82\":[1],\"83\":[null,3],\"84\":[1],\"85\":[null,1],\"86\":[null,1],\"87\":[null,1],\"88\":[null,1],\"89\":[null,1],\"90\":[null,2],\"91\":[null,3],\"92\":[null,1],\"93\":[null,8],\"94\":[null,2],\"95\":[null,4],\"96\":[null,2],\"97\":[null,2],\"98\":[null,4],\"99\":[null,2],\"100\":[null,2],\"101\":[null,4],\"102\":[null,1],\"103\":[null,2],\"104\":[null,4],\"105\":[null,1],\"106\":[null,2],\"107\":[null,6],\"108\":[null,1],\"109\":[null,2],\"110\":[null,6],\"111\":[null,1],\"112\":[null,4],\"113\":[null,7],\"114\":[null,2],\"115\":[null,3],\"116\":[null,6],\"117\":[null,1],\"118\":[null,3],\"119\":[null,6],\"120\":[null,1],\"121\":[null,3],\"122\":[null,6],\"123\":[null,1],\"124\":[null,2],\"125\":[null,3],\"126\":[null,7],\"127\":[null,3],\"128\":[null,3],\"129\":[null,5],\"130\":[null,1],\"131\":[null,3],\"132\":[null,5],\"133\":[null,1],\"134\":[1],\"135\":[null,1],\"136\":[null,1],\"137\":[null,1],\"138\":[null,1],\"139\":[null,1],\"140\":[null,2],\"141\":[null,1],\"142\":[null,2],\"143\":[null,2],\"144\":[null,2],\"145\":[null,2],\"146\":[null,2],\"147\":[null,1],\"148\":[null,3],\"149\":[null,2],\"150\":[null,2],\"151\":[null,1],\"152\":[null,2],\"153\":[null,1],\"154\":[null,2],\"155\":[null,5],\"156\":[null,2],\"157\":[null,1],\"158\":[null,2],\"159\":[null,1],\"160\":[null,2],\"161\":[null,1],\"162\":[null,2],\"163\":[null,1],\"164\":[null,2],\"165\":[null,1],\"166\":[null,2],\"167\":[null,2],\"168\":[null,1],\"169\":[null,2],\"170\":[null,2],\"171\":[null,1],\"172\":[null,2],\"173\":[null,2],\"174\":[null,1],\"175\":[null,2],\"176\":[null,2],\"177\":[null,1],\"178\":[null,2],\"179\":[null,2],\"180\":[null,2],\"181\":[null,2],\"182\":[null,2],\"183\":[null,2],\"184\":[null,2],\"185\":[null,5],\"186\":[null,2],\"187\":[null,1],\"188\":[null,2],\"189\":[null,1],\"190\":[null,2],\"191\":[null,1],\"192\":[null,2],\"193\":[null,1],\"194\":[null,3],\"195\":[null,5],\"196\":[null,3],\"197\":[null,3],\"198\":[null,5],\"199\":[null,3],\"200\":[null,2],\"201\":[null,2],\"202\":[null,1],\"203\":[null,2],\"204\":[null,2],\"205\":[null,1],\"206\":[null,2],\"207\":[null,1],\"208\":[null,26],\"209\":[3],\"210\":[3],\"211\":[null,1],\"212\":[null,1],\"213\":[null,1],\"214\":[null,1],\"215\":[null,3],\"216\":[null,2],\"217\":[null,1],\"218\":[null,2],\"219\":[null,1],\"220\":[null,2],\"221\":[null,1],\"222\":[null,2],\"223\":[null,1],\"224\":[null,2],\"225\":[null,1],\"226\":[null,2],\"227\":[null,1],\"228\":[null,2],\"229\":[null,1],\"230\":[null,6],\"231\":[3],\"232\":[null,4],\"233\":[null,7],\"234\":[1],\"235\":[null,5],\"236\":[null,5],\"237\":[1],\"238\":[null,4],\"239\":[null,2],\"240\":[null,9],\"241\":[null,4],\"242\":[null,3],\"243\":[1],\"244\":[null,2],\"245\":[1],\"246\":[1],\"247\":[null,5],\"248\":[null,3],\"249\":[null,2],\"250\":[1],\"251\":[null,4],\"252\":[1],\"253\":[null,2],\"254\":[null,4],\"255\":[1],\"256\":[null,4],\"257\":[1],\"258\":[null,7],\"259\":[null,3],\"260\":[1],\"261\":[3],\"262\":[null,5],\"263\":[1],\"264\":[null,5],\"265\":[null,9],\"266\":[null,1],\"267\":[1],\"268\":[null,5],\"269\":[null,1],\"270\":[1],\"271\":[null,5],\"272\":[null,1],\"273\":[3],\"274\":[null,6],\"275\":[1],\"276\":[null,5],\"277\":[1],\"278\":[null,5],\"279\":[null,1],\"280\":[1],\"281\":[1],\"282\":[null,5],\"283\":[null,2],\"284\":[1],\"285\":[null,3],\"286\":[null,5],\"287\":[null,5],\"288\":[null,5],\"289\":[null,5],\"290\":[1],\"291\":[null,16],\"292\":[null,3],\"293\":[null,4],\"294\":[null,4],\"295\":[null,4],\"296\":[null,4],\"297\":[null,4],\"298\":[null,3],\"299\":[null,4],\"300\":[null,3],\"301\":[null,3],\"302\":[null,4],\"303\":[null,2],\"304\":[null,4],\"305\":[null,2],\"306\":[null,3],\"307\":[null,3],\"308\":[null,4],\"309\":[null,3],\"310\":[null,2],\"311\":[null,4],\"312\":[null,3],\"313\":[null,7],\"314\":[null,9],\"315\":[null,3],\"316\":[null,5],\"317\":[null,2],\"318\":[null,3],\"319\":[null,3],\"320\":[null,3],\"321\":[null,7],\"322\":[null,3],\"323\":[null,3],\"324\":[null,8],\"325\":[null,3],\"326\":[null,5],\"327\":[null,7],\"328\":[null,3],\"329\":[null,3],\"330\":[null,3],\"331\":[null,7],\"332\":[null,7],\"333\":[null,8],\"334\":[1],\"335\":[1],\"336\":[null,17],\"337\":[1],\"338\":[1],\"339\":[null,5],\"340\":[null,3],\"341\":[null,11],\"342\":[null,10],\"343\":[null,1],\"344\":[3],\"345\":[null,2],\"346\":[null,8],\"347\":[null,10],\"348\":[null,8],\"349\":[1],\"350\":[1],\"351\":[null,3],\"352\":[null,1],\"353\":[null,4],\"354\":[null,1],\"355\":[null,1],\"356\":[4],\"357\":[4],\"358\":[4],\"359\":[null,16],\"360\":[4],\"361\":[3],\"362\":[null,15],\"363\":[null,6],\"364\":[2],\"365\":[2],\"366\":[2],\"367\":[null,20],\"368\":[3],\"369\":[3],\"370\":[5],\"371\":[null,13],\"372\":[null,7],\"373\":[8],\"374\":[null,1],\"375\":[null,1],\"376\":[null,1],\"377\":[null,1],\"378\":[null,1],\"379\":[null,5],\"380\":[null,1],\"381\":[null,3],\"382\":[null,3],\"383\":[null,1],\"384\":[null,6],\"385\":[null,4],\"386\":[null,1],\"387\":[null,3],\"388\":[null,7],\"389\":[6],\"390\":[4],\"391\":[null,8],\"392\":[null,9],\"393\":[2],\"394\":[1],\"395\":[5],\"396\":[null,2],\"397\":[1],\"398\":[null,5],\"399\":[null,3],\"400\":[null,1],\"401\":[null,2],\"402\":[null,4],\"403\":[null,3],\"404\":[2],\"405\":[4],\"406\":[null,4],\"407\":[null,1],\"408\":[5],\"409\":[null,3],\"410\":[null,5],\"411\":[4],\"412\":[null,7],\"413\":[6],\"414\":[null,2],\"415\":[null,1],\"416\":[null,3],\"417\":[2],\"418\":[4],\"419\":[null,4],\"420\":[null,1],\"421\":[5],\"422\":[null,3],\"423\":[null,5],\"424\":[4],\"425\":[null,7],\"426\":[6],\"427\":[null,2],\"428\":[null,1],\"429\":[null,3],\"430\":[1],\"431\":[1],\"432\":[null,3],\"433\":[null,2],\"434\":[1],\"435\":[null,3],\"436\":[null,3],\"437\":[null,5],\"438\":[null,3],\"439\":[null,3],\"440\":[null,3],\"441\":[null,3],\"442\":[null,3],\"443\":[null,3],\"444\":[null,3],\"445\":[null,3],\"446\":[null,5],\"447\":[null,5],\"448\":[null,4],\"449\":[null,3],\"450\":[null,3],\"451\":[null,11],\"452\":[null,3],\"453\":[null,6],\"454\":[null,3],\"455\":[null,5],\"456\":[null,4],\"457\":[null,9],\"458\":[null,3],\"459\":[null,2],\"460\":[null,6],\"461\":[null,4],\"462\":[null,3],\"463\":[null,4],\"464\":[null,2],\"465\":[null,2],\"466\":[null,3],\"467\":[null,4],\"468\":[null,3],\"469\":[null,1],\"470\":[null,6],\"471\":[null,9],\"472\":[null,3],\"473\":[null,3],\"474\":[null,12],\"475\":[null,3],\"476\":[null,8],\"477\":[null,5],\"478\":[null,12],\"479\":[null,5],\"480\":[null,3],\"481\":[null,6],\"482\":[null,3],\"483\":[null,3],\"484\":[null,3],\"485\":[1],\"486\":[null,3],\"487\":[null,1],\"488\":[null,5],\"489\":[null,3],\"490\":[null,5],\"491\":[3],\"492\":[1],\"493\":[null,8],\"494\":[1],\"495\":[null,2],\"496\":[3],\"497\":[1],\"498\":[null,48],\"499\":[1],\"500\":[null,2],\"501\":[null,1],\"502\":[3],\"503\":[1],\"504\":[null,36],\"505\":[2],\"506\":[1],\"507\":[null,27],\"508\":[3],\"509\":[1],\"510\":[null,15],\"511\":[3],\"512\":[1],\"513\":[null,46],\"514\":[1],\"515\":[null,2],\"516\":[5],\"517\":[1],\"518\":[null,13],\"519\":[1],\"520\":[null,1],\"521\":[null,1],\"522\":[null,1],\"523\":[null,8],\"524\":[null,3],\"525\":[null,7],\"526\":[6],\"527\":[1],\"528\":[null,20],\"529\":[1],\"530\":[1],\"531\":[null,9],\"532\":[null,2],\"533\":[null,21],\"534\":[1],\"535\":[null,4],\"536\":[1],\"537\":[null,2],\"538\":[3],\"539\":[null,2],\"540\":[1],\"541\":[null,9],\"542\":[null,11],\"543\":[null,3],\"544\":[2],\"545\":[null,8],\"546\":[null,4],\"547\":[null,4],\"548\":[null,3],\"549\":[null,5],\"550\":[1],\"551\":[null,2],\"552\":[null,2],\"553\":[1],\"554\":[null,12],\"555\":[null,8],\"556\":[6],\"557\":[1],\"558\":[null,2],\"559\":[3],\"560\":[1],\"561\":[null,8],\"562\":[1],\"563\":[null,3],\"564\":[null,2],\"565\":[null,3],\"566\":[null,3],\"567\":[null,2],\"568\":[1],\"569\":[null,3],\"570\":[null,3],\"571\":[3],\"572\":[1],\"573\":[null,35],\"574\":[1],\"575\":[null,4],\"576\":[2],\"577\":[1],\"578\":[null,8],\"579\":[1],\"580\":[null,1],\"581\":[3],\"582\":[1],\"583\":[null,91],\"584\":[1],\"585\":[null,1],\"586\":[1],\"587\":[null,1],\"588\":[5],\"589\":[1],\"590\":[null,9],\"591\":[1],\"592\":[null,1],\"593\":[null,3],\"594\":[null,22],\"595\":[1],\"596\":[null,2],\"597\":[1],\"598\":[null,8],\"599\":[null,2],\"600\":[3],\"601\":[1],\"602\":[null,40],\"603\":[1],\"604\":[null,3],\"605\":[null,3],\"606\":[1],\"607\":[1],\"608\":[null,1],\"609\":[null,4],\"610\":[null,1],\"611\":[4],\"612\":[null,1],\"613\":[null,3],\"614\":[null,1],\"615\":[3],\"616\":[1],\"617\":[null,5],\"618\":[1],\"619\":[null,13],\"620\":[3],\"621\":[1],\"622\":[null,3],\"623\":[null,8],\"624\":[null,2],\"625\":[null,97],\"626\":[3],\"627\":[1],\"628\":[null,8],\"629\":[null,4],\"630\":[4],\"631\":[1],\"632\":[null,18],\"633\":[3],\"634\":[1],\"635\":[null,4],\"636\":[1],\"637\":[null,2],\"638\":[1],\"639\":[null,5],\"640\":[3],\"641\":[1],\"642\":[null,7],\"643\":[1],\"644\":[null,1],\"645\":[null,9],\"646\":[null,9],\"647\":[null,3],\"648\":[1],\"649\":[null,3],\"650\":[null,1],\"651\":[null,3],\"652\":[1],\"653\":[null,4],\"654\":[null,4],\"655\":[null,4],\"656\":[null,6],\"657\":[null,2],\"658\":[1],\"659\":[null,2],\"660\":[3],\"661\":[1],\"662\":[null,14],\"663\":[1],\"664\":[null,1],\"665\":[1],\"666\":[null,22],\"667\":[null,5],\"668\":[null,6],\"669\":[null,2],\"670\":[1],\"671\":[null,3],\"672\":[5],\"673\":[null,4],\"674\":[3],\"675\":[null,4],\"676\":[5],\"677\":[1],\"678\":[null,17],\"679\":[1],\"680\":[null,5],\"681\":[1],\"682\":[null,3],\"683\":[3],\"684\":[1],\"685\":[null,10],\"686\":[1],\"687\":[null,3],\"688\":[null,1],\"689\":[null,1],\"690\":[3],\"691\":[null,4],\"692\":[3],\"693\":[1],\"694\":[null,28],\"695\":[1],\"696\":[null,1],\"697\":[3],\"698\":[1],\"699\":[null,26],\"700\":[1],\"701\":[null,1],\"702\":[1],\"703\":[null,1],\"704\":[3],\"705\":[1],\"706\":[null,9],\"707\":[1],\"708\":[null,2],\"709\":[3],\"710\":[1],\"711\":[null,4],\"712\":[1],\"713\":[null,2],\"714\":[null,1],\"715\":[null,2],\"716\":[null,2],\"717\":[null,8],\"718\":[3],\"719\":[1],\"720\":[null,48],\"721\":[1],\"722\":[null,6],\"723\":[1],\"724\":[null,1],\"725\":[null,1],\"726\":[null,1],\"727\":[null,1],\"728\":[null,2],\"729\":[4],\"730\":[2],\"731\":[null,18],\"732\":[1],\"733\":[null,1],\"734\":[null,8],\"735\":[1],\"736\":[2],\"737\":[1],\"738\":[null,1],\"739\":[null,1],\"740\":[null,1],\"741\":[null,1],\"742\":[null,1],\"743\":[null,1],\"744\":[null,2],\"745\":[null,1],\"746\":[null,11],\"747\":[null,1],\"748\":[null,15],\"749\":[null,2],\"750\":[null,12],\"751\":[null,3],\"752\":[null,14],\"753\":[null,2],\"754\":[null,14],\"755\":[2],\"756\":[1],\"757\":[null,1],\"758\":[null,1],\"759\":[null,1],\"760\":[null,1],\"761\":[null,1],\"762\":[null,1],\"763\":[null,2],\"764\":[null,1],\"765\":[null,11],\"766\":[null,1],\"767\":[null,15],\"768\":[null,2],\"769\":[null,12],\"770\":[null,3],\"771\":[null,14],\"772\":[null,2],\"773\":[null,14],\"774\":[2],\"775\":[1],\"776\":[null,1],\"777\":[null,1],\"778\":[null,1],\"779\":[null,1],\"780\":[null,1],\"781\":[null,1],\"782\":[null,2],\"783\":[null,1],\"784\":[null,11],\"785\":[null,1],\"786\":[null,15],\"787\":[null,2],\"788\":[null,12],\"789\":[null,3],\"790\":[null,14],\"791\":[null,2],\"792\":[null,14],\"793\":[2],\"794\":[1],\"795\":[null,1],\"796\":[null,1],\"797\":[null,1],\"798\":[null,1],\"799\":[null,1],\"800\":[null,1],\"801\":[null,2],\"802\":[null,1],\"803\":[null,11],\"804\":[null,1],\"805\":[null,15],\"806\":[null,2],\"807\":[null,12],\"808\":[null,3],\"809\":[null,14],\"810\":[null,2],\"811\":[null,14],\"812\":[2],\"813\":[1],\"814\":[null,1],\"815\":[null,1],\"816\":[null,1],\"817\":[null,1],\"818\":[null,3],\"819\":[null,1],\"820\":[null,14],\"821\":[null,1],\"822\":[null,16],\"823\":[null,2],\"824\":[null,14],\"825\":[null,3],\"826\":[null,16],\"827\":[null,2],\"828\":[null,16],\"829\":[2],\"830\":[1],\"831\":[null,1],\"832\":[null,1],\"833\":[null,1],\"834\":[null,1],\"835\":[null,3],\"836\":[null,1],\"837\":[null,14],\"838\":[null,1],\"839\":[null,16],\"840\":[null,2],\"841\":[null,14],\"842\":[null,3],\"843\":[null,16],\"844\":[null,2],\"845\":[null,16],\"846\":[2],\"847\":[1],\"848\":[null,1],\"849\":[null,1],\"850\":[null,1],\"851\":[null,1],\"852\":[null,3],\"853\":[null,1],\"854\":[null,14],\"855\":[null,1],\"856\":[null,16],\"857\":[null,2],\"858\":[null,14],\"859\":[null,3],\"860\":[null,16],\"861\":[null,2],\"862\":[null,16],\"863\":[2],\"864\":[1],\"865\":[null,1],\"866\":[null,1],\"867\":[null,1],\"868\":[null,1],\"869\":[null,3],\"870\":[null,1],\"871\":[null,14],\"872\":[null,1],\"873\":[null,16],\"874\":[null,2],\"875\":[null,14],\"876\":[null,3],\"877\":[null,16],\"878\":[null,2],\"879\":[null,16],\"880\":[1],\"881\":[2],\"882\":[5],\"883\":[null,1],\"884\":[null,1],\"885\":[null,1],\"886\":[null,1],\"887\":[null,1],\"888\":[null,1],\"889\":[null,2],\"890\":[null,1],\"891\":[null,14],\"892\":[null,1],\"893\":[null,18],\"894\":[null,2],\"895\":[null,15],\"896\":[null,3],\"897\":[null,17],\"898\":[null,2],\"899\":[null,17],\"900\":[2],\"901\":[4],\"902\":[null,1],\"903\":[null,1],\"904\":[null,1],\"905\":[null,1],\"906\":[null,1],\"907\":[null,1],\"908\":[null,3],\"909\":[null,1],\"910\":[null,17],\"911\":[null,1],\"912\":[null,20],\"913\":[null,2],\"914\":[null,18],\"915\":[null,3],\"916\":[null,20],\"917\":[null,2],\"918\":[null,20],\"919\":[2],\"920\":[4],\"921\":[null,1],\"922\":[null,1],\"923\":[null,1],\"924\":[null,1],\"925\":[null,1],\"926\":[null,1],\"927\":[null,1],\"928\":[null,1],\"929\":[null,2],\"930\":[null,1],\"931\":[null,14],\"932\":[null,1],\"933\":[null,18],\"934\":[null,2],\"935\":[null,16],\"936\":[null,3],\"937\":[null,17],\"938\":[null,2],\"939\":[null,18],\"940\":[2],\"941\":[1],\"942\":[null,1],\"943\":[null,1],\"944\":[null,1],\"945\":[null,1],\"946\":[null,1],\"947\":[null,1],\"948\":[null,2],\"949\":[null,1],\"950\":[null,11],\"951\":[null,1],\"952\":[null,15],\"953\":[null,2],\"954\":[null,12],\"955\":[null,3],\"956\":[null,14],\"957\":[null,2],\"958\":[null,14],\"959\":[1],\"960\":[2],\"961\":[3],\"962\":[null,1],\"963\":[null,1],\"964\":[null,1],\"965\":[null,1],\"966\":[null,1],\"967\":[null,1],\"968\":[null,1],\"969\":[null,1],\"970\":[null,1],\"971\":[null,1],\"972\":[null,1],\"973\":[null,1],\"974\":[null,3],\"975\":[null,1],\"976\":[null,19],\"977\":[null,1],\"978\":[null,23],\"979\":[null,2],\"980\":[null,21],\"981\":[null,3],\"982\":[null,23],\"983\":[null,2],\"984\":[null,23],\"985\":[2],\"986\":[3],\"987\":[null,1],\"988\":[null,1],\"989\":[null,1],\"990\":[null,1],\"991\":[null,1],\"992\":[null,1],\"993\":[null,2],\"994\":[null,1],\"995\":[null,12],\"996\":[null,1],\"997\":[null,17],\"998\":[null,2],\"999\":[null,13],\"1000\":[null,3],\"1001\":[null,16],\"1002\":[null,2],\"1003\":[null,15],\"1004\":[1],\"1005\":[2],\"1006\":[1],\"1007\":[null,1],\"1008\":[null,1],\"1009\":[null,1],\"1010\":[null,1],\"1011\":[null,1],\"1012\":[null,1],\"1013\":[null,1],\"1014\":[null,1],\"1015\":[null,3],\"1016\":[null,1],\"1017\":[null,16],\"1018\":[null,1],\"1019\":[null,18],\"1020\":[null,2],\"1021\":[null,16],\"1022\":[null,3],\"1023\":[null,18],\"1024\":[null,2],\"1025\":[null,18],\"1026\":[2],\"1027\":[2],\"1028\":[null,1],\"1029\":[null,1],\"1030\":[null,1],\"1031\":[null,1],\"1032\":[null,1],\"1033\":[null,1],\"1034\":[null,3],\"1035\":[null,1],\"1036\":[null,16],\"1037\":[null,1],\"1038\":[null,19],\"1039\":[null,2],\"1040\":[null,17],\"1041\":[null,3],\"1042\":[null,19],\"1043\":[null,2],\"1044\":[null,19],\"1045\":[2],\"1046\":[2],\"1047\":[null,1],\"1048\":[null,1],\"1049\":[null,1],\"1050\":[null,1],\"1051\":[null,1],\"1052\":[null,1],\"1053\":[null,3],\"1054\":[null,1],\"1055\":[null,16],\"1056\":[null,1],\"1057\":[null,19],\"1058\":[null,2],\"1059\":[null,17],\"1060\":[null,3],\"1061\":[null,19],\"1062\":[null,2],\"1063\":[null,19],\"1064\":[2],\"1065\":[4],\"1066\":[null,1],\"1067\":[null,1],\"1068\":[null,1],\"1069\":[null,1],\"1070\":[null,1],\"1071\":[null,1],\"1072\":[null,3],\"1073\":[null,1],\"1074\":[null,17],\"1075\":[null,1],\"1076\":[null,19],\"1077\":[null,2],\"1078\":[null,17],\"1079\":[null,3],\"1080\":[null,19],\"1081\":[null,2],\"1082\":[null,19],\"1083\":[2],\"1084\":[4],\"1085\":[null,1],\"1086\":[null,1],\"1087\":[null,1],\"1088\":[null,1],\"1089\":[null,1],\"1090\":[null,1],\"1091\":[null,3],\"1092\":[null,1],\"1093\":[null,17],\"1094\":[null,1],\"1095\":[null,20],\"1096\":[null,2],\"1097\":[null,18],\"1098\":[null,3],\"1099\":[null,20],\"1100\":[null,2],\"1101\":[null,20],\"1102\":[2],\"1103\":[3],\"1104\":[null,1],\"1105\":[null,1],\"1106\":[null,1],\"1107\":[null,1],\"1108\":[null,3],\"1109\":[null,1],\"1110\":[null,15],\"1111\":[null,1],\"1112\":[null,18],\"1113\":[null,2],\"1114\":[null,15],\"1115\":[null,3],\"1116\":[null,18],\"1117\":[null,2],\"1118\":[null,17],\"1119\":[2],\"1120\":[3],\"1121\":[null,1],\"1122\":[null,1],\"1123\":[null,1],\"1124\":[null,1],\"1125\":[null,1],\"1126\":[null,1],\"1127\":[null,1],\"1128\":[null,1],\"1129\":[null,3],\"1130\":[null,1],\"1131\":[null,17],\"1132\":[null,1],\"1133\":[null,19],\"1134\":[null,2],\"1135\":[null,17],\"1136\":[null,3],\"1137\":[null,19],\"1138\":[null,2],\"1139\":[null,19],\"1140\":[2],\"1141\":[4],\"1142\":[null,1],\"1143\":[null,1],\"1144\":[null,1],\"1145\":[null,1],\"1146\":[null,1],\"1147\":[null,1],\"1148\":[null,1],\"1149\":[null,1],\"1150\":[null,1],\"1151\":[null,1],\"1152\":[null,3],\"1153\":[null,1],\"1154\":[null,19],\"1155\":[null,1],\"1156\":[null,21],\"1157\":[null,2],\"1158\":[null,19],\"1159\":[null,3],\"1160\":[null,21],\"1161\":[null,2],\"1162\":[null,21],\"1163\":[2],\"1164\":[3],\"1165\":[null,1],\"1166\":[null,1],\"1167\":[null,1],\"1168\":[null,1],\"1169\":[null,1],\"1170\":[null,1],\"1171\":[null,3],\"1172\":[null,1],\"1173\":[null,16],\"1174\":[null,1],\"1175\":[null,18],\"1176\":[null,2],\"1177\":[null,16],\"1178\":[null,3],\"1179\":[null,18],\"1180\":[null,2],\"1181\":[null,18],\"1182\":[1],\"1183\":[2],\"1184\":[3],\"1185\":[null,1],\"1186\":[null,1],\"1187\":[null,1],\"1188\":[null,1],\"1189\":[null,3],\"1190\":[null,1],\"1191\":[null,15],\"1192\":[null,1],\"1193\":[null,18],\"1194\":[null,2],\"1195\":[null,15],\"1196\":[null,3],\"1197\":[null,18],\"1198\":[null,2],\"1199\":[null,17],\"1200\":[2],\"1201\":[3],\"1202\":[null,2],\"1203\":[null,3],\"1204\":[null,1],\"1205\":[null,14],\"1206\":[null,1],\"1207\":[null,14],\"1208\":[null,2],\"1209\":[null,13],\"1210\":[null,3],\"1211\":[null,16],\"1212\":[null,2],\"1213\":[null,13],\"1214\":[2],\"1215\":[1],\"1216\":[null,2],\"1217\":[null,2],\"1218\":[null,1],\"1219\":[null,9],\"1220\":[null,1],\"1221\":[null,10],\"1222\":[null,2],\"1223\":[null,9],\"1224\":[null,3],\"1225\":[null,11],\"1226\":[null,2],\"1227\":[null,9],\"1228\":[1],\"1229\":[2],\"1230\":[3],\"1231\":[null,1],\"1232\":[null,1],\"1233\":[null,1],\"1234\":[null,1],\"1235\":[null,1],\"1236\":[null,1],\"1237\":[null,1],\"1238\":[null,1],\"1239\":[null,1],\"1240\":[null,1],\"1241\":[null,3],\"1242\":[null,1],\"1243\":[null,18],\"1244\":[1],\"1245\":[2],\"1246\":[3],\"1247\":[null,1],\"1248\":[null,1],\"1249\":[null,1],\"1250\":[null,1],\"1251\":[null,1],\"1252\":[null,1],\"1253\":[null,1],\"1254\":[null,1],\"1255\":[null,1],\"1256\":[null,1],\"1257\":[null,1],\"1258\":[null,1],\"1259\":[null,1],\"1260\":[null,1],\"1261\":[null,1],\"1262\":[null,1],\"1263\":[null,3],\"1264\":[null,1],\"1265\":[null,22],\"1266\":[null,1],\"1267\":[null,24],\"1268\":[null,2],\"1269\":[null,23],\"1270\":[null,3],\"1271\":[null,26],\"1272\":[null,2],\"1273\":[null,25],\"1274\":[2],\"1275\":[3],\"1276\":[null,1],\"1277\":[null,1],\"1278\":[null,1],\"1279\":[null,1],\"1280\":[null,1],\"1281\":[null,1],\"1282\":[null,1],\"1283\":[null,1],\"1284\":[null,1],\"1285\":[null,1],\"1286\":[null,1],\"1287\":[null,1],\"1288\":[null,1],\"1289\":[null,1],\"1290\":[null,1],\"1291\":[null,1],\"1292\":[null,3],\"1293\":[null,1],\"1294\":[null,22],\"1295\":[null,1],\"1296\":[null,23],\"1297\":[null,2],\"1298\":[null,22],\"1299\":[null,3],\"1300\":[null,25],\"1301\":[null,2],\"1302\":[null,24],\"1303\":[2],\"1304\":[3],\"1305\":[null,1],\"1306\":[null,1],\"1307\":[null,1],\"1308\":[null,1],\"1309\":[null,1],\"1310\":[null,1],\"1311\":[null,1],\"1312\":[null,1],\"1313\":[null,1],\"1314\":[null,1],\"1315\":[null,3],\"1316\":[null,1],\"1317\":[null,19],\"1318\":[null,1],\"1319\":[null,21],\"1320\":[null,2],\"1321\":[null,20],\"1322\":[null,3],\"1323\":[null,23],\"1324\":[null,2],\"1325\":[null,22],\"1326\":[2],\"1327\":[3],\"1328\":[null,1],\"1329\":[null,1],\"1330\":[null,1],\"1331\":[null,1],\"1332\":[null,1],\"1333\":[null,1],\"1334\":[null,1],\"1335\":[null,1],\"1336\":[null,1],\"1337\":[null,1],\"1338\":[null,3],\"1339\":[null,1],\"1340\":[null,19],\"1341\":[null,1],\"1342\":[null,20],\"1343\":[null,2],\"1344\":[null,19],\"1345\":[null,3],\"1346\":[null,22],\"1347\":[null,2],\"1348\":[null,21],\"1349\":[2],\"1350\":[5],\"1351\":[null,1],\"1352\":[null,1],\"1353\":[null,1],\"1354\":[null,1],\"1355\":[null,1],\"1356\":[null,1],\"1357\":[null,1],\"1358\":[null,1],\"1359\":[null,1],\"1360\":[null,1],\"1361\":[null,1],\"1362\":[null,1],\"1363\":[null,1],\"1364\":[null,1],\"1365\":[null,1],\"1366\":[null,1],\"1367\":[null,3],\"1368\":[null,1],\"1369\":[null,23],\"1370\":[null,1],\"1371\":[null,25],\"1372\":[null,2],\"1373\":[null,24],\"1374\":[null,3],\"1375\":[null,27],\"1376\":[null,2],\"1377\":[null,26],\"1378\":[2],\"1379\":[5],\"1380\":[null,1],\"1381\":[null,1],\"1382\":[null,1],\"1383\":[null,1],\"1384\":[null,1],\"1385\":[null,1],\"1386\":[null,1],\"1387\":[null,1],\"1388\":[null,1],\"1389\":[null,1],\"1390\":[null,1],\"1391\":[null,1],\"1392\":[null,1],\"1393\":[null,1],\"1394\":[null,1],\"1395\":[null,1],\"1396\":[null,3],\"1397\":[null,1],\"1398\":[null,23],\"1399\":[null,1],\"1400\":[null,24],\"1401\":[null,2],\"1402\":[null,23],\"1403\":[null,3],\"1404\":[null,26],\"1405\":[null,2],\"1406\":[null,25],\"1407\":[2],\"1408\":[5],\"1409\":[null,1],\"1410\":[null,1],\"1411\":[null,1],\"1412\":[null,1],\"1413\":[null,1],\"1414\":[null,1],\"1415\":[null,1],\"1416\":[null,1],\"1417\":[null,1],\"1418\":[null,1],\"1419\":[null,3],\"1420\":[null,1],\"1421\":[null,20],\"1422\":[null,1],\"1423\":[null,22],\"1424\":[null,2],\"1425\":[null,21],\"1426\":[null,3],\"1427\":[null,24],\"1428\":[null,2],\"1429\":[null,23],\"1430\":[2],\"1431\":[5],\"1432\":[null,1],\"1433\":[null,1],\"1434\":[null,1],\"1435\":[null,1],\"1436\":[null,1],\"1437\":[null,1],\"1438\":[null,1],\"1439\":[null,1],\"1440\":[null,1],\"1441\":[null,1],\"1442\":[null,3],\"1443\":[null,1],\"1444\":[null,20],\"1445\":[null,1],\"1446\":[null,21],\"1447\":[null,2],\"1448\":[null,20],\"1449\":[null,3],\"1450\":[null,23],\"1451\":[null,2],\"1452\":[null,22],\"1453\":[2],\"1454\":[5],\"1455\":[null,1],\"1456\":[null,1],\"1457\":[null,1],\"1458\":[null,1],\"1459\":[null,1],\"1460\":[null,1],\"1461\":[null,1],\"1462\":[null,1],\"1463\":[null,1],\"1464\":[null,1],\"1465\":[null,1],\"1466\":[null,1],\"1467\":[null,1],\"1468\":[null,1],\"1469\":[null,1],\"1470\":[null,1],\"1471\":[null,3],\"1472\":[null,1],\"1473\":[null,23],\"1474\":[null,1],\"1475\":[null,25],\"1476\":[null,2],\"1477\":[null,24],\"1478\":[null,3],\"1479\":[null,27],\"1480\":[null,2],\"1481\":[null,26],\"1482\":[2],\"1483\":[5],\"1484\":[null,1],\"1485\":[null,1],\"1486\":[null,1],\"1487\":[null,1],\"1488\":[null,1],\"1489\":[null,1],\"1490\":[null,1],\"1491\":[null,1],\"1492\":[null,1],\"1493\":[null,1],\"1494\":[null,1],\"1495\":[null,1],\"1496\":[null,1],\"1497\":[null,1],\"1498\":[null,1],\"1499\":[null,1],\"1500\":[null,3],\"1501\":[null,1],\"1502\":[null,23],\"1503\":[null,1],\"1504\":[null,24],\"1505\":[null,2],\"1506\":[null,23],\"1507\":[null,3],\"1508\":[null,26],\"1509\":[null,2],\"1510\":[null,25],\"1511\":[2],\"1512\":[5],\"1513\":[null,1],\"1514\":[null,1],\"1515\":[null,1],\"1516\":[null,1],\"1517\":[null,1],\"1518\":[null,1],\"1519\":[null,1],\"1520\":[null,1],\"1521\":[null,1],\"1522\":[null,1],\"1523\":[null,3],\"1524\":[null,1],\"1525\":[null,20],\"1526\":[null,1],\"1527\":[null,22],\"1528\":[null,2],\"1529\":[null,21],\"1530\":[null,3],\"1531\":[null,24],\"1532\":[null,2],\"1533\":[null,23],\"1534\":[2],\"1535\":[5],\"1536\":[null,1],\"1537\":[null,1],\"1538\":[null,1],\"1539\":[null,1],\"1540\":[null,1],\"1541\":[null,1],\"1542\":[null,1],\"1543\":[null,1],\"1544\":[null,1],\"1545\":[null,1],\"1546\":[null,3],\"1547\":[null,1],\"1548\":[null,20],\"1549\":[null,1],\"1550\":[null,21],\"1551\":[null,2],\"1552\":[null,20],\"1553\":[null,3],\"1554\":[null,23],\"1555\":[null,2],\"1556\":[null,22],\"1557\":[2],\"1558\":[5],\"1559\":[null,1],\"1560\":[null,1],\"1561\":[null,1],\"1562\":[null,1],\"1563\":[null,1],\"1564\":[null,1],\"1565\":[null,1],\"1566\":[null,1],\"1567\":[null,1],\"1568\":[null,1],\"1569\":[null,1],\"1570\":[null,1],\"1571\":[null,3],\"1572\":[null,1],\"1573\":[null,21],\"1574\":[null,1],\"1575\":[null,25],\"1576\":[null,2],\"1577\":[null,23],\"1578\":[null,3],\"1579\":[null,26],\"1580\":[null,2],\"1581\":[null,25],\"1582\":[2],\"1583\":[5],\"1584\":[null,1],\"1585\":[null,1],\"1586\":[null,1],\"1587\":[null,1],\"1588\":[null,1],\"1589\":[null,1],\"1590\":[null,1],\"1591\":[null,1],\"1592\":[null,1],\"1593\":[null,1],\"1594\":[null,1],\"1595\":[null,1],\"1596\":[null,3],\"1597\":[null,1],\"1598\":[null,21],\"1599\":[null,1],\"1600\":[null,24],\"1601\":[null,2],\"1602\":[null,22],\"1603\":[null,3],\"1604\":[null,25],\"1605\":[null,2],\"1606\":[null,24],\"1607\":[2],\"1608\":[1],\"1609\":[null,1],\"1610\":[null,1],\"1611\":[null,1],\"1612\":[null,1],\"1613\":[null,1],\"1614\":[null,1],\"1615\":[null,1],\"1616\":[null,1],\"1617\":[null,1],\"1618\":[null,1],\"1619\":[null,1],\"1620\":[null,1],\"1621\":[null,1],\"1622\":[null,1],\"1623\":[null,3],\"1624\":[null,1],\"1625\":[null,19],\"1626\":[null,1],\"1627\":[null,23],\"1628\":[null,2],\"1629\":[null,21],\"1630\":[null,3],\"1631\":[null,23],\"1632\":[null,2],\"1633\":[null,23],\"1634\":[2],\"1635\":[1],\"1636\":[null,1],\"1637\":[null,1],\"1638\":[null,1],\"1639\":[null,1],\"1640\":[null,1],\"1641\":[null,1],\"1642\":[null,1],\"1643\":[null,1],\"1644\":[null,1],\"1645\":[null,1],\"1646\":[null,1],\"1647\":[null,1],\"1648\":[null,1],\"1649\":[null,1],\"1650\":[null,1],\"1651\":[null,1],\"1652\":[null,1],\"1653\":[null,1],\"1654\":[null,3],\"1655\":[null,1],\"1656\":[null,21],\"1657\":[null,1],\"1658\":[null,25],\"1659\":[null,2],\"1660\":[null,23],\"1661\":[null,3],\"1662\":[null,25],\"1663\":[null,2],\"1664\":[null,25],\"1665\":[2],\"1666\":[3],\"1667\":[null,1],\"1668\":[null,1],\"1669\":[null,1],\"1670\":[null,1],\"1671\":[null,1],\"1672\":[null,1],\"1673\":[null,1],\"1674\":[null,1],\"1675\":[null,1],\"1676\":[null,1],\"1677\":[null,3],\"1678\":[null,1],\"1679\":[null,19],\"1680\":[null,1],\"1681\":[null,21],\"1682\":[null,2],\"1683\":[null,20],\"1684\":[null,3],\"1685\":[null,23],\"1686\":[null,2],\"1687\":[null,22],\"1688\":[2],\"1689\":[3],\"1690\":[null,1],\"1691\":[null,1],\"1692\":[null,1],\"1693\":[null,1],\"1694\":[null,1],\"1695\":[null,1],\"1696\":[null,1],\"1697\":[null,1],\"1698\":[null,1],\"1699\":[null,1],\"1700\":[null,3],\"1701\":[null,1],\"1702\":[null,19],\"1703\":[null,1],\"1704\":[null,20],\"1705\":[null,2],\"1706\":[null,19],\"1707\":[null,3],\"1708\":[null,22],\"1709\":[null,2],\"1710\":[null,21],\"1711\":[2],\"1712\":[8],\"1713\":[null,1],\"1714\":[null,1],\"1715\":[null,1],\"1716\":[null,1],\"1717\":[null,1],\"1718\":[null,1],\"1719\":[null,1],\"1720\":[null,1],\"1721\":[null,1],\"1722\":[null,1],\"1723\":[null,1],\"1724\":[null,1],\"1725\":[null,3],\"1726\":[null,1],\"1727\":[null,24],\"1728\":[null,1],\"1729\":[null,27],\"1730\":[null,2],\"1731\":[null,25],\"1732\":[null,3],\"1733\":[null,28],\"1734\":[null,2],\"1735\":[null,27],\"1736\":[2],\"1737\":[8],\"1738\":[null,1],\"1739\":[null,1],\"1740\":[null,1],\"1741\":[null,1],\"1742\":[null,1],\"1743\":[null,1],\"1744\":[null,1],\"1745\":[null,1],\"1746\":[null,1],\"1747\":[null,1],\"1748\":[null,1],\"1749\":[null,1],\"1750\":[null,3],\"1751\":[null,1],\"1752\":[null,24],\"1753\":[null,1],\"1754\":[null,26],\"1755\":[null,2],\"1756\":[null,24],\"1757\":[null,3],\"1758\":[null,27],\"1759\":[null,2],\"1760\":[null,26],\"1761\":[2],\"1762\":[9],\"1763\":[null,1],\"1764\":[null,1],\"1765\":[null,1],\"1766\":[null,1],\"1767\":[null,1],\"1768\":[null,1],\"1769\":[null,1],\"1770\":[null,1],\"1771\":[null,1],\"1772\":[null,1],\"1773\":[null,1],\"1774\":[null,1],\"1775\":[null,1],\"1776\":[null,1],\"1777\":[null,3],\"1778\":[null,1],\"1779\":[null,26],\"1780\":[null,1],\"1781\":[null,30],\"1782\":[null,2],\"1783\":[null,28],\"1784\":[null,3],\"1785\":[null,31],\"1786\":[null,2],\"1787\":[null,30],\"1788\":[2],\"1789\":[9],\"1790\":[null,1],\"1791\":[null,1],\"1792\":[null,1],\"1793\":[null,1],\"1794\":[null,1],\"1795\":[null,1],\"1796\":[null,1],\"1797\":[null,1],\"1798\":[null,1],\"1799\":[null,1],\"1800\":[null,1],\"1801\":[null,1],\"1802\":[null,1],\"1803\":[null,1],\"1804\":[null,3],\"1805\":[null,1],\"1806\":[null,26],\"1807\":[null,1],\"1808\":[null,29],\"1809\":[null,2],\"1810\":[null,27],\"1811\":[null,3],\"1812\":[null,30],\"1813\":[null,2],\"1814\":[null,29],\"1815\":[2],\"1816\":[3],\"1817\":[null,1],\"1818\":[null,1],\"1819\":[null,1],\"1820\":[null,1],\"1821\":[null,1],\"1822\":[null,1],\"1823\":[null,1],\"1824\":[null,1],\"1825\":[null,1],\"1826\":[null,1],\"1827\":[null,1],\"1828\":[null,1],\"1829\":[null,3],\"1830\":[null,1],\"1831\":[null,20],\"1832\":[null,1],\"1833\":[null,24],\"1834\":[null,2],\"1835\":[null,22],\"1836\":[null,3],\"1837\":[null,25],\"1838\":[null,2],\"1839\":[null,24],\"1840\":[2],\"1841\":[3],\"1842\":[null,1],\"1843\":[null,1],\"1844\":[null,1],\"1845\":[null,1],\"1846\":[null,1],\"1847\":[null,1],\"1848\":[null,1],\"1849\":[null,1],\"1850\":[null,1],\"1851\":[null,1],\"1852\":[null,1],\"1853\":[null,1],\"1854\":[null,3],\"1855\":[null,1],\"1856\":[null,20],\"1857\":[null,1],\"1858\":[null,23],\"1859\":[null,2],\"1860\":[null,21],\"1861\":[null,3],\"1862\":[null,24],\"1863\":[null,2],\"1864\":[null,23],\"1865\":[2],\"1866\":[5],\"1867\":[null,1],\"1868\":[null,1],\"1869\":[null,1],\"1870\":[null,1],\"1871\":[null,1],\"1872\":[null,1],\"1873\":[null,1],\"1874\":[null,1],\"1875\":[null,1],\"1876\":[null,1],\"1877\":[null,1],\"1878\":[null,1],\"1879\":[null,3],\"1880\":[null,1],\"1881\":[null,21],\"1882\":[null,1],\"1883\":[null,25],\"1884\":[null,2],\"1885\":[null,23],\"1886\":[null,3],\"1887\":[null,26],\"1888\":[null,2],\"1889\":[null,25],\"1890\":[2],\"1891\":[5],\"1892\":[null,1],\"1893\":[null,1],\"1894\":[null,1],\"1895\":[null,1],\"1896\":[null,1],\"1897\":[null,1],\"1898\":[null,1],\"1899\":[null,1],\"1900\":[null,1],\"1901\":[null,1],\"1902\":[null,1],\"1903\":[null,1],\"1904\":[null,3],\"1905\":[null,1],\"1906\":[null,21],\"1907\":[null,1],\"1908\":[null,24],\"1909\":[null,2],\"1910\":[null,22],\"1911\":[null,3],\"1912\":[null,25],\"1913\":[null,2],\"1914\":[null,24],\"1915\":[2],\"1916\":[9],\"1917\":[null,1],\"1918\":[null,1],\"1919\":[null,1],\"1920\":[null,1],\"1921\":[null,1],\"1922\":[null,1],\"1923\":[null,1],\"1924\":[null,1],\"1925\":[null,1],\"1926\":[null,1],\"1927\":[null,1],\"1928\":[null,1],\"1929\":[null,3],\"1930\":[null,1],\"1931\":[null,25],\"1932\":[null,1],\"1933\":[null,28],\"1934\":[null,2],\"1935\":[null,26],\"1936\":[null,3],\"1937\":[null,29],\"1938\":[null,2],\"1939\":[null,28],\"1940\":[2],\"1941\":[6],\"1942\":[null,1],\"1943\":[null,1],\"1944\":[null,1],\"1945\":[null,1],\"1946\":[null,1],\"1947\":[null,1],\"1948\":[null,1],\"1949\":[null,1],\"1950\":[null,1],\"1951\":[null,1],\"1952\":[null,1],\"1953\":[null,1],\"1954\":[null,3],\"1955\":[null,1],\"1956\":[null,22],\"1957\":[null,1],\"1958\":[null,25],\"1959\":[null,2],\"1960\":[null,23],\"1961\":[null,3],\"1962\":[null,26],\"1963\":[null,2],\"1964\":[null,25],\"1965\":[2],\"1966\":[6],\"1967\":[null,1],\"1968\":[null,1],\"1969\":[null,1],\"1970\":[null,1],\"1971\":[null,3],\"1972\":[null,1],\"1973\":[null,18],\"1974\":[null,1],\"1975\":[null,20],\"1976\":[null,2],\"1977\":[null,18],\"1978\":[null,3],\"1979\":[null,20],\"1980\":[null,2],\"1981\":[null,20],\"1982\":[2],\"1983\":[4],\"1984\":[null,1],\"1985\":[null,1],\"1986\":[null,1],\"1987\":[null,1],\"1988\":[null,1],\"1989\":[null,1],\"1990\":[null,3],\"1991\":[null,1],\"1992\":[null,17],\"1993\":[null,1],\"1994\":[null,19],\"1995\":[null,2],\"1996\":[null,17],\"1997\":[null,3],\"1998\":[null,19],\"1999\":[null,2],\"2000\":[null,19],\"2001\":[2],\"2002\":[3],\"2003\":[null,1],\"2004\":[null,1],\"2005\":[null,1],\"2006\":[null,1],\"2007\":[null,1],\"2008\":[null,1],\"2009\":[null,3],\"2010\":[null,1],\"2011\":[null,16],\"2012\":[null,1],\"2013\":[null,19],\"2014\":[null,2],\"2015\":[null,17],\"2016\":[null,3],\"2017\":[null,19],\"2018\":[null,2],\"2019\":[null,19],\"2020\":[2],\"2021\":[3],\"2022\":[null,1],\"2023\":[null,1],\"2024\":[null,1],\"2025\":[null,1],\"2026\":[null,1],\"2027\":[null,1],\"2028\":[null,1],\"2029\":[null,1],\"2030\":[null,3],\"2031\":[null,1],\"2032\":[null,17],\"2033\":[null,1],\"2034\":[null,20],\"2035\":[null,2],\"2036\":[null,18],\"2037\":[null,3],\"2038\":[null,20],\"2039\":[null,2],\"2040\":[null,20],\"2041\":[2],\"2042\":[1],\"2043\":[null,1],\"2044\":[null,1],\"2045\":[null,1],\"2046\":[null,1],\"2047\":[null,1],\"2048\":[null,1],\"2049\":[null,1],\"2050\":[null,1],\"2051\":[null,3],\"2052\":[null,1],\"2053\":[null,16],\"2054\":[null,1],\"2055\":[null,19],\"2056\":[null,2],\"2057\":[null,17],\"2058\":[null,3],\"2059\":[null,19],\"2060\":[null,2],\"2061\":[null,19],\"2062\":[2],\"2063\":[1],\"2064\":[null,1],\"2065\":[null,1],\"2066\":[null,1],\"2067\":[null,1],\"2068\":[null,3],\"2069\":[null,1],\"2070\":[null,14],\"2071\":[null,1],\"2072\":[null,16],\"2073\":[null,2],\"2074\":[null,14],\"2075\":[null,3],\"2076\":[null,16],\"2077\":[null,2],\"2078\":[null,16],\"2079\":[2],\"2080\":[1],\"2081\":[null,1],\"2082\":[null,1],\"2083\":[null,1],\"2084\":[null,1],\"2085\":[null,3],\"2086\":[null,1],\"2087\":[null,14],\"2088\":[null,1],\"2089\":[null,16],\"2090\":[null,2],\"2091\":[null,14],\"2092\":[null,3],\"2093\":[null,16],\"2094\":[null,2],\"2095\":[null,16],\"2096\":[1],\"2097\":[2],\"2098\":[1],\"2099\":[null,1],\"2100\":[null,1],\"2101\":[null,1],\"2102\":[null,1],\"2103\":[null,1],\"2104\":[null,1],\"2105\":[null,1],\"2106\":[null,1],\"2107\":[null,3],\"2108\":[null,1],\"2109\":[null,16],\"2110\":[null,1],\"2111\":[null,18],\"2112\":[null,2],\"2113\":[null,16],\"2114\":[null,3],\"2115\":[null,18],\"2116\":[null,2],\"2117\":[null,18],\"2118\":[1],\"2119\":[2],\"2120\":[3],\"2121\":[null,2],\"2122\":[null,3],\"2123\":[null,1],\"2124\":[null,14],\"2125\":[null,1],\"2126\":[null,14],\"2127\":[null,2],\"2128\":[null,13],\"2129\":[null,3],\"2130\":[null,16],\"2131\":[null,2],\"2132\":[null,13],\"2133\":[2],\"2134\":[1],\"2135\":[null,1],\"2136\":[null,1],\"2137\":[null,1],\"2138\":[null,1],\"2139\":[null,1],\"2140\":[null,1],\"2141\":[null,1],\"2142\":[null,1],\"2143\":[null,1],\"2144\":[null,1],\"2145\":[null,1],\"2146\":[null,1],\"2147\":[null,1],\"2148\":[null,1],\"2149\":[null,1],\"2150\":[null,1],\"2151\":[null,2],\"2152\":[null,1],\"2153\":[null,16],\"2154\":[null,1],\"2155\":[null,20],\"2156\":[null,2],\"2157\":[null,18],\"2158\":[null,3],\"2159\":[null,19],\"2160\":[null,2],\"2161\":[null,20],\"2162\":[1],\"2163\":[2],\"2164\":[3],\"2165\":[null,1],\"2166\":[null,1],\"2167\":[null,1],\"2168\":[null,1],\"2169\":[null,3],\"2170\":[null,1],\"2171\":[null,16],\"2172\":[null,1],\"2173\":[null,19],\"2174\":[null,2],\"2175\":[null,16],\"2176\":[null,3],\"2177\":[null,19],\"2178\":[null,2],\"2179\":[null,18],\"2180\":[2],\"2181\":[3],\"2182\":[null,1],\"2183\":[null,1],\"2184\":[null,1],\"2185\":[null,1],\"2186\":[null,1],\"2187\":[null,1],\"2188\":[null,1],\"2189\":[null,1],\"2190\":[null,2],\"2191\":[null,1],\"2192\":[null,14],\"2193\":[null,1],\"2194\":[null,19],\"2195\":[null,2],\"2196\":[null,16],\"2197\":[null,3],\"2198\":[null,18],\"2199\":[null,2],\"2200\":[null,18],\"2201\":[2],\"2202\":[3],\"2203\":[null,1],\"2204\":[null,1],\"2205\":[null,1],\"2206\":[null,1],\"2207\":[null,1],\"2208\":[null,1],\"2209\":[null,1],\"2210\":[null,1],\"2211\":[null,2],\"2212\":[null,1],\"2213\":[null,14],\"2214\":[null,1],\"2215\":[null,19],\"2216\":[null,2],\"2217\":[null,16],\"2218\":[null,3],\"2219\":[null,18],\"2220\":[null,2],\"2221\":[null,18],\"2222\":[1],\"2223\":[2],\"2224\":[1],\"2225\":[null,1],\"2226\":[null,1],\"2227\":[null,1],\"2228\":[null,1],\"2229\":[null,1],\"2230\":[null,1],\"2231\":[null,1],\"2232\":[null,1],\"2233\":[null,1],\"2234\":[null,1],\"2235\":[null,1],\"2236\":[null,1],\"2237\":[null,1],\"2238\":[null,1],\"2239\":[null,1],\"2240\":[null,1],\"2241\":[null,1],\"2242\":[null,1],\"2243\":[null,1],\"2244\":[null,1],\"2245\":[null,1],\"2246\":[null,1],\"2247\":[null,2],\"2248\":[null,1],\"2249\":[null,19],\"2250\":[null,1],\"2251\":[null,25],\"2252\":[null,2],\"2253\":[null,22],\"2254\":[null,3],\"2255\":[null,24],\"2256\":[null,2],\"2257\":[null,24],\"2258\":[2],\"2259\":[1],\"2260\":[null,1],\"2261\":[null,1],\"2262\":[null,1],\"2263\":[null,1],\"2264\":[null,1],\"2265\":[null,1],\"2266\":[null,1],\"2267\":[null,1],\"2268\":[null,1],\"2269\":[null,1],\"2270\":[null,1],\"2271\":[null,1],\"2272\":[null,1],\"2273\":[null,1],\"2274\":[null,1],\"2275\":[null,1],\"2276\":[null,1],\"2277\":[null,1],\"2278\":[null,1],\"2279\":[null,1],\"2280\":[null,1],\"2281\":[null,1],\"2282\":[null,1],\"2283\":[null,1],\"2284\":[null,1],\"2285\":[null,1],\"2286\":[null,1],\"2287\":[null,1],\"2288\":[null,2],\"2289\":[null,1],\"2290\":[null,22],\"2291\":[null,1],\"2292\":[null,28],\"2293\":[null,2],\"2294\":[null,25],\"2295\":[null,3],\"2296\":[null,27],\"2297\":[null,2],\"2298\":[null,27],\"2299\":[1],\"2300\":[1],\"2301\":[null,2],\"2302\":[1],\"2303\":[null,5],\"2304\":[null,1],\"2305\":[1],\"2306\":[2],\"2307\":[3],\"2308\":[null,1],\"2309\":[null,1],\"2310\":[null,1],\"2311\":[null,1],\"2312\":[null,3],\"2313\":[null,1],\"2314\":[null,15],\"2315\":[null,1],\"2316\":[null,17],\"2317\":[null,2],\"2318\":[null,15],\"2319\":[null,3],\"2320\":[null,17],\"2321\":[null,2],\"2322\":[null,17],\"2323\":[2],\"2324\":[3],\"2325\":[null,1],\"2326\":[null,1],\"2327\":[null,1],\"2328\":[null,1],\"2329\":[null,1],\"2330\":[null,1],\"2331\":[null,2],\"2332\":[null,1],\"2333\":[null,12],\"2334\":[null,1],\"2335\":[null,16],\"2336\":[null,2],\"2337\":[null,13],\"2338\":[null,3],\"2339\":[null,15],\"2340\":[null,2],\"2341\":[null,15],\"2342\":[1],\"2343\":[2],\"2344\":[3],\"2345\":[null,1],\"2346\":[null,1],\"2347\":[null,1],\"2348\":[null,1],\"2349\":[null,3],\"2350\":[null,1],\"2351\":[null,15],\"2352\":[null,1],\"2353\":[null,17],\"2354\":[null,2],\"2355\":[null,15],\"2356\":[null,3],\"2357\":[null,17],\"2358\":[null,2],\"2359\":[null,17],\"2360\":[1],\"2361\":[1],\"2362\":[null,2],\"2363\":[1],\"2364\":[3],\"2365\":[null,56],\"2366\":[1],\"2367\":[3],\"2368\":[null,4],\"2369\":[null,1],\"2370\":[null,7],\"2371\":[null,52],\"2372\":[null,7],\"2373\":[null,35],\"2374\":[1],\"2375\":[null,1],\"2376\":[null,77],\"2377\":[1],\"2378\":[3],\"2379\":[null,3],\"2380\":[null,39],\"2381\":[1],\"2382\":[3],\"2383\":[null,1],\"2384\":[null,20],\"2385\":[3],\"2386\":[null,253],\"2387\":[3],\"2388\":[null,3],\"2389\":[null,210],\"2390\":[null,5],\"2391\":[null,278],\"2392\":[3],\"2393\":[null,3],\"2394\":[null,213],\"2395\":[null,5],\"2396\":[null,272],\"2397\":[3],\"2398\":[null,3],\"2399\":[null,201],\"2400\":[null,5],\"2401\":[null,258],\"2402\":[3],\"2403\":[null,3],\"2404\":[null,208],\"2405\":[null,5],\"2406\":[null,274],\"2407\":[1],\"2408\":[1]},\"averageFieldLength\":[1.9331480470323485,6.3579654118075215],\"storedFields\":{\"0\":{\"h\":\"主页\"},\"1\":{\"h\":\"MineBBS 帖子\",\"a\":\"minebbs-帖子\"},\"2\":{\"h\":\"配置工具\",\"a\":\"配置工具\"},\"3\":{\"h\":\"最新构建 密码:114514\",\"a\":\"最新构建-密码-114514\"},\"4\":{\"h\":\"关于\"},\"5\":{\"t\":\"作者是普通人类\"},\"6\":{\"t\":\"插件是普通人类写的\"},\"7\":{\"h\":\"接口\"},\"8\":{\"h\":\"介绍\",\"a\":\"介绍\"},\"9\":{\"t\":\"通过公开接口，可实现更多的配置文件以外的自定义以及二次开发\"},\"10\":{\"h\":\"使用方法\",\"a\":\"使用方法\"},\"11\":{\"t\":\"基于 LiteLoader 的 RemoteCall 功能\"},\"12\":{\"t\":\"使用脚本联动\"},\"13\":{\"h\":\"插件重大变更\"},\"14\":{\"h\":\"插件重大变更\",\"a\":\"插件重大变更\"},\"15\":{\"t\":\"emm...\"},\"16\":{\"h\":\"更新日志\"},\"17\":{\"h\":\"插件更新日志\",\"a\":\"插件更新日志\"},\"18\":{\"t\":\"MineBBS\"},\"19\":{\"t\":\"lazy.jpeg\"},\"20\":{\"h\":\"解惑\"},\"21\":{\"h\":\"人非生而知之者，孰能无惑\",\"a\":\"人非生而知之者-孰能无惑\"},\"22\":{\"t\":\"查看常见问题\"},\"23\":{\"t\":\"也可以在文档下方的聊天框提问\"},\"24\":{\"h\":\"Frequently Asked Questions\"},\"25\":{\"h\":\"这个插件与旧插件 PFEssentials 有什么区别？\",\"a\":\"这个插件与旧插件-pfessentials-有什么区别\"},\"26\":{\"t\":\"使用了极为先进的巨硬(微软).Net7.0 开发，而不是旧插件的.net framework，故在性能上有很大优势。 完全重构了插件架构，更利于维护，而不是旧插件的依托答辩。 使用 C#重写所有内容，而不是旧插件的 vb net（也不知道当时怎么想的还用 vb）。\"},\"27\":{\"t\":\"此外 PFEssentials 已经停止维护，且代码质量堪忧，不推荐尝试使用。\"},\"28\":{\"h\":\"加了插件后服务器卡顿？\",\"a\":\"加了插件后服务器卡顿\"},\"29\":{\"t\":\"插件多线程密集，单核或低性能服务器慎用，仅在多核服务器才可利用多线程弥补 BDS 吃单核的缺陷，获得更好体验。\"},\"30\":{\"h\":\"插件性能如何？\",\"a\":\"插件性能如何\"},\"31\":{\"t\":\"插件多线程，在多核心服务器上性能优异。 不能保证插件的所有模块都有最优算法，但绝不是最无脑的逻辑，请不要无故猜测插件算法。 如有建议也可提出。\"},\"32\":{\"h\":\"遇到喜庆的红色报错？\",\"a\":\"遇到喜庆的红色报错\"},\"33\":{\"t\":\"既然插件是人写的，那么必须是由 bug 驱动的。 遇到问题莫慌，可以先阅读报错的具体内容，这可能能初步定位问题，然后发截图或录屏给作者，最后假装没 bug 就行。\"},\"34\":{\"h\":\"请问可以增加 xx 功能以及 xx 吗？\",\"a\":\"请问可以增加-xx-功能以及-xx-吗\"},\"35\":{\"t\":\"这不是定制插件，不会按照个人需求增加任何功能，有什么特别的需要可以自己写或者找人定制\"},\"36\":{\"h\":\"插件 xx 的功能有 bug？\",\"a\":\"插件-xx-的功能有-bug\"},\"37\":{\"t\":\"反复排查确认是本插件造成后可在各渠道反馈，如在这个仓库开个 issue（务必带上截图等必要内容），或者文档里面回复等等 Telegram GroupQQ 群：850092152\"},\"38\":{\"h\":\"我不想要 xx 功能/xx 内容可以改掉吗/xx 提示能不能换下？\",\"a\":\"我不想要-xx-功能-xx-内容可以改掉吗-xx-提示能不能换下\"},\"39\":{\"t\":\"所有功能在 config.json 均有开关，且有网页配置工具。所有游戏内的提示语都在 lang\\\\文件夹下的语言文件中，请自行修改。\"},\"40\":{\"h\":\"能不能单独做个 xxx 功能的插件？\",\"a\":\"能不能单独做个-xxx-功能的插件\"},\"41\":{\"t\":\"如果你只需要某个功能，可关闭插件的其他功能，这并不会带来什么弊端。 拆散功能通常不仅会增加维护成本，还容易增加跑路趋势。\"},\"42\":{\"h\":\"为什么不开源\",\"a\":\"为什么不开源\"},\"43\":{\"t\":\"不是所有东西都开源都有更多的人参与开发，若是被人拿去倒卖呢？ 本项目能长期免费，并持续开发，靠的就是清静，不用担心被人说三道四。 允许任何人开源一个功能更多，体验更好的同类插件，即使有部分相似的功能，我并不会因此站在道德的制高点指责你，因为我并不会因为失去用户而有任何损失。\"},\"44\":{\"h\":\"故障排查\"},\"45\":{\"h\":\"Fail to load API money.xxxMoney\",\"a\":\"fail-to-load-api-money-xxxmoney\"},\"46\":{\"t\":\"[7/3/2023 from Planet, source:QQGroup]\"},\"47\":{\"t\":\"此非 PFLP 触发的报错，但可能影响经济系统运行\"},\"48\":{\"t\":\"此为 LLSE(脚本引擎)触发的报错\"},\"49\":{\"t\":\"原因：LLMoney.dll未正确加载或LiteLoader.json为开启经济接口\"},\"50\":{\"t\":\"解决方法： \"},\"51\":{\"t\":\"确认LLMoney.dll为正确版本且在 plugins 目录\"},\"52\":{\"t\":\"LLMoney 最新版本下载LiteLoaderBDS 源码对应部分\"},\"53\":{\"h\":\"插件兼容性\"},\"54\":{\"h\":\"运行环境\",\"a\":\"运行环境\"},\"55\":{\"t\":\"不支持大多数面板服(测试 wine 8.8 运行多处溢出和卡死)，除非是基于 windows 的面板服并配置了.NET 7 运行环境\"},\"56\":{\"t\":\"多数面版服使用 linux+wine 运行 bds，但由于 wine 对先进的.NET 7 有一些兼容性问题，加上本插件对.NET 7 的各种魔法依赖较高，以至于暂时无法在 wine 环境下运行\"},\"57\":{\"h\":\"与其他插件共同使用时\",\"a\":\"与其他插件共同使用时\"},\"58\":{\"t\":\"本插件通常不会与其他插件冲突,但仍需注意以下几点 \"},\"59\":{\"t\":\"本插件的聊天事件会高于其他插件，即使其他插件通过 LL 的接口取消了聊天事件，插件也会继续处理\"},\"60\":{\"t\":\"本插件的命令可能与其他插件重合，但只要命令重载不同，就可以与其他插件共用一个主命令 \"},\"61\":{\"t\":\"如/money命令可与LLMoney注册的相关命令同时使用\"},\"62\":{\"t\":\"不会因为注册相同命令而造成控制台报错，但可能会影响使用体验\"},\"63\":{\"t\":\"本插件的所有命令均可以通过接口修改，参考命令接口\"},\"64\":{\"h\":\"插件配置\"},\"65\":{\"h\":\"基本配置\",\"a\":\"基本配置\"},\"66\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"67\":{\"t\":\"配置文件使用json格式\"},\"68\":{\"t\":\"配置文件位于[服务端目录]\\\\plugins\\\\PixelFaramitaLuminousPolymerization\\\\config.json\"},\"69\":{\"t\":\"请使用专业的编辑工具编辑（而不是祭祀本），如Visual Studio Code\"},\"70\":{\"h\":\"配置文件基本结构\",\"a\":\"配置文件基本结构\"},\"71\":{\"t\":\"{ \\\"全局功能名称\\\": \\\"全局功能值\\\", \\\"模块名称\\\": { \\\"ModuleEnabld\\\": true|false,//开启或者关闭模块 \\\"功能名称\\\":\\\"配置值\\\" } } \"},\"72\":{\"h\":\"配置文件示例(部分)\",\"a\":\"配置文件示例-部分\"},\"73\":{\"t\":\"{ \\\"ConsoleLanguage\\\": \\\"zh_CN\\\", \\\"WebViewConfig_ConsoleCommand\\\": \\\"pfc\\\", //打开服务端配置工具（依赖webview2网页）的命令 \\\"Global_AsyncTeleportWaitTime\\\": 1000, //全局传送等待时间 \\\"WorldLimit\\\": { //世界边界模块的配置 \\\"ModuleEnabled\\\": true, //开启 \\\"Overworld\\\": [ { \\\"X1\\\": -1000, \\\"Z1\\\": -1000, \\\"X2\\\": 1000, \\\"Z2\\\": 1000 } ], \\\"Nether\\\": [], \\\"The End\\\": [], \\\"TeleportToSpawnpointIfError\\\": true, \\\"EnableVisualize\\\": true //边界可视化粒子 } } \"},\"74\":{\"h\":\"文档使用\"},\"75\":{\"h\":\"文档使用方法\",\"a\":\"文档使用方法\"},\"76\":{\"t\":\"每篇文档下方都有基于giscus的讨论系统，你可以点赞、评论、提问等等。\"},\"77\":{\"t\":\"文章不一定包含全部功能，也必定无法解决全部问题，在阅读完文章后也可提问。\"},\"78\":{\"h\":\"文档编写\",\"a\":\"文档编写\"},\"79\":{\"t\":\"你可以通过在这个仓库提交 PullRequest 来帮助我们提供更有趣的使用方法、完善文档\"},\"80\":{\"t\":\"可以通过页面底部的在 GitHub 上编辑此页来跳转到文章对应的 GitHub 仓库地址\"},\"81\":{\"h\":\"变量与格式化选项\"},\"82\":{\"h\":\"内置变量\",\"a\":\"内置变量\"},\"83\":{\"t\":\"内置变量可在诸多模块使用，如侧边栏、菜单等\"},\"84\":{\"h\":\"全局变量\",\"a\":\"全局变量\"},\"85\":{\"t\":\"在任意位置使用\"},\"86\":{\"t\":\"名称\"},\"87\":{\"t\":\"别名\"},\"88\":{\"t\":\"功能\"},\"89\":{\"t\":\"示例\"},\"90\":{\"t\":\"%time%\"},\"91\":{\"t\":\"%date%%now%\"},\"92\":{\"t\":\"当前时间\"},\"93\":{\"t\":\"%time:yyyy-MM-dd-HH-mm-ss%\"},\"94\":{\"t\":\"%tps%\"},\"95\":{\"t\":\"%server_tps%%servertps%\"},\"96\":{\"t\":\"服务器 TPS\"},\"97\":{\"t\":\"%mspt%\"},\"98\":{\"t\":\"%server_mspt%%servermspt%\"},\"99\":{\"t\":\"服务器 MSPT\"},\"100\":{\"t\":\"%playercount%\"},\"101\":{\"t\":\"%server_online%%serveronline%\"},\"102\":{\"t\":\"在线玩家数量\"},\"103\":{\"t\":\"%version%\"},\"104\":{\"t\":\"%server_version%%serverversion%\"},\"105\":{\"t\":\"服务器版本\"},\"106\":{\"t\":\"%protocol%\"},\"107\":{\"t\":\"%protocol_version%%server_protocol_version%%protocolversion%%serverprotocolversion%\"},\"108\":{\"t\":\"服务器协议版本\"},\"109\":{\"t\":\"%entitycount%\"},\"110\":{\"t\":\"%total_entities%%server_total_entities%%totalentities%%servertotalentities%\"},\"111\":{\"t\":\"服务器试题数量\"},\"112\":{\"t\":\"%ram_bds_used%\"},\"113\":{\"t\":\"%server_ram_bds_used%%rambdsused%%serverrambdsused%\"},\"114\":{\"t\":\"BDS 内存使用量\"},\"115\":{\"t\":\"%ram_used%\"},\"116\":{\"t\":\"%server_ram_used%%ramused%%serverramused%\"},\"117\":{\"t\":\"主机内存使用量\"},\"118\":{\"t\":\"%ram_total%\"},\"119\":{\"t\":\"%server_ram_total%%ramtotal%%serverramtotal%\"},\"120\":{\"t\":\"服务器总内存\"},\"121\":{\"t\":\"%ram_free%\"},\"122\":{\"t\":\"%server_ram_free%%ramfree%%serverramfree%\"},\"123\":{\"t\":\"服务器空闲内存\"},\"124\":{\"t\":\"%papi%\"},\"125\":{\"t\":\"%placeholder%%placeholderapi%\"},\"126\":{\"t\":\"#PAPI 变量建议直接使用%xxx%除非同名时需要指定 papi 变量\"},\"127\":{\"t\":\"%papi:xxx%\"},\"128\":{\"t\":\"%server_received%\"},\"129\":{\"t\":\"%server_receive%%serverreceived%%serverreceive%\"},\"130\":{\"t\":\"服务器收到的总字节数\"},\"131\":{\"t\":\"%server_sent%\"},\"132\":{\"t\":\"%server_send%%serversent%%serversend%\"},\"133\":{\"t\":\"服务器发送的总字节数\"},\"134\":{\"h\":\"玩家变量\",\"a\":\"玩家变量\"},\"135\":{\"t\":\"在玩家相关的上下文中使用\"},\"136\":{\"t\":\"名称\"},\"137\":{\"t\":\"别名\"},\"138\":{\"t\":\"功能\"},\"139\":{\"t\":\"示例\"},\"140\":{\"t\":\"%name%\"},\"141\":{\"t\":\"玩家名字\"},\"142\":{\"t\":\"%xuid%\"},\"143\":{\"t\":\"%money%\"},\"144\":{\"t\":\"玩家 Xuid\"},\"145\":{\"t\":\"%scoreboard%\"},\"146\":{\"t\":\"%sb%\"},\"147\":{\"t\":\"计分板\"},\"148\":{\"t\":\"%scoreboard:money%\"},\"149\":{\"t\":\"%world%\"},\"150\":{\"t\":\"%dimension%\"},\"151\":{\"t\":\"维度\"},\"152\":{\"t\":\"%ping%\"},\"153\":{\"t\":\"最近一次延迟\"},\"154\":{\"t\":\"%avgping%\"},\"155\":{\"t\":\"(最近 5 次的)平均延迟\"},\"156\":{\"t\":\"%lowestping%\"},\"157\":{\"t\":\"最低延迟\"},\"158\":{\"t\":\"%health%\"},\"159\":{\"t\":\"玩家当前血量\"},\"160\":{\"t\":\"%hunger%\"},\"161\":{\"t\":\"玩家当前饥饿值\"},\"162\":{\"t\":\"%level%\"},\"163\":{\"t\":\"玩家当前等级\"},\"164\":{\"t\":\"%saturation%\"},\"165\":{\"t\":\"玩家当前饱食度\"},\"166\":{\"t\":\"%experience%\"},\"167\":{\"t\":\"%xp%\"},\"168\":{\"t\":\"玩家当前经验\"},\"169\":{\"t\":\"%pos%\"},\"170\":{\"t\":\"%position%\"},\"171\":{\"t\":\"玩家当前坐标\"},\"172\":{\"t\":\"%os%\"},\"173\":{\"t\":\"%devicetype%\"},\"174\":{\"t\":\"玩家当前设备类型翻译可在语言文件更改\"},\"175\":{\"t\":\"%devicename%\"},\"176\":{\"t\":\"%device%\"},\"177\":{\"t\":\"玩家当前设备名称\"},\"178\":{\"t\":\"%serverip%\"},\"179\":{\"t\":\"%serveraddress%\"},\"180\":{\"t\":\"玩家进入服务器使用的 IP\"},\"181\":{\"t\":\"%ip%\"},\"182\":{\"t\":\"%address%\"},\"183\":{\"t\":\"玩家当前 IP\"},\"184\":{\"t\":\"%location%\"},\"185\":{\"t\":\"（通过 IP 获取的）完整地理位置\"},\"186\":{\"t\":\"%country%\"},\"187\":{\"t\":\"国家\"},\"188\":{\"t\":\"%province%\"},\"189\":{\"t\":\"省份\"},\"190\":{\"t\":\"%city%\"},\"191\":{\"t\":\"城市\"},\"192\":{\"t\":\"%isp%\"},\"193\":{\"t\":\"网络运营商\"},\"194\":{\"t\":\"%total_received%\"},\"195\":{\"t\":\"%total_receive%%totalreceived%%totalreceive%\"},\"196\":{\"t\":\"（本次连接）玩家收到的总字节数\"},\"197\":{\"t\":\"%total_sent%\"},\"198\":{\"t\":\"%total_send%%totalsent%%totalsend%\"},\"199\":{\"t\":\"（本次连接）玩家发送的总字节数\"},\"200\":{\"t\":\"%received%\"},\"201\":{\"t\":\"%receive%\"},\"202\":{\"t\":\"每秒收到的字节数\"},\"203\":{\"t\":\"%sent%\"},\"204\":{\"t\":\"%send%\"},\"205\":{\"t\":\"每秒发送的字节数\"},\"206\":{\"t\":\"%land%\"},\"207\":{\"t\":\"玩家当前领地\"},\"208\":{\"t\":\"类型%land:type%所有者%land:owner% 共享玩家%land:sharedplayers%领地名称%land:displayname% 消息留言%land:message% 欢迎语%land:welcome%%land:x1%%land:y1%%land:z1%%land:x2%%land:y2%%land:z2%长%land:dx%宽%land:dy%高%land:dz%\"},\"209\":{\"h\":\"其他模块变量(需要开启指定模块)\",\"a\":\"其他模块变量-需要开启指定模块\"},\"210\":{\"h\":\"Statistics | 统计变量\",\"a\":\"statistics-统计变量\"},\"211\":{\"t\":\"名称\"},\"212\":{\"t\":\"别名\"},\"213\":{\"t\":\"功能\"},\"214\":{\"t\":\"示例\"},\"215\":{\"t\":\"%online_time%\"},\"216\":{\"t\":\"%onlinetime%\"},\"217\":{\"t\":\"在线时长\"},\"218\":{\"t\":\"%destroy%\"},\"219\":{\"t\":\"破坏方块\"},\"220\":{\"t\":\"%place%\"},\"221\":{\"t\":\"放置方块\"},\"222\":{\"t\":\"%death%\"},\"223\":{\"t\":\"死亡次数\"},\"224\":{\"t\":\"%respawn%\"},\"225\":{\"t\":\"重生次数\"},\"226\":{\"t\":\"%join%\"},\"227\":{\"t\":\"进服次数\"},\"228\":{\"t\":\"%kill%\"},\"229\":{\"t\":\"击杀次数\"},\"230\":{\"t\":\"%kill:player%玩家%kill:sheep%羊\"},\"231\":{\"h\":\"使用 BEPlaceholderAPI 的变量\",\"a\":\"使用-beplaceholderapi-的变量\"},\"232\":{\"t\":\"支持BEPlaceholderAPI的所有变量，安装 BEPlaceholderAPI 后即可直接使用\"},\"233\":{\"t\":\"如因变量重名需要指定使用 BEPlaceholderAPI 的变量，可使用%papi:xxx%的格式\"},\"234\":{\"h\":\"在其他插件使用\",\"a\":\"在其他插件使用\"},\"235\":{\"t\":\"其他插件仅需引入BEPlaceholderAPI,pflp 的所有变量均可在 BEPlaceholderAPI 使用\"},\"236\":{\"t\":\"本插件也通过接口导出的获取变量的 API，可供其他插件使用，参考接口 - 注册变量\"},\"237\":{\"h\":\"格式化选项\",\"a\":\"格式化选项\"},\"238\":{\"t\":\"格式化选项继承与.NET的字符串格式化，百分号对于前后大括号，:、,等控制符参考文档\"},\"239\":{\"t\":\"示例：\"},\"240\":{\"t\":\"时间格式：%time:yyyy-MM-dd-HH-mm-ss%\"},\"241\":{\"t\":\"数字格式：%mspt:F1%表示保留小数点后一位\"},\"242\":{\"t\":\"参考String.Format 方法\"},\"243\":{\"h\":\"增加自定义变量\",\"a\":\"增加自定义变量\"},\"244\":{\"t\":\"参考接口 - 注册变量\"},\"245\":{\"h\":\"语言配置\"},\"246\":{\"h\":\"本插件支持多语言和自定义提示语\",\"a\":\"本插件支持多语言和自定义提示语\"},\"247\":{\"t\":\"语言文件位于位于[服务端目录]\\\\plugins\\\\PixelFaramitaLuminousPolymerization\\\\lang\"},\"248\":{\"t\":\"语言文件样式和格式与 Minecraft 材质包语言文件基本相同\"},\"249\":{\"t\":\"也可以新建自己的语言文件，不过推荐在已有的语言文件上更改\"},\"250\":{\"h\":\"自定义提示语\",\"a\":\"自定义提示语\"},\"251\":{\"t\":\"插件的所有游戏内提示语、命令提示、表单内容均可以通过语言文件自定义。\"},\"252\":{\"h\":\"服务端使用多语言\",\"a\":\"服务端使用多语言\"},\"253\":{\"t\":\"配置文件config.json中的ConsoleLanguage字段定义了默认语言\"},\"254\":{\"t\":\"{ \\\"ConsoleLanguage\\\": \\\"system\\\" //默认system表示自动获取系统语言 } \"},\"255\":{\"h\":\"用户使用多语言\",\"a\":\"用户使用多语言\"},\"256\":{\"t\":\"如果你的服务器恰好有外语使用者或者学习者，那么他可以使用/language命令修改个人的插件语言。\"},\"257\":{\"h\":\"翻译\",\"a\":\"翻译\"},\"258\":{\"t\":\"目前的语言文件是机翻的，如果你有兴趣，可以帮助我们翻译语言文件。 翻译后的语言文件可以通过 Pull Request 的形式提交到这个仓库\"},\"259\":{\"t\":\"提交 pr 时建议把语言文件中的作者一项加上你的昵称\"},\"260\":{\"h\":\"数据迁移\"},\"261\":{\"h\":\"从 PFEssentials 迁移数据到本插件\",\"a\":\"从-pfessentials-迁移数据到本插件\"},\"262\":{\"t\":\"⚠️ 不得直接将 PFEssentials 的数据文件夹复制到本插件的数据文件夹，否则无法正常加载\"},\"263\":{\"h\":\"Home\",\"a\":\"home\"},\"264\":{\"t\":\"插件启动后自动导入plugins\\\\PFEssentials\\\\data\\\\homelist.json\"},\"265\":{\"t\":\"所有玩家的家都会被导入，由于 PFEssentials 使用玩家名存储，故导入后 key 是name:xxx，在玩家进入后会二次转换\"},\"266\":{\"t\":\"运行后控制台提示已自动导入PFEssentials的Home数据即为成功\"},\"267\":{\"h\":\"Warp\",\"a\":\"warp\"},\"268\":{\"t\":\"插件启动后自动导入plugins\\\\PFEssentials\\\\data\\\\warplist.json\"},\"269\":{\"t\":\"运行后控制台提示已自动导入PFEssentials的Warp数据即为成功\"},\"270\":{\"h\":\"Land\",\"a\":\"land\"},\"271\":{\"t\":\"插件启动后自动导入plugins\\\\PFEssentials\\\\data\\\\landdata.json\"},\"272\":{\"t\":\"其他模块暂无迁移适配\"},\"273\":{\"h\":\"从 TMEsstntial 迁移数据到本插件\",\"a\":\"从-tmesstntial-迁移数据到本插件\"},\"274\":{\"t\":\"由于 TMEssential 的home和warp数据文件与PFEssentials相同，故放置到plugins\\\\PFEssentials\\\\data即可自动导入\"},\"275\":{\"h\":\"Home\",\"a\":\"home-1\"},\"276\":{\"t\":\"文件放到plugins\\\\PFEssentials\\\\data\\\\homelist.json\"},\"277\":{\"h\":\"Warp\",\"a\":\"warp-1\"},\"278\":{\"t\":\"文件放到plugins\\\\PFEssentials\\\\data\\\\homelist.json\"},\"279\":{\"t\":\"其他模块暂无迁移适配\"},\"280\":{\"h\":\"文件结构\"},\"281\":{\"h\":\"插件目录的文件结构\",\"a\":\"插件目录的文件结构\"},\"282\":{\"t\":\"插件目录位于[服务端目录]\\\\plugins\\\\PixelFaramitaLuminousPolymerization\\\\目录下\"},\"283\":{\"t\":\"插件目录下的config.json文件是插件的主配置文件\"},\"284\":{\"h\":\"文件列表\",\"a\":\"文件列表\"},\"285\":{\"t\":\"config.json：插件的主配置文件\"},\"286\":{\"t\":\"menu.json：菜单模块配置文件（开启后生成）\"},\"287\":{\"t\":\"giftcode.json：礼品码模块配置文件（开启后生成）\"},\"288\":{\"t\":\"notice.json：公告模块配置文件（开启后生成）\"},\"289\":{\"t\":\"shopdata.json：商店模块配置文件（开启后生成）\"},\"290\":{\"h\":\"文件夹\",\"a\":\"文件夹\"},\"291\":{\"t\":\" ├─data ├─lang ├─pack │ └─customize │ ├─behavior_packs │ └─resource_packs ├─pictures ├─scripts │ └─node_modules │ └─@pf └─temp\"},\"292\":{\"t\":\"lang\\\\...：语言文件夹 \"},\"293\":{\"t\":\"en_US.lang：英文语言文件\"},\"294\":{\"t\":\"zh_CN.lang：英文语言文件\"},\"295\":{\"t\":\"pack\\\\：资源包/行为包文件夹 \"},\"296\":{\"t\":\"temp：材质包缓存，通常由插件生成，无需查看具体内容\"},\"297\":{\"t\":\"customize： 自定义材质包路径，配置项中开启材质包加密后里面的材质包会自动用随机密钥加密后发给客户端 \"},\"298\":{\"t\":\"behavior_packs：行为包文件夹\"},\"299\":{\"t\":\"resource_packs：资源包文件夹 \"},\"300\":{\"t\":\"[文件夹]：某自定义材质包 \"},\"301\":{\"t\":\"manifest.json：资源包描述文件\"},\"302\":{\"t\":\"pack_icon.png：资源包图标\"},\"303\":{\"t\":\"...：其他文件\"},\"304\":{\"t\":\"pictures\\\\：图片文件夹（开启图片加载器模块后生成） \"},\"305\":{\"t\":\"...：导入图片文件文件夹 \"},\"306\":{\"t\":\"图片不会存在在存档中， 删除文件夹内的图片文件后，即对应删除导入的图片\"},\"307\":{\"t\":\"scripts\\\\：脚本文件夹 \"},\"308\":{\"t\":\"node_modules\\\\：脚本依赖文件夹 \"},\"309\":{\"t\":\"@pf\\\\：插件依赖文件夹\"},\"310\":{\"t\":\"...：插件依赖文件夹\"},\"311\":{\"t\":\"xxx.js：自定义脚本文件 \"},\"312\":{\"t\":\"可通过脚本文件来扩展插件功能，脚本文件支持热重载，保存文件即自动加载\"},\"313\":{\"t\":\"package.json：脚本依赖配置文件（主要是@minecraft/server等补全库）\"},\"314\":{\"t\":\"npm.bat：通过 npm 安装依赖补全库，如需使用@minecraft/server等补全库，可运行以执行npm install命令\"},\"315\":{\"t\":\"maps\\\\：地图服务区块颜色数据 \"},\"316\":{\"t\":\"x_z_.db：区块文件，可以删除即删除指定区块的缓存\"},\"317\":{\"t\":\"data\\\\：数据文件夹\"},\"318\":{\"t\":\"home.json：家数据文件\"},\"319\":{\"t\":\"warplist.json：传送点数据文件\"},\"320\":{\"t\":\"ban.json：封禁数据文件\"},\"321\":{\"t\":\"chat.json：聊天配置数据文件，玩家的称号、前缀、后缀、昵称\"},\"322\":{\"t\":\"death.json：死亡数据文件\"},\"323\":{\"t\":\"floattext.json：浮动文字数据文件\"},\"324\":{\"t\":\"identity.json：身份数据文件（此文件可删除，但会暂时造成无法通过 xuid 获取到玩家名）\"},\"325\":{\"t\":\"landdata.json：领地数据文件\"},\"326\":{\"t\":\"language.json：语言数据文件（如玩家个人设置的语言）\"},\"327\":{\"t\":\"locationCache.json：位置缓存数据文件（此文件可删除，会自动获取）（如位置有误也可打开修改）\"},\"328\":{\"t\":\"shopPreference.json：商店偏好数据文件\"},\"329\":{\"t\":\"TpaProfiles.json：传送请求个人设置文件\"},\"330\":{\"t\":\"translation.json：翻译个人设置文件\"},\"331\":{\"t\":\"mapdata.json：地图服务简要数据（主要用于 WebUI 在线地图）\"},\"332\":{\"t\":\"chat.db：聊天记录数据库（主要用于 WebUI 查看）\"},\"333\":{\"t\":\"avatar\\\\：玩家头像缓存文件（可删除，会重新获取）（主要用于 WebUI 显示玩家头像）\"},\"334\":{\"h\":\"使用网页配置插件\"},\"335\":{\"h\":\"网页配置\",\"a\":\"网页配置\"},\"336\":{\"t\":\"本插件有个网页配置工具，可以打开网页上传config.json文件，编辑后下载配置文件，将其放入对应位置，然后控制台输入pflp reload命令重载插件功能。 地址：https://www.mcpf.live/ 配置工具源码：https://github.com/LazuliKao/PixelFaramitaLuminousPolymerizationRes\"},\"337\":{\"h\":\"在服务器配置\",\"a\":\"在服务器配置\"},\"338\":{\"h\":\"方法一\",\"a\":\"方法一\"},\"339\":{\"t\":\"此方法与逝去的 PFEssentials 比较接近，在桌面打开窗体，只不过用的是网页前端\"},\"340\":{\"t\":\"控制台输命令pfc（可以在配置文件修改默认命令）\"},\"341\":{\"t\":\"没有内置 CEF（或者说 Chromium），但是依赖微软的 EdgeWebView2，需要 Edge 相关组件（如果系统不是很新的话需要手动安装）\"},\"342\":{\"t\":\"https://developer.microsoft.com/zh-cn/microsoft-edge/webview2/#download-section\"},\"343\":{\"t\":\"也可以使用方法二\"},\"344\":{\"h\":\"方法二（使用请注意安全）\",\"a\":\"方法二-使用请注意安全\"},\"345\":{\"t\":\"打开config.json中开启如下配置\"},\"346\":{\"t\":\" \\\"WebConfig\\\": { \\\"ModuleEnabled\\\": true, \\\"Hostname\\\": \\\"0.0.0.0\\\", \\\"Port\\\": 8080 } \"},\"347\":{\"t\":\"Hostname 也可改成127.0.0.1,然后在远程桌面通过非 IE 的浏览器打开http://127.0.0.1:8080/即可直接编辑\"},\"348\":{\"t\":\"0.0.0.0即暴露地址到公网，这样可以在任意地点通过http://[你的服务器ip]:8080/打开网页编辑，但请一定要在云主机设置安全的访问策略，否则任何人拿到地址都能修改配置文件\"},\"349\":{\"h\":\"装载\"},\"350\":{\"h\":\"安装插件\",\"a\":\"安装插件\"},\"351\":{\"t\":\"Bedrock Dedicated Server\"},\"352\":{\"t\":\"LiteLoaderBDS\"},\"353\":{\"t\":\"LiteLoader.NET 和 PixelFaramitaLuminousPolymerization\"},\"354\":{\"t\":\"启动\"},\"355\":{\"t\":\"更新和维护\"},\"356\":{\"h\":\"1.安装Bedrock Dedicated Server\"},\"357\":{\"h\":\"本插件的诞生离不开 Bedrock Dedicated Server\",\"a\":\"本插件的诞生离不开-bedrock-dedicated-server\"},\"358\":{\"h\":\"下载 Bedrock Dedicated Server\",\"a\":\"下载-bedrock-dedicated-server\"},\"359\":{\"t\":\"地址：https://www.minecraft.net/en-us/download/server/bedrock 下载MINECRAFT DEDICATED SERVER SOFTWARE FOR WINDOWS并解压\"},\"360\":{\"h\":\"4.1.运行报错？\"},\"361\":{\"h\":\"LiteLoader.NET 加载失败\",\"a\":\"liteloader-net-加载失败\"},\"362\":{\"t\":\"ERROR [LiteLoader] Plugin <LiteLoader.NET> throws an exception in onPostInit! ERROR [LiteLoader] Fail to init plugin <LiteLoader.NET>! \"},\"363\":{\"t\":\"请正确安装.NET 7运行时 .NET 7 x64 Runtime\"},\"364\":{\"h\":\"2.安装LiteLoaderBDS\"},\"365\":{\"h\":\"本插件的诞生离不开 LiteLoaderBDS\",\"a\":\"本插件的诞生离不开-liteloaderbds\"},\"366\":{\"h\":\"下载和安装 LiteLoaderBDS\",\"a\":\"下载和安装-liteloaderbds\"},\"367\":{\"t\":\"地址：https://github.com/LiteLDev/LiteLoaderBDS/releases 找到最新的 Release 点击Assets展开，下载压缩包，解压覆盖到 BDS 目录 然后运行LLPeEditor.exe，之后便会生成bedrock_server_mod.exe，此为插件端启动程序\"},\"368\":{\"h\":\"3.安装LiteLoader.NET和PFLP\"},\"369\":{\"h\":\"本插件的诞生离不开 LiteLoader.NET\",\"a\":\"本插件的诞生离不开-liteloader-net\"},\"370\":{\"h\":\"安装微软 .NET 7.0 运行时\",\"a\":\"安装微软-net-7-0运行时\"},\"371\":{\"t\":\"地址：https://dotnet.microsoft.com/zh-cn/download/dotnet/7.0 点击下载.NET运行时，并安装在需要开服的主机上\"},\"372\":{\"t\":\"找到.NET 运行时 7.0.x，你会看到如下内容\"},\"373\":{\"h\":\"下载 .NET 7.0 Runtime (v7.0.x) 版\",\"a\":\"下载-net-7-0-runtime-v7-0-x-版\"},\"374\":{\"t\":\"平台\"},\"375\":{\"t\":\"安装程序\"},\"376\":{\"t\":\"二进制文件\"},\"377\":{\"t\":\"Linux\"},\"378\":{\"t\":\"包管理器说明\"},\"379\":{\"t\":\"Arm32 | Arm32 Alpine | Arm64 | Arm64 Alpine | x64 | x64 Alpine\"},\"380\":{\"t\":\"macOS\"},\"381\":{\"t\":\"Arm64 | x64\"},\"382\":{\"t\":\"Arm64 | x64\"},\"383\":{\"t\":\"Windows\"},\"384\":{\"t\":\"Arm64 | x64 | x86 | winget 指令\"},\"385\":{\"t\":\"Arm64 | x64 | x86\"},\"386\":{\"t\":\"全部\"},\"387\":{\"t\":\"dotnet-install scripts\"},\"388\":{\"t\":\"安装运行时即可，无需安装 SDK，无须安装 ASP.NET 组件\"},\"389\":{\"h\":\"下载和安装最新的 LiteLoader.NET 和 PFLP 插件\",\"a\":\"下载和安装最新的-liteloader-net-和-pflp-插件\"},\"390\":{\"h\":\"请前往 最新构建 密码：114514\",\"a\":\"请前往-最新构建-密码-114514\"},\"391\":{\"t\":\"推荐直接下载LLNET_with_PFLP_Beta.zip，解压到指定目录（详见压缩包注释）\"},\"392\":{\"t\":\"或者也可手动下载LiteLoader.NET，并手动下载PFLP_Beta_2022_xx_xx__xx_xx_xx.dll置于插件目录（plugins）\"},\"393\":{\"h\":\"4.起飞\"},\"394\":{\"h\":\"启动服务器\",\"a\":\"启动服务器\"},\"395\":{\"h\":\"运行 bedrock_server_mod.exe\",\"a\":\"运行bedrock-server-mod-exe\"},\"396\":{\"t\":\"安装成功会出现如下内容 \"},\"397\":{\"h\":\"修改配置文件以及开启需要的模块\",\"a\":\"修改配置文件以及开启需要的模块\"},\"398\":{\"t\":\"配置文件位于：plugins\\\\PixelFaramitaLuminousPolymerization\\\\config.json\"},\"399\":{\"t\":\"请使用专业的编辑工具编辑（而不是祭祀本）\"},\"400\":{\"t\":\"打开文件把看起来中意的模块开起来\"},\"401\":{\"t\":\"像这样 \"},\"402\":{\"t\":\"\\\"xxx\\\": { \\\"ModuleEnabled\\\": true, \\\"xxx\\\": \\\"xxx\\\" } \"},\"403\":{\"t\":\"控制台输入pflp reload重载插件，或重启服务端以应用更改\"},\"404\":{\"h\":\"5.更新插件\"},\"405\":{\"h\":\"一键更新插件本体（不包含 LLNET）\",\"a\":\"一键更新插件本体-不包含-llnet\"},\"406\":{\"t\":\"控制台输入pflpup命令，等待更新完成后会自动替换并关闭服务器(配合外部面板以自动重启)\"},\"407\":{\"t\":\"如不成功请手动下载\"},\"408\":{\"h\":\"更新插件本体(记得及时关注最新构建，以体验最新 bug)\",\"a\":\"更新插件本体-记得及时关注最新构建-以体验最新-bug\"},\"409\":{\"t\":\"删除旧的插件PFLP_xxx.dll\"},\"410\":{\"t\":\"备份数据文件和配置文件（如果不放心）：plugins\\\\PixelFaramitaLuminousPolymerization\\\\\"},\"411\":{\"h\":\"请前往 最新构建 密码：114514\",\"a\":\"请前往-最新构建-密码-114514\"},\"412\":{\"t\":\"下载上传日期最近的PFLP_Beta_2022_xx_xx__xx_xx_xx.dll置于插件目录（plugins）\"},\"413\":{\"h\":\"更新 BDS 和 LL 以及 LLNET\",\"a\":\"更新-bds-和-ll-以及-llnet\"},\"414\":{\"t\":\"备份worlds、plugins等数据\"},\"415\":{\"t\":\"上述操作重做一遍\"},\"416\":{\"t\":\"... lazy.jpeg\"},\"417\":{\"h\":\"5.更新插件\"},\"418\":{\"h\":\"一键更新插件本体（不包含 LLNET）\",\"a\":\"一键更新插件本体-不包含-llnet\"},\"419\":{\"t\":\"控制台输入pflpup命令，等待更新完成后会自动替换并关闭服务器(配合外部面板以自动重启)\"},\"420\":{\"t\":\"如不成功请手动下载\"},\"421\":{\"h\":\"更新插件本体(记得及时关注最新构建，以体验最新 bug)\",\"a\":\"更新插件本体-记得及时关注最新构建-以体验最新-bug\"},\"422\":{\"t\":\"删除旧的插件PFLP_xxx.dll\"},\"423\":{\"t\":\"备份数据文件和配置文件（如果不放心）：plugins\\\\PixelFaramitaLuminousPolymerization\\\\\"},\"424\":{\"h\":\"请前往 最新构建 密码：114514\",\"a\":\"请前往-最新构建-密码-114514\"},\"425\":{\"t\":\"下载上传日期最近的PFLP_Beta_2022_xx_xx__xx_xx_xx.dll置于插件目录（plugins）\"},\"426\":{\"h\":\"更新 BDS 和 LL 以及 LLNET\",\"a\":\"更新-bds-和-ll-以及-llnet\"},\"427\":{\"t\":\"备份worlds、plugins等数据\"},\"428\":{\"t\":\"上述操作重做一遍\"},\"429\":{\"t\":\"... lazy.jpeg\"},\"430\":{\"h\":\"用方\"},\"431\":{\"h\":\"各模块使用方法\",\"a\":\"各模块使用方法\"},\"432\":{\"t\":\"此栏列举了各模块的使用方法，以及摆放各模块的图骗。\"},\"433\":{\"t\":\"请点击左侧的菜单切换到具体模块的使用。\"},\"434\":{\"h\":\"功能简介\",\"a\":\"功能简介\"},\"435\":{\"t\":\"Tpa | 请求传送\"},\"436\":{\"t\":\"Warp | 全局传送点\"},\"437\":{\"t\":\"Home ｜个人传送点 (by @voyage27)\"},\"438\":{\"t\":\"TPR | 随机传送\"},\"439\":{\"t\":\"WebUI | 网页扩展\"},\"440\":{\"t\":\"MapService | 在线地图\"},\"441\":{\"t\":\"PackManager | 资源包管理器\"},\"442\":{\"t\":\"PictureLoader | 图片加载器\"},\"443\":{\"t\":\"Land | 领地\"},\"444\":{\"t\":\"Sidebar | 侧边栏\"},\"445\":{\"t\":\"Popup | 弹出信息\"},\"446\":{\"t\":\"PlayerList | 玩家列表（记分板）信息\"},\"447\":{\"t\":\"JoinLocation | 进服 IP 归属地显示\"},\"448\":{\"t\":\"DynamicMotd | 动态 Motd\"},\"449\":{\"t\":\"BelowName | 玩家名下方信息显示\"},\"450\":{\"t\":\"Helper | 辅助功能\"},\"451\":{\"t\":\"ForceDownloadWithoutCovering：强制下载材质包但不覆盖 FakeSeed：假种子 LevelName：存档名（显示在暂停界面） EditRedstoneTPS：修改红石速率（支持三个维度分开修改）\"},\"452\":{\"t\":\"HeightEdit | 编辑世界高度\"},\"453\":{\"t\":\"暂时只支持修改主世界高度，范围-512 到 512(最低点设置过低可能会导致世界生成的比较奇怪) 如果存档是虚空或者超平坦请千万不要开启次功能\"},\"454\":{\"t\":\"FriendlyDisconnect | 修改掉线提示\"},\"455\":{\"t\":\"如玩家不在白名单、未通过 XboxLive 验证、版本不合规等踢出提示\"},\"456\":{\"t\":\"WebsocketAPI | 远程控制 API\"},\"457\":{\"t\":\"主要支持 PFBridge 的消息联动 也支持较早的基于 BDXWebSocket 协议的对接插件https://github.com/WangYneos/BDXWebSocket\"},\"458\":{\"t\":\"Menu | 自定义菜单\"},\"459\":{\"t\":\"示例文件请在群里找群友要，我这不提供\"},\"460\":{\"t\":\"GiftCode | 礼品码(by @voyage27)\"},\"461\":{\"t\":\"Death | 死亡反馈/返回\"},\"462\":{\"t\":\"ChatTranslation | 聊天实时翻译\"},\"463\":{\"t\":\"玩家语言分离设置，可翻译自己发出的消息等 命令/translation\"},\"464\":{\"t\":\"ChatEnhancement ｜聊天增强\"},\"465\":{\"t\":\"修改聊天格式 不与其他监听聊天消息的插件冲突\"},\"466\":{\"t\":\"WorldLimit | 世界边界\"},\"467\":{\"t\":\"可自定义多个边界 Notice | 进服公告\"},\"468\":{\"t\":\"AttackEcho | 攻击反馈\"},\"469\":{\"t\":\"目前只做了弹射物击中的反馈\"},\"470\":{\"t\":\"MoneyExtensions | 金钱 UI 管理MoneyApi| 金钱接口\"},\"471\":{\"t\":\"BehaviorLog | 行为日志 (SQLIte 数据库，只记录必要数据，无任何多余文字，保证记录文件最小)\"},\"472\":{\"t\":\"Backup | 自动备份\"},\"473\":{\"t\":\"TransferServerOnClose | 关服传送\"},\"474\":{\"t\":\"KickToolbox | 踢部分 toolbox 玩家 老功能，不保证 100%有效，无法过部分改版 toolbox，如需反作弊推荐使用 LLAntiCheat\"},\"475\":{\"t\":\"Shop | 商店\"},\"476\":{\"t\":\"远古功能，兼容 3 年前的 PFShop，shopdata.json 放到插件配置目录会自动转换\"},\"477\":{\"t\":\"FakeMotd | 伪造 Motd 信息\"},\"478\":{\"t\":\"支持动态最大玩家数量 伪造 motd 的在线玩家数量 motd 的存档名称 motd 的端口 可以配合这个功能来修复 frp 内网穿透后服务器 motd 显示在局域网的 bug 伪造 motd 的存档名称（不过通常没啥用\"},\"479\":{\"t\":\"PvPManager | 个人 PvP 状态管理\"},\"480\":{\"t\":\"Statistics | 统计变量\"},\"481\":{\"t\":\"frpc | 内网穿透 + IP 获取\"},\"482\":{\"t\":\"Protect | 保护区\"},\"483\":{\"t\":\"CommandMap | 命令映射\"},\"484\":{\"t\":\"ScheduleTask | 定时任务\"},\"485\":{\"h\":\"尚未完成但在计划中的\",\"a\":\"尚未完成但在计划中的\"},\"486\":{\"t\":\"ServerTransfer | 跨服传送还没做\"},\"487\":{\"t\":\"可设置在服务器关闭后传送玩家到其他服务器\"},\"488\":{\"t\":\"LLACHelper | 接管 LLAC 的作弊惩罚暂时没做\"},\"489\":{\"t\":\"Hunter | 赏金猎人还没做\"},\"490\":{\"t\":\"Blacklist | 黑名单 @voyage27 做了一半\"},\"491\":{\"h\":\"AttackEcho | 攻击反馈\"},\"492\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"493\":{\"t\":\"\\\"AttackEcho\\\": { \\\"ModuleEnabled\\\": true, \\\"BowDing\\\": true, \\\"ShowTitle\\\": false, \\\"ShowActionbar\\\": true } \"},\"494\":{\"h\":\"使用效果\",\"a\":\"使用效果\"},\"495\":{\"t\":\"... todo\"},\"496\":{\"h\":\"Backup | 自动备份\"},\"497\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"498\":{\"t\":\"\\\"Backup\\\": { //总开关 \\\"ModuleEnabled\\\": true, //备份到的目录 \\\"TargetFolder\\\": \\\"backup/%time:yyyy-MM-dd-HH-mm-ss%\\\", //如果目标目录存在，是否删除 \\\"DeleteTargetFolderIfExists\\\": true, //复制所有需要备份的文件夹 \\\"CopyFolder\\\": false, //创建 zip 压缩包 \\\"CreateZipFile\\\": true, //压缩包文件名 \\\"ZipFileName\\\": \\\"backup-%time:yyyy-MM-dd-HH-mm-ss%\\\", //创建 .mcworld 压缩包，方便直接导入Minecraft \\\"CreateMcWorldFile\\\": true, //存档文件名称 \\\"McWorldFileName\\\": \\\"backup-%time:yyyy-MM-dd-HH-mm-ss%\\\", //是否备份插件数据文件 \\\"IncludePluginData\\\": true, //是否备份插件配置文件 \\\"IncludePluginConfig\\\": true, //额外需要备份的文件 //可使用通配符 \\\"Extra\\\": [\\\"plugins/LiteLoader/*.json\\\"], //开启自动备份 \\\"AutoBackup\\\": true, //自动备份的时间间隔（使用Corntab表达式） \\\"BackupCrontab\\\": \\\"*/1 * * * *\\\" } \"},\"499\":{\"h\":\"命令\",\"a\":\"命令\"},\"500\":{\"t\":\"/backup\"},\"501\":{\"t\":\"可在控制台或者游戏内管理员使用\"},\"502\":{\"h\":\"BelowName | 玩家名下方信息显示\"},\"503\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"504\":{\"t\":\"\\\"BelowName\\\":{ \\\"ModuleEnabled\\\": true, //刷新间隔（单位：毫秒） \\\"RefreshInterval\\\": 1000, \\\"Pages\\\": [//分页 [\\\"%health:F1%§r§c❤§r%hunger%§e%level%§g%experience:.00%§aL\\\", \\\"%os% §e| %devicename%\\\"], [\\\"§a↑%received%/s§7|§g↓%sent%/s\\\", \\\"§7ping:§a %ping%§ems\\\"] ] } \"},\"505\":{\"h\":\"ChatEnhancement ｜聊天增强\"},\"506\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"507\":{\"t\":\"\\\"ChatEnhancement\\\": { \\\"ModuleEnabled\\\": true, \\\"DisableSelectorOnTell\\\": true, \\\"Format\\\": \\\"§g[§r§7%date:HH：mm：ss% §d%world%§r§g]§b%os%§e|%ping%ms§e|§r§a<§r%nickname%§r%fakename%§r§a>§r%start%%msg%§r%end%\\\" } \"},\"508\":{\"h\":\"CommandMap | 命令映射\"},\"509\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"510\":{\"t\":\"\\\"CommandMap\\\": { \\\"ModuleEnabled\\\": true, \\\"Map\\\": { \\\"back\\\":\\\"death back\\\"//todo未做，请催更 }, \\\"Rename\\\": { \\\"land\\\": \\\"ld\\\" }, \\\"Hidden\\\": [\\\"xxx\\\"]//隐藏命令 } \"},\"511\":{\"h\":\"FriendlyDisconnect | 修改掉线提示\"},\"512\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"513\":{\"t\":\"\\\"FriendlyDisconnect\\\": { \\\"ModuleEnabled\\\": true, // 是否在控制台显示玩家掉线信息 \\\"ShowDisconnectInConsole\\\": true, \\\"NotAuthenticated\\\": \\\"§c未能通过Microsoft服务的身份验证\\\\n§a 请检查你的网络环境\\\", \\\"NotInWhitelist\\\": \\\"§c 你不在服务器的白名单内！\\\\n§e(服务器开启了白名单,请向管理员申请白名单)\\\", \\\"OldClient\\\": \\\"§c你的客户端版本太低，无法加入服务器\\\", \\\"OldServer\\\": \\\"§c你的客户端版本过新，无法加入服务器\\\", \\\"AlreadyLoginIn\\\": \\\"§c当前账号已在其他设备登录\\\\n§eID:§b{0} §eIP:§b{1}\\\\n§e系统:§b{2}\\\\n§e型号:§b{3}\\\", \\\"DetailedInfo\\\": \\\"\\\\n §r§b服务端支持游戏版本：§l§6{0}.{1}.{2}§g.{3}\\\\n §r§e服务端协议版本： §l§a{4}\\\\n §r§e客户端协议版本： §c§l{5}\\\", //强制允许玩家加入的协议版本（通常并不一定有效） \\\"ExtraAllowIncomingProtocolVersions\\\": [] } \"},\"514\":{\"h\":\"使用效果\",\"a\":\"使用效果\"},\"515\":{\"t\":\"... todo\"},\"516\":{\"h\":\"FakeMotd | 伪造 Motd 信息\"},\"517\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"518\":{\"t\":\"\\\"FakeMotd\\\": { \\\"ModuleEnabled\\\": true, \\\"DynamicMaxCount\\\": true, \\\"FakeCurrentPlayerCount\\\": 0, \\\"FakeMaxPlayerCount\\\": 0, \\\"FakePortIPv4\\\": 0, \\\"FakePortIPv6\\\": 0, \\\"FakeLevelName\\\": \\\"Bedrock Level\\\" } \"},\"519\":{\"h\":\"使用说明\",\"a\":\"使用说明\"},\"520\":{\"t\":\"DynamicMaxCount动态定义最大玩家数量\"},\"521\":{\"t\":\"FakeCurrentPlayerCount伪造当前玩家数量\"},\"522\":{\"t\":\"FakeMaxPlayerCount伪造最大玩家数量\"},\"523\":{\"t\":\"FakePortIPv4伪造 IPv4 端口(用于修复 frp 后显示在局域网游戏的 bug)\"},\"524\":{\"t\":\"FakePortIPv6伪造 IPv6 端口\"},\"525\":{\"t\":\"FakeLevelName伪造存档名称（显示在 motd 的存档名称，通常只有 motd 查看工具能看到）\"},\"526\":{\"h\":\"frpc | 内网穿透 + 真实IP 获取\"},\"527\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"528\":{\"t\":\"\\\"FrpClient\\\": { \\\"ModuleEnabled\\\": true, //覆盖LL的获取IP接口，开启方可让所有使用了LL接口的插件获取到真实IP \\\"OverrideLLGetIp\\\": true, //FRP的配置文件 \\\"FrpConfigs\\\": [ \\\"~\\\\\\\\frpc.ini\\\",//~开头表示插件目录，即PFLP的config.json所在目录 \\\"frpc2.ini\\\"//不加~表示BDS目录，即[BDS]\\\\frpc2.ini //可以多开frp ] } \"},\"529\":{\"h\":\"使用方法\",\"a\":\"使用方法\"},\"530\":{\"h\":\"自行搭建的服务\",\"a\":\"自行搭建的服务\"},\"531\":{\"t\":\"如自行搭建的 frp 服务器地址为frp.example.com，端口为7000，则配置文件frpc.ini如下：\"},\"532\":{\"t\":\"frp 配置文件格式\"},\"533\":{\"t\":\"[common] server_addr = frp.example.com server_port = 7000 [mc19132] type = udp local_ip = 127.0.0.1 local_port = 19132 remote_port = 11451 \"},\"534\":{\"h\":\"使用第三方服务\",\"a\":\"使用第三方服务\"},\"535\":{\"t\":\"这里 SakuraFrp 举例，其他使用frp的服务商同理\"},\"536\":{\"h\":\"点击配置文件\",\"a\":\"点击配置文件\"},\"537\":{\"t\":\"SakuraFrp 查看配置\"},\"538\":{\"h\":\"下载配置 frpc.ini\",\"a\":\"下载配置frpc-ini\"},\"539\":{\"t\":\"SakuraFrp 下载配置\"},\"540\":{\"h\":\"修改配置文件\",\"a\":\"修改配置文件\"},\"541\":{\"t\":\"将下载到的frpc_xxx.ini放到合适目录，如：[BDS]\\\\plugins\\\\PixelFaramitaLuminousPolymerization\\\\frpc_xxx.ini\"},\"542\":{\"t\":\"在 pflp 的 config.json对应项FrpConfigs添加对应配置，如：\\\"~\\\\\\\\frpc_xxx.ini\\\"\"},\"543\":{\"t\":\"控制台输入pflp reload重载，即可运行\"},\"544\":{\"h\":\"插件对接？？？\",\"a\":\"插件对接\"},\"545\":{\"t\":\"只要使用了 LL 接口的插件，不需要专门对接，只要在配置文件开启以下选项即可，其他插件调用 LL 的接口即可获取到真实 IP\"},\"546\":{\"t\":\"c++ Player::getIP()\"},\"547\":{\"t\":\"c++ NetworkIdentifier::getIP()\"},\"548\":{\"t\":\"js player.ip\"},\"549\":{\"t\":\" //覆盖LL的获取IP接口，开启方可让所有使用了LL接口的插件获取到真实IP \\\"OverrideLLGetIp\\\": true \"},\"550\":{\"h\":\"开源库使用\",\"a\":\"开源库使用\"},\"551\":{\"t\":\"frp repo\"},\"552\":{\"t\":\"本插件内置的修改后的分支 repo\"},\"553\":{\"h\":\"实现原理\",\"a\":\"实现原理\"},\"554\":{\"t\":\"frpc 客户端连接 frps 服务器后，服务端会将连接的 IP 传到 frpc，frpc 将 ip 与内网 ip 存表，故仅需修改客户端即可导出链接真实 IP\"},\"555\":{\"t\":\"本插件内置的 frpc 有所改动，方可在 BDS 直接获取到真实 IP，如需参考请打开上文的分支链接\"},\"556\":{\"h\":\"GiftCode | 礼品码(by @voyage27)\"},\"557\":{\"h\":\"命令\",\"a\":\"命令\"},\"558\":{\"t\":\"/giftcode\"},\"559\":{\"h\":\"HeightEdit | 编辑世界高度\"},\"560\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"561\":{\"t\":\"\\\"HeightEdit\\\": { \\\"ModuleEnabled\\\": true, \\\"Max\\\": 512, \\\"Min\\\": -64 } \"},\"562\":{\"h\":\"配置限制\",\"a\":\"配置限制\"},\"563\":{\"t\":\"Max 最大高度 \"},\"564\":{\"t\":\"最大值512，要求为16的倍数\"},\"565\":{\"t\":\"Min 最世界最低点 \"},\"566\":{\"t\":\"最小值-512，要求为16的倍数\"},\"567\":{\"t\":\"不宜过小，否则地图生成会很奇怪\"},\"568\":{\"h\":\"兼容性\",\"a\":\"兼容性\"},\"569\":{\"t\":\"超平坦类型的存档暂无适配，请勿在超平坦地图使用这个功能，否则会产生不期望的区块\"},\"570\":{\"t\":\"（超平坦技术上之后可以兼容，不过目前咕了）\"},\"571\":{\"h\":\"Helper | 辅助功能\"},\"572\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"573\":{\"t\":\"\\\"Helper\\\": { //总开关 \\\"ModuleEnabled\\\": true, //强制下载材质包（且允许玩家使用材质包） \\\"ForceDownloadWithoutCovering\\\": true, //开启假种子功能，（客户端区块生成的选项可选不关闭，具体自行测试） \\\"EnableFakeSeed\\\": true, //种子 \\\"FakeSeed\\\": 114514, //开启修改存档显示名称的功能 \\\"EnableLevelName\\\": true, //存档名称（通常显示在暂停界面） \\\"LevelName\\\": \\\"Bedrock Level\\\", //开启修改红石速度的功能（单位：tick/s） \\\"EditRedstoneTPS\\\": true, //主世界红石速度（TPS是单位） \\\"OverworldRedstoneTPS\\\": 10, //地狱 \\\"NetherRedstoneTPS\\\": 10, //末地 \\\"TheEndRedstoneTPS\\\": 10 } \"},\"574\":{\"h\":\"提示\",\"a\":\"提示\"},\"575\":{\"t\":\"开启修改客户端种子后无需手动关闭client-chunk-generation选项，不过关闭后玩家可视的新区块更多\"},\"576\":{\"h\":\"Home ｜个人传送点\"},\"577\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"578\":{\"t\":\"\\\"Home\\\": { \\\"ModuleEnabled\\\": true,//开启 \\\"MaxHomeCount\\\": 5//玩家最大Home数量 } \"},\"579\":{\"h\":\"命令\",\"a\":\"命令\"},\"580\":{\"t\":\"命令\"},\"581\":{\"h\":\"Land | 领地\"},\"582\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"583\":{\"t\":\"\\\"Land\\\": { //开启领地 \\\"ModuleEnabled\\\": true, //领地传送 \\\"EnableTeleport\\\": true, //圈地飞行 \\\"EnableEnclosureFly\\\": true, //OP临时Buff时间 //命令/land opbuff后即可暂时无视领地权限 \\\"OpBuffTimeSeconds\\\": 60, //开启2D领地 \\\"Enabled2D\\\": true, //2D领地价格 \\\"Price2D\\\": 100.0, //2D领地回收价格 \\\"RecyclePrice2D\\\": 95.0, //2D领地最大面积 \\\"MaxSize2D\\\": -1, //2D领地最小面积 \\\"MinSize2D\\\": 4, //开启3D领地 \\\"Enabled3D\\\": true, //3D领地价格 \\\"Price3D\\\": 2.0, //3D领地回收价格 \\\"RecyclePrice3D\\\": 1.9, //3D领地最大面积 \\\"MaxSize3D\\\": -1, //3D领地最小面积 \\\"MinSize3D\\\": 8, //玩家拥有的领地最大数量，-1表示无限制 \\\"MaximumOwnLands\\\": -1, //领地提示数量(通常是无权限的提示） \\\"LandTipCount\\\": 4, //领地提示时间 \\\"LandTipTime\\\": 3000, //表单每页显示的项目数量（对于翻页表单） \\\"CountPerPage\\\": 10, //表单每页显示的项目数量（对于选择表单） \\\"ChooseItemCountPerPage\\\": 3, //增强破坏保护，仅显示效果 \\\"PreventDestroyEx\\\": true, //领地额外监听器，如果嫌领地保护的太好可以关闭，通常不建议关闭 \\\"ExtraListener\\\": { \\\"BlockFall\\\": true, \\\"MultifaceSpreader\\\": true, \\\"ItemFrameDrop\\\": true, \\\"OnActorHurt\\\": true, \\\"PCImpactDamage\\\": true, \\\"PCSplashPotion\\\": true, \\\"PCAoECloud\\\": true, \\\"PCArrowHit\\\": true, \\\"OnHitLightning\\\": true, \\\"WitherBossAttack\\\": true, \\\"WitherBossDestroyBlocks\\\": true, \\\"BreakDoor\\\": true, \\\"GrowTree\\\": true, \\\"GrowMashroom\\\": true, \\\"LecternBlockDropBook\\\": true, \\\"FishingHook\\\": true, \\\"EndermanTakeBlock\\\": true, \\\"EndermanLeaveBlock\\\": true, \\\"LightningBolt\\\": true, \\\"HungerChange\\\": true, \\\"BlockMove\\\": true, \\\"OpenInventory\\\": true, \\\"PlayerDie\\\": true, \\\"HopperPullIn\\\": true, \\\"OnMobHurt\\\": true } } \"},\"584\":{\"h\":\"命令\",\"a\":\"命令\"},\"585\":{\"t\":\"命令\"},\"586\":{\"h\":\"圈地\",\"a\":\"圈地\"},\"587\":{\"t\":\"圈地\"},\"588\":{\"h\":\"JoinLocation | 进服 IP 归属地显示\"},\"589\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"590\":{\"t\":\"\\\"JoinLocation\\\": { //开启 \\\"ModuleEnabled\\\": true, //玩家加入后发送聊天消息 \\\"SendMessage\\\": true, //玩家加入后发送通知横幅 \\\"SendToast\\\": true } \"},\"591\":{\"h\":\"修改提示\",\"a\":\"修改提示\"},\"592\":{\"t\":\"提示位于语言文件\"},\"593\":{\"t\":\"如zh_CN.lang\"},\"594\":{\"t\":\"JoinLocation.Msg=§e欢迎来自§c {1}§d{2}§b{3}§g{4}§7({5})§e 的§a {0} §e加入服务器~ JoinLocation.ToastContent=§e欢迎来自§c {1}§d{2}§b{3}§g{4}§7({5})§e 的§a {0} §e加入服务器~ JoinLocation.ToastTitle= §e {0} 加入了服务器~ \"},\"595\":{\"h\":\"使用效果\",\"a\":\"使用效果\"},\"596\":{\"t\":\"... todo\"},\"597\":{\"h\":\"相关配置\",\"a\":\"相关配置\"},\"598\":{\"t\":\"文件[插件目录]\\\\data\\\\locationCache.json存储了玩家的 IP 地址和归属地信息用作缓存，可以手动修改或删除\"},\"599\":{\"t\":\"如需要隐藏某玩家的归属地信息或信息有误，可以修改此文件\"},\"600\":{\"h\":\"BehaviorLog | 行为日志\"},\"601\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"602\":{\"t\":\"\\\"BehaviorLog\\\": { \\\"ModuleEnabled\\\": true, //文件名 \\\"FileName\\\": \\\"BehaviorLog_%time:yyyy-MM-dd%.db\\\", //文件名刷新间隔（分钟） \\\"RefreshIntervalInMinutes\\\": 60, //具体日志记录项开关 \\\"Toggles\\\": { \\\"PlayerJoin\\\": { //储存到数据库 \\\"Database\\\": true, //输出到控制台 \\\"Console\\\": true }, \\\"PlayerLeft\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"ServerCmd\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerCmd\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerRespawn\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"MobDie\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerOpenContainer\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerChat\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerChangeDimension\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerAttack\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerPickUpItem\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerDropItem\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerDestroyBlock\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerPlaceBlock\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerInteractBlock\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"PlayerInteractEntity\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"ContainerChanged\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"BlockExplode\\\": { \\\"Database\\\": true, \\\"Console\\\": true }, \\\"EntityExplode\\\": { \\\"Database\\\": true, \\\"Console\\\": true } } } \"},\"603\":{\"h\":\"特点\",\"a\":\"特点\"},\"604\":{\"t\":\"使用 SQLite 数据库储存日志记录\"},\"605\":{\"t\":\"仅储存必要信息，不储存具体日志的文字描述，以节省空间\"},\"606\":{\"h\":\"查阅日志\",\"a\":\"查阅日志\"},\"607\":{\"h\":\"使用数据库查看软件\",\"a\":\"使用数据库查看软件\"},\"608\":{\"t\":\"SQLiteStudio\"},\"609\":{\"t\":\"DB Browser for SQLite\"},\"610\":{\"t\":\"...\"},\"611\":{\"h\":\"使用 WebUI [推荐]\",\"a\":\"使用webui-推荐\"},\"612\":{\"t\":\"在线查看日志\"},\"613\":{\"t\":\"支持筛选、查找、排序\"},\"614\":{\"t\":\"高性能\"},\"615\":{\"h\":\"MapService | 在线地图\"},\"616\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"617\":{\"t\":\"\\\"MapService\\\": { //开关 \\\"ModuleEnabled\\\": true } \"},\"618\":{\"h\":\"提示\",\"a\":\"提示\"},\"619\":{\"t\":\"此功能需要同时开启 WebUI，且需要在 WebUI 中开启 OnlineMap 功能，方可在网页查看地图。 如关闭此模块，WebUI 中的 在线地图 仍能显示，但不会时时更新最新的区块。\"},\"620\":{\"h\":\"Menu | 自定义菜单\"},\"621\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"622\":{\"t\":\"config.json 全局配置文件\"},\"623\":{\"t\":\"\\\"Menu\\\": { \\\"ModuleEnabled\\\": true,//开启 \\\"SaveFormattedJson\\\": true//自动保存格式化的json，会导致菜单中的注释消失 } \"},\"624\":{\"t\":\"menu.json具体配置\"},\"625\":{\"t\":\"{ //key : 菜单ID \\\"MainMenu\\\": { //绑定物品，如钟，这样玩家使用钟右键即可打开菜单 \\\"BindItem\\\": \\\"clock\\\", //绑定命令，如/menu，这样玩家输入/menu即可打开菜单 \\\"RegsterCommand\\\": \\\"menu\\\", //命令描述 \\\"RegsterCommandDescription\\\": \\\"§3§lGUI菜单\\\", //菜单标题 \\\"Title\\\": \\\"§7[§6Mc§3play§7]§8--§eGUI菜单\\\", //菜单内容 \\\"Content\\\": \\\"§4§l内容\\\", //是否需要OP权限 \\\"RequireOP\\\": false, //按钮列表 \\\"Buttons\\\": [ { //按钮文本 \\\"Text\\\": [\\\"►§4§l传送菜单§r◄\\\", \\\"§7[§c进行各种传送§7]\\\"], //按钮需要OP权限 \\\"RequireOP\\\": false, //按钮需要的金币数量 \\\"CostMoney\\\": 0, //按钮图标 \\\"ImageUrl\\\": \\\"textures/ui/world_glyph_color_2x\\\", //按钮点击事件，可触发多个回调 \\\"Actions\\\": [ { //按钮点击事件类型 //可选： // RunCmd - 在控制台执行命令 // RunCmdAs - 以玩家身份执行命令 // RunCmdAsOP - 以玩家OP身份执行命令（类比临时提权） // ExecuteCmd - 执行命令，以execute as的方式以玩家身份执行，基本类似RunCmdAsOP // OpenForm - 打开表单 \\\"Type\\\": \\\"OpenForm\\\", \\\"Value\\\": \\\"Tpmenu\\\", //菜单ID //点击关闭后是否返回上一级菜单 \\\"BackOnClose\\\": true } ] }, { \\\"Text\\\": [\\\"►§3§l任务§r◄\\\", \\\"§7[§b奠定发展§7]\\\"], \\\"RequireOP\\\": false, \\\"CostMoney\\\": 0, \\\"ImageUrl\\\": \\\"textures/ui/icon_book_writable\\\", \\\"Actions\\\": [ { \\\"Type\\\": \\\"RunCmdAs\\\", \\\"Values\\\": [\\\"/task\\\"] } ] }, { \\\"Text\\\": [\\\"►§2§l领地§r◄\\\", \\\"§7[§a保护家园§7]\\\"], \\\"RequireOP\\\": false, \\\"CostMoney\\\": 0, \\\"ImageUrl\\\": \\\"textures/ui/absorption_effect\\\", \\\"Actions\\\": [ { \\\"Type\\\": \\\"RunCmdAs\\\", \\\"Values\\\": [\\\"/land\\\"] } ] }, { \\\"Text\\\": [\\\"►§6§l系统商店§r◄\\\", \\\"§7[§g赚取金币§7]\\\"], \\\"RequireOP\\\": false, \\\"CostMoney\\\": 0, \\\"ImageUrl\\\": \\\"textures/ui/village_hero_effect\\\", \\\"Actions\\\": [ { \\\"Type\\\": \\\"RunCmdAs\\\", \\\"Values\\\": [\\\"/shop\\\"] } ] } ] } } \"},\"626\":{\"h\":\"Money | 金钱\"},\"627\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"628\":{\"t\":\"\\\"MoneyApi_Settings\\\": { //货币显示名称 \\\"DisplayName\\\": \\\"金钱\\\", \\\"UseScoreboard\\\": false } \"},\"629\":{\"t\":\"\\\"MoneyExtensions\\\": { \\\"ModuleEnabled\\\": true } \"},\"630\":{\"h\":\"DynamicMotd | 动态 Motd\"},\"631\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"632\":{\"t\":\"\\\"DynamicMotd\\\": { \\\"ModuleEnabled\\\": true, //刷新间隔（单位：毫秒）(客户端有一定获取间隔，刷新太快没有实际意义) \\\"RefreshInterval\\\": 2500, //motd 的具体内容 //每页内容在间隔后切换 \\\"Pages\\\": [\\\"服务器\\\", \\\"%playercount% 在线\\\"] } \"},\"633\":{\"h\":\"Notice | 进服公告\"},\"634\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"635\":{\"t\":\"\\\"Notice\\\": { \\\"ModuleEnabled\\\": true } \"},\"636\":{\"h\":\"命令\",\"a\":\"命令\"},\"637\":{\"t\":\"/notice\"},\"638\":{\"h\":\"公告配置\",\"a\":\"公告配置\"},\"639\":{\"t\":\"命令：/notice edit打开 op 编辑菜单\"},\"640\":{\"h\":\"PackManager | 资源包管理器\"},\"641\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"642\":{\"t\":\"//开启材质包加密 //密钥为自动生成 //目前貌似没自定义密钥的需求就不做自定义了 \\\"PackManager_EncryptResourcePacks\\\": true, \"},\"643\":{\"h\":\"手动加载\",\"a\":\"手动加载\"},\"644\":{\"t\":\"解压到指定目录即可自动加载\"},\"645\":{\"t\":\"plugins\\\\PixelFaramitaLuminousPolymerization\\\\pack\\\\customize\\\\resource_packs\\\\[xxx]\\\\manifest.json\"},\"646\":{\"t\":\"plugins\\\\PixelFaramitaLuminousPolymerization\\\\pack\\\\customize\\\\behavior_packs\\\\[xxx]\\\\manifest.json\"},\"647\":{\"t\":\"文件夹直接放入即可加载，不会污染地图目录和服务端目录的行为包/资源包文件夹\"},\"648\":{\"h\":\"自动加载\",\"a\":\"自动加载\"},\"649\":{\"t\":\"一键导入.mcaddon或.mcpack\"},\"650\":{\"t\":\"放置目录\"},\"651\":{\"t\":\"文件直接放入即可自动导入，不会污染地图目录和服务端目录的行为包/资源包文件夹\"},\"652\":{\"h\":\"快速加载\",\"a\":\"快速加载\"},\"653\":{\"t\":\"快速加载 结构 和.mcfunction文件\"},\"654\":{\"t\":\"plugins\\\\PixelFaramitaLuminousPolymerization\\\\pack\\\\functions\"},\"655\":{\"t\":\"plugins\\\\PixelFaramitaLuminousPolymerization\\\\pack\\\\structures\"},\"656\":{\"t\":\"支持/reload命令重载，不过受限于/reload命令的限制，只能重载开服时已存在的文件 \"},\"657\":{\"t\":\"文件直接放入即可自动导入，不会污染地图目录和服务端目录的行为包文件夹\"},\"658\":{\"h\":\"局限性\",\"a\":\"局限性\"},\"659\":{\"t\":\"材质包热重载暂未实现，目前添加材质包后需要重启服务器方可应用\"},\"660\":{\"h\":\"PictureLoader | 图片加载器\"},\"661\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"662\":{\"t\":\"\\\"PictureLoader\\\": { //开启 \\\"ModuleEnabled\\\": true, //图片渲染距离和GIF播放距离 \\\"DisplayDistance\\\": 20, //静态图片（非GIF）重发间隔 \\\"StaticPictureResendDurationSeconds\\\": 30.0 } \"},\"663\":{\"h\":\"命令\",\"a\":\"命令\"},\"664\":{\"t\":\"命令\"},\"665\":{\"h\":\"导入图片\",\"a\":\"导入图片\"},\"666\":{\"t\":\"开始导入 命令/picture editor new https://www.baidu.com/img/flexible/logo/pc/result.png从网址导入图片 命令/picture editor new C:\\\\test\\\\xxx.png从本地路径导入xxx.png图片 命令/picture editor new xxx.png从桌面的xxx.png导入图片\"},\"667\":{\"t\":\"图片属性 /picture editor edit 打开此界面\"},\"668\":{\"t\":\"设置地址 /picture editor set xxx.png设置新的地址\"},\"669\":{\"t\":\"旋转图片 空手右键方块即可旋转图片\"},\"670\":{\"h\":\"编辑已有图片\",\"a\":\"编辑已有图片\"},\"671\":{\"t\":\"/picture edit \"},\"672\":{\"h\":\"PlayerList | 玩家列表（记分板）信息\"},\"673\":{\"t\":\"文档待写，可 pr 贡献\"},\"674\":{\"h\":\"Popup | 弹出信息\"},\"675\":{\"t\":\"文档待写，可 pr 贡献\"},\"676\":{\"h\":\"PvPManager | 个人 PvP 状态管理\"},\"677\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"678\":{\"t\":\"\\\"PvPManager\\\": { //开启 \\\"ModuleEnabled\\\": true, //额外监听器，开启判断更全面，也可选择关闭 \\\"ExtraListener\\\": { \\\"OnActorHurt\\\": true, \\\"PCImpactDamage\\\": true, \\\"PCSplashPotion\\\": true, \\\"PCAoECloud\\\": true, \\\"ProjectileCatchFire\\\": true, \\\"ProjectileDouseFire\\\": true, \\\"ProjectileIgnite\\\": true, \\\"PCArrowHit\\\": true } } \"},\"679\":{\"h\":\"命令\",\"a\":\"命令\"},\"680\":{\"t\":\"/pvp- 切换 PvP 状态\"},\"681\":{\"h\":\"使用说明\",\"a\":\"使用说明\"},\"682\":{\"t\":\"仅在两个玩家都开启 PvP 状态时才会互相造成伤害\"},\"683\":{\"h\":\"ScheduleTask | 定时任务\"},\"684\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"685\":{\"t\":\"\\\"ScheduleTask\\\": { \\\"ModuleEnabled\\\": true, \\\"Tasks\\\": [ { \\\"Corntab\\\": \\\"*/2 * * * * *\\\", \\\"RunCommand\\\": \\\"say 233\\\" } ] } \"},\"686\":{\"h\":\"说明\",\"a\":\"说明\"},\"687\":{\"t\":\"使用 CornTab 语法描述定时任务\"},\"688\":{\"t\":\"RunCommand任务执行的命令\"},\"689\":{\"t\":\"其他功能待添加\"},\"690\":{\"h\":\"Sidebar | 侧边栏\"},\"691\":{\"t\":\"文档待写，可 pr 贡献\"},\"692\":{\"h\":\"Statistics | 统计变量\"},\"693\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"694\":{\"t\":\"\\\"Statistics\\\": { \\\"ModuleEnabled\\\": true,//开启模块 \\\"%online_time%\\\": true,//在线时长 \\\"%destroy%\\\": true,//破坏方块数量 \\\"%place%\\\": true,//放置方块数量 \\\"%death%\\\": true,//死亡次数 \\\"%respawn%\\\": true,//重生次数 \\\"%join%\\\": true,//进服次数 //击杀次数，包括玩家和生物 //%kill:id%筛选id的击杀次数 //如使用%kill:player%表示玩家 //如使用%kill:sheep%表示羊 \\\"%kill%\\\": true } \"},\"695\":{\"h\":\"使用说明\",\"a\":\"使用说明\"},\"696\":{\"t\":\"其他变量\"},\"697\":{\"h\":\"Tpa | 请求传送\"},\"698\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"699\":{\"t\":\"\\\"Tpa\\\": { \\\"ModuleEnabled\\\": true, \\\"Timeout\\\": 45.0,//请求超时时间 \\\"Cooldown\\\": 5.0,//请求冷却时间 \\\"AllowTpaToSelf\\\": true,//允许自己传送到自己(没什么用） \\\"PlayerSettingEnable\\\": true,//是否启用玩家设置 \\\"TeleportImmuneTime\\\": 5,//传送后无敌时间 //默认接收方式玩家可以在个人设置中修改 \\\"DefaultReceiveByToast\\\": true,//默认:横幅 \\\"DefaultReceiveByForm\\\": true,//默认:弹窗 \\\"DefaultReceiveByMsg\\\": true//默认:消息 } \"},\"700\":{\"h\":\"命令\",\"a\":\"命令\"},\"701\":{\"t\":\"命令\"},\"702\":{\"h\":\"个人设置\",\"a\":\"个人设置\"},\"703\":{\"t\":\"个人设置\"},\"704\":{\"h\":\"TPR | 随机传送\"},\"705\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"706\":{\"t\":\"\\\"Tpr\\\": { \\\"ModuleEnabled\\\": true,//开启 \\\"Range\\\": 1300//范围(半径) } \"},\"707\":{\"h\":\"命令\",\"a\":\"命令\"},\"708\":{\"t\":\"/tpr\"},\"709\":{\"h\":\"Warp | 全局传送点\"},\"710\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"711\":{\"t\":\" \\\"Warp\\\": { \\\"ModuleEnabled\\\": true } \"},\"712\":{\"h\":\"命令\",\"a\":\"命令\"},\"713\":{\"t\":\"OP 命令\"},\"714\":{\"t\":\"OP命令\"},\"715\":{\"t\":\"普通玩家 命令\"},\"716\":{\"t\":\"普通玩家 命令\"},\"717\":{\"t\":\"注意 OP 和普通玩家前往传送点的命令不一样，OP 是/warp go xxx，普通玩家/warp xxx\"},\"718\":{\"h\":\"WebUI | 网页扩展\"},\"719\":{\"h\":\"配置文件\",\"a\":\"配置文件\"},\"720\":{\"t\":\"\\\"WebUI\\\": { //开关 \\\"ModuleEnabled\\\": true, //绑定地址，0.0.0.0暴露公网 \\\"Hostname\\\": \\\"0.0.0.0\\\", //绑定端口 \\\"Port\\\": 8089, //使用SSL证书 \\\"UseSSL\\\": false, \\\"SSLCertificatePath\\\": \\\"\\\", \\\"SSLCertificatePassword\\\": \\\"\\\", //外部访问地址，用于生成头像链接等，建议填上 \\\"ExternalAddress\\\": \\\"http://localhost:8089\\\", //调试模式，控制台会有很多日志，通常不建议开启 \\\"Debug\\\": false, //网站标题 \\\"HtmlTitle\\\": \\\"网页标题\\\", //网站图标，~开头表示插件配置目录 \\\"HtmlFavicon\\\": \\\"~\\\\\\\\favicon.png\\\", //功能 \\\"Functions\\\": { //日志查询功能 \\\"LogQuery\\\": true, //在线聊天功能 \\\"OnlineChat\\\": true, //在线聊天保留历史记录（重启后保留聊天） \\\"PreserveChatHistory\\\": true, //在线地图功能(需要同时开启MapService） \\\"OnlineMap\\\": true } } \"},\"721\":{\"h\":\"提示\",\"a\":\"提示\"},\"722\":{\"t\":\"OnlineMap 功能需要同时开启 MapService，方可在网页查看地图，否则地图不会时时刷新。\"},\"723\":{\"h\":\"图骗\",\"a\":\"图骗\"},\"724\":{\"t\":\"主页\"},\"725\":{\"t\":\"日志查询\"},\"726\":{\"t\":\"在线地图\"},\"727\":{\"t\":\"在线聊天\"},\"728\":{\"t\":\"xdm 也可以把用上的图片发评论区\"},\"729\":{\"h\":\"WebsocketAPI | 远程控制 API\"},\"730\":{\"h\":\"远程控制 API\",\"a\":\"远程控制-api\"},\"731\":{\"t\":\"\\\"WebsocketAPI\\\": { \\\"ModuleEnabled\\\": true, //监听地址 \\\"Location\\\": \\\"ws://0.0.0.0:29132/mcws\\\", //传输密钥 \\\"Token\\\": \\\"commandpassword\\\", //是否启用调试输出 \\\"EnableDebugOutput\\\": false, //控制台不输出任何WS的消息 \\\"QuietConsole\\\": false } \"},\"732\":{\"h\":\"协议说明\",\"a\":\"协议说明\"},\"733\":{\"t\":\"BDSWebSocketAPIProtocol\"},\"734\":{\"t\":\"Fork From(基于) BDXWebSocket [Apr 8, 2020]\"},\"735\":{\"h\":\"ChatEx\"},\"736\":{\"h\":\"ChatEx::SetNickName\",\"a\":\"chatex-setnickname\"},\"737\":{\"h\":\"设置玩家昵称\",\"a\":\"设置玩家昵称\"},\"738\":{\"t\":\"形参\"},\"739\":{\"t\":\"类型\"},\"740\":{\"t\":\"playerXuid\"},\"741\":{\"t\":\"string\"},\"742\":{\"t\":\"nickName\"},\"743\":{\"t\":\"string\"},\"744\":{\"t\":\"无返回值;\"},\"745\":{\"t\":\"JavaScript\"},\"746\":{\"t\":\"/** 设置玩家昵称 */ const ChatEx_SetNickName = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"); ChatEx_SetNickName(playerXuid,nickName); \"},\"747\":{\"t\":\"C++\"},\"748\":{\"t\":\"// 设置玩家昵称 auto ChatEx_SetNickName = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& nickName)>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"); ChatEx_SetNickName(playerXuid,nickName); \"},\"749\":{\"t\":\"C#\"},\"750\":{\"t\":\"// 设置玩家昵称 var ChatEx_SetNickName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"); ChatEx_SetNickName(playerXuid,nickName); \"},\"751\":{\"t\":\"Visual Basic .NET\"},\"752\":{\"t\":\"' 设置玩家昵称 Dim ChatEx_SetNickName = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\") ChatEx_SetNickName(playerXuid,nickName) \"},\"753\":{\"t\":\"F#\"},\"754\":{\"t\":\"// 设置玩家昵称 let ChatEx_SetNickName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\") (playerXuid,nickName) |>ChatEx_SetNickName.Invoke \"},\"755\":{\"h\":\"ChatEx::SetFakeName\",\"a\":\"chatex-setfakename\"},\"756\":{\"h\":\"设置玩家聊天时的名字\",\"a\":\"设置玩家聊天时的名字\"},\"757\":{\"t\":\"形参\"},\"758\":{\"t\":\"类型\"},\"759\":{\"t\":\"playerXuid\"},\"760\":{\"t\":\"string\"},\"761\":{\"t\":\"fakeName\"},\"762\":{\"t\":\"string\"},\"763\":{\"t\":\"无返回值;\"},\"764\":{\"t\":\"JavaScript\"},\"765\":{\"t\":\"/** 设置玩家聊天时的名字 */ const ChatEx_SetFakeName = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"); ChatEx_SetFakeName(playerXuid,fakeName); \"},\"766\":{\"t\":\"C++\"},\"767\":{\"t\":\"// 设置玩家聊天时的名字 auto ChatEx_SetFakeName = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& fakeName)>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"); ChatEx_SetFakeName(playerXuid,fakeName); \"},\"768\":{\"t\":\"C#\"},\"769\":{\"t\":\"// 设置玩家聊天时的名字 var ChatEx_SetFakeName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"); ChatEx_SetFakeName(playerXuid,fakeName); \"},\"770\":{\"t\":\"Visual Basic .NET\"},\"771\":{\"t\":\"' 设置玩家聊天时的名字 Dim ChatEx_SetFakeName = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\") ChatEx_SetFakeName(playerXuid,fakeName) \"},\"772\":{\"t\":\"F#\"},\"773\":{\"t\":\"// 设置玩家聊天时的名字 let ChatEx_SetFakeName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\") (playerXuid,fakeName) |>ChatEx_SetFakeName.Invoke \"},\"774\":{\"h\":\"ChatEx::SetEnd\",\"a\":\"chatex-setend\"},\"775\":{\"h\":\"设置玩家聊天消息后缀\",\"a\":\"设置玩家聊天消息后缀\"},\"776\":{\"t\":\"形参\"},\"777\":{\"t\":\"类型\"},\"778\":{\"t\":\"playerXuid\"},\"779\":{\"t\":\"string\"},\"780\":{\"t\":\"endStr\"},\"781\":{\"t\":\"string\"},\"782\":{\"t\":\"无返回值;\"},\"783\":{\"t\":\"JavaScript\"},\"784\":{\"t\":\"/** 设置玩家聊天消息后缀 */ const ChatEx_SetEnd = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"); ChatEx_SetEnd(playerXuid,endStr); \"},\"785\":{\"t\":\"C++\"},\"786\":{\"t\":\"// 设置玩家聊天消息后缀 auto ChatEx_SetEnd = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& endStr)>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"); ChatEx_SetEnd(playerXuid,endStr); \"},\"787\":{\"t\":\"C#\"},\"788\":{\"t\":\"// 设置玩家聊天消息后缀 var ChatEx_SetEnd = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"); ChatEx_SetEnd(playerXuid,endStr); \"},\"789\":{\"t\":\"Visual Basic .NET\"},\"790\":{\"t\":\"' 设置玩家聊天消息后缀 Dim ChatEx_SetEnd = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\") ChatEx_SetEnd(playerXuid,endStr) \"},\"791\":{\"t\":\"F#\"},\"792\":{\"t\":\"// 设置玩家聊天消息后缀 let ChatEx_SetEnd = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\") (playerXuid,endStr) |>ChatEx_SetEnd.Invoke \"},\"793\":{\"h\":\"ChatEx::SetStart\",\"a\":\"chatex-setstart\"},\"794\":{\"h\":\"设置玩家聊天消息前缀\",\"a\":\"设置玩家聊天消息前缀\"},\"795\":{\"t\":\"形参\"},\"796\":{\"t\":\"类型\"},\"797\":{\"t\":\"playerXuid\"},\"798\":{\"t\":\"string\"},\"799\":{\"t\":\"startStr\"},\"800\":{\"t\":\"string\"},\"801\":{\"t\":\"无返回值;\"},\"802\":{\"t\":\"JavaScript\"},\"803\":{\"t\":\"/** 设置玩家聊天消息前缀 */ const ChatEx_SetStart = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"); ChatEx_SetStart(playerXuid,startStr); \"},\"804\":{\"t\":\"C++\"},\"805\":{\"t\":\"// 设置玩家聊天消息前缀 auto ChatEx_SetStart = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& startStr)>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"); ChatEx_SetStart(playerXuid,startStr); \"},\"806\":{\"t\":\"C#\"},\"807\":{\"t\":\"// 设置玩家聊天消息前缀 var ChatEx_SetStart = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"); ChatEx_SetStart(playerXuid,startStr); \"},\"808\":{\"t\":\"Visual Basic .NET\"},\"809\":{\"t\":\"' 设置玩家聊天消息前缀 Dim ChatEx_SetStart = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\") ChatEx_SetStart(playerXuid,startStr) \"},\"810\":{\"t\":\"F#\"},\"811\":{\"t\":\"// 设置玩家聊天消息前缀 let ChatEx_SetStart = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\") (playerXuid,startStr) |>ChatEx_SetStart.Invoke \"},\"812\":{\"h\":\"ChatEx::GetNickName\",\"a\":\"chatex-getnickname\"},\"813\":{\"h\":\"获取玩家昵称\",\"a\":\"获取玩家昵称\"},\"814\":{\"t\":\"形参\"},\"815\":{\"t\":\"类型\"},\"816\":{\"t\":\"playerXuid\"},\"817\":{\"t\":\"string\"},\"818\":{\"t\":\"返回值类型：string;\"},\"819\":{\"t\":\"JavaScript\"},\"820\":{\"t\":\"/** 获取玩家昵称 返回值类型：string */ const ChatEx_GetNickName = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"); let result = ChatEx_GetNickName(playerXuid); \"},\"821\":{\"t\":\"C++\"},\"822\":{\"t\":\"// 获取玩家昵称 返回值类型：string auto ChatEx_GetNickName = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"); auto result = ChatEx_GetNickName(playerXuid); \"},\"823\":{\"t\":\"C#\"},\"824\":{\"t\":\"// 获取玩家昵称 返回值类型：string var ChatEx_GetNickName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"); var result = ChatEx_GetNickName(playerXuid); \"},\"825\":{\"t\":\"Visual Basic .NET\"},\"826\":{\"t\":\"' 获取玩家昵称 返回值类型：string Dim ChatEx_GetNickName = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\") Dim result = ChatEx_GetNickName(playerXuid) \"},\"827\":{\"t\":\"F#\"},\"828\":{\"t\":\"// 获取玩家昵称 返回值类型：string let ChatEx_GetNickName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\") playerXuid |>ChatEx_GetNickName.Invoke |>ignore \"},\"829\":{\"h\":\"ChatEx::GetFakeName\",\"a\":\"chatex-getfakename\"},\"830\":{\"h\":\"获取玩家聊天时的名字\",\"a\":\"获取玩家聊天时的名字\"},\"831\":{\"t\":\"形参\"},\"832\":{\"t\":\"类型\"},\"833\":{\"t\":\"playerXuid\"},\"834\":{\"t\":\"string\"},\"835\":{\"t\":\"返回值类型：string;\"},\"836\":{\"t\":\"JavaScript\"},\"837\":{\"t\":\"/** 获取玩家聊天时的名字 返回值类型：string */ const ChatEx_GetFakeName = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"); let result = ChatEx_GetFakeName(playerXuid); \"},\"838\":{\"t\":\"C++\"},\"839\":{\"t\":\"// 获取玩家聊天时的名字 返回值类型：string auto ChatEx_GetFakeName = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"); auto result = ChatEx_GetFakeName(playerXuid); \"},\"840\":{\"t\":\"C#\"},\"841\":{\"t\":\"// 获取玩家聊天时的名字 返回值类型：string var ChatEx_GetFakeName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"); var result = ChatEx_GetFakeName(playerXuid); \"},\"842\":{\"t\":\"Visual Basic .NET\"},\"843\":{\"t\":\"' 获取玩家聊天时的名字 返回值类型：string Dim ChatEx_GetFakeName = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\") Dim result = ChatEx_GetFakeName(playerXuid) \"},\"844\":{\"t\":\"F#\"},\"845\":{\"t\":\"// 获取玩家聊天时的名字 返回值类型：string let ChatEx_GetFakeName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\") playerXuid |>ChatEx_GetFakeName.Invoke |>ignore \"},\"846\":{\"h\":\"ChatEx::GetEnd\",\"a\":\"chatex-getend\"},\"847\":{\"h\":\"获取玩家聊天消息后缀\",\"a\":\"获取玩家聊天消息后缀\"},\"848\":{\"t\":\"形参\"},\"849\":{\"t\":\"类型\"},\"850\":{\"t\":\"playerXuid\"},\"851\":{\"t\":\"string\"},\"852\":{\"t\":\"返回值类型：string;\"},\"853\":{\"t\":\"JavaScript\"},\"854\":{\"t\":\"/** 获取玩家聊天消息后缀 返回值类型：string */ const ChatEx_GetEnd = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"); let result = ChatEx_GetEnd(playerXuid); \"},\"855\":{\"t\":\"C++\"},\"856\":{\"t\":\"// 获取玩家聊天消息后缀 返回值类型：string auto ChatEx_GetEnd = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"); auto result = ChatEx_GetEnd(playerXuid); \"},\"857\":{\"t\":\"C#\"},\"858\":{\"t\":\"// 获取玩家聊天消息后缀 返回值类型：string var ChatEx_GetEnd = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"); var result = ChatEx_GetEnd(playerXuid); \"},\"859\":{\"t\":\"Visual Basic .NET\"},\"860\":{\"t\":\"' 获取玩家聊天消息后缀 返回值类型：string Dim ChatEx_GetEnd = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\") Dim result = ChatEx_GetEnd(playerXuid) \"},\"861\":{\"t\":\"F#\"},\"862\":{\"t\":\"// 获取玩家聊天消息后缀 返回值类型：string let ChatEx_GetEnd = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\") playerXuid |>ChatEx_GetEnd.Invoke |>ignore \"},\"863\":{\"h\":\"ChatEx::GetStart\",\"a\":\"chatex-getstart\"},\"864\":{\"h\":\"获取玩家聊天消息前缀\",\"a\":\"获取玩家聊天消息前缀\"},\"865\":{\"t\":\"形参\"},\"866\":{\"t\":\"类型\"},\"867\":{\"t\":\"playerXuid\"},\"868\":{\"t\":\"string\"},\"869\":{\"t\":\"返回值类型：string;\"},\"870\":{\"t\":\"JavaScript\"},\"871\":{\"t\":\"/** 获取玩家聊天消息前缀 返回值类型：string */ const ChatEx_GetStart = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"); let result = ChatEx_GetStart(playerXuid); \"},\"872\":{\"t\":\"C++\"},\"873\":{\"t\":\"// 获取玩家聊天消息前缀 返回值类型：string auto ChatEx_GetStart = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"); auto result = ChatEx_GetStart(playerXuid); \"},\"874\":{\"t\":\"C#\"},\"875\":{\"t\":\"// 获取玩家聊天消息前缀 返回值类型：string var ChatEx_GetStart = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"); var result = ChatEx_GetStart(playerXuid); \"},\"876\":{\"t\":\"Visual Basic .NET\"},\"877\":{\"t\":\"' 获取玩家聊天消息前缀 返回值类型：string Dim ChatEx_GetStart = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\") Dim result = ChatEx_GetStart(playerXuid) \"},\"878\":{\"t\":\"F#\"},\"879\":{\"t\":\"// 获取玩家聊天消息前缀 返回值类型：string let ChatEx_GetStart = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\") playerXuid |>ChatEx_GetStart.Invoke |>ignore \"},\"880\":{\"h\":\"Command\"},\"881\":{\"h\":\"Command::RenameCommand\",\"a\":\"command-renamecommand\"},\"882\":{\"h\":\"重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令)\",\"a\":\"重命名命令-仅pflp插件的命令-暂不支持其他插件的命令-newcmd为空字符串则表示隐藏该cmd命令\"},\"883\":{\"t\":\"形参\"},\"884\":{\"t\":\"类型\"},\"885\":{\"t\":\"cmd\"},\"886\":{\"t\":\"string\"},\"887\":{\"t\":\"newCmd\"},\"888\":{\"t\":\"string\"},\"889\":{\"t\":\"无返回值;\"},\"890\":{\"t\":\"JavaScript\"},\"891\":{\"t\":\"/** 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) */ const Command_RenameCommand = ll.import(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"); Command_RenameCommand(cmd,newCmd); \"},\"892\":{\"t\":\"C++\"},\"893\":{\"t\":\"// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) auto Command_RenameCommand = RemoteCall::importAs<void(std::string const& cmd,std::string const& newCmd)>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"); Command_RenameCommand(cmd,newCmd); \"},\"894\":{\"t\":\"C#\"},\"895\":{\"t\":\"// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) var Command_RenameCommand = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"); Command_RenameCommand(cmd,newCmd); \"},\"896\":{\"t\":\"Visual Basic .NET\"},\"897\":{\"t\":\"' 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) Dim Command_RenameCommand = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Command::RenameCommand\\\") Command_RenameCommand(cmd,newCmd) \"},\"898\":{\"t\":\"F#\"},\"899\":{\"t\":\"// 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) let Command_RenameCommand = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\") (cmd,newCmd) |>Command_RenameCommand.Invoke \"},\"900\":{\"h\":\"Command::ExecuteInternalCommand\",\"a\":\"command-executeinternalcommand\"},\"901\":{\"h\":\"执行pflp内部命令(无视重命名,执行的是原始命令)\",\"a\":\"执行pflp内部命令-无视重命名-执行的是原始命令\"},\"902\":{\"t\":\"形参\"},\"903\":{\"t\":\"类型\"},\"904\":{\"t\":\"playerXuid\"},\"905\":{\"t\":\"string\"},\"906\":{\"t\":\"cmd\"},\"907\":{\"t\":\"string\"},\"908\":{\"t\":\"返回值类型：bool;\"},\"909\":{\"t\":\"JavaScript\"},\"910\":{\"t\":\"/** 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool */ const Command_ExecuteInternalCommand = ll.import(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"); let result = Command_ExecuteInternalCommand(playerXuid,cmd); \"},\"911\":{\"t\":\"C++\"},\"912\":{\"t\":\"// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool auto Command_ExecuteInternalCommand = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& cmd)>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"); auto result = Command_ExecuteInternalCommand(playerXuid,cmd); \"},\"913\":{\"t\":\"C#\"},\"914\":{\"t\":\"// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool var Command_ExecuteInternalCommand = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"); var result = Command_ExecuteInternalCommand(playerXuid,cmd); \"},\"915\":{\"t\":\"Visual Basic .NET\"},\"916\":{\"t\":\"' 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool Dim Command_ExecuteInternalCommand = RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\") Dim result = Command_ExecuteInternalCommand(playerXuid,cmd) \"},\"917\":{\"t\":\"F#\"},\"918\":{\"t\":\"// 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool let Command_ExecuteInternalCommand = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\") (playerXuid,cmd) |>Command_ExecuteInternalCommand.Invoke |>ignore \"},\"919\":{\"h\":\"Command::SetCommandDisabled\",\"a\":\"command-setcommanddisabled\"},\"920\":{\"h\":\"设置命令禁用(可设置提示)(支持任意命令)\",\"a\":\"设置命令禁用-可设置提示-支持任意命令\"},\"921\":{\"t\":\"形参\"},\"922\":{\"t\":\"类型\"},\"923\":{\"t\":\"playerXuid\"},\"924\":{\"t\":\"string\"},\"925\":{\"t\":\"cmd\"},\"926\":{\"t\":\"string\"},\"927\":{\"t\":\"feedback\"},\"928\":{\"t\":\"string\"},\"929\":{\"t\":\"无返回值;\"},\"930\":{\"t\":\"JavaScript\"},\"931\":{\"t\":\"/** 设置命令禁用(可设置提示)(支持任意命令) */ const Command_SetCommandDisabled = ll.import(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"); Command_SetCommandDisabled(playerXuid,cmd,feedback); \"},\"932\":{\"t\":\"C++\"},\"933\":{\"t\":\"// 设置命令禁用(可设置提示)(支持任意命令) auto Command_SetCommandDisabled = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& cmd,std::string const& feedback)>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"); Command_SetCommandDisabled(playerXuid,cmd,feedback); \"},\"934\":{\"t\":\"C#\"},\"935\":{\"t\":\"// 设置命令禁用(可设置提示)(支持任意命令) var Command_SetCommandDisabled = RemoteCallAPI.ImportAs<Action<string,string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"); Command_SetCommandDisabled(playerXuid,cmd,feedback); \"},\"936\":{\"t\":\"Visual Basic .NET\"},\"937\":{\"t\":\"' 设置命令禁用(可设置提示)(支持任意命令) Dim Command_SetCommandDisabled = RemoteCallAPI.ImportAs(Of Action(Of String,String,String))(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\") Command_SetCommandDisabled(playerXuid,cmd,feedback) \"},\"938\":{\"t\":\"F#\"},\"939\":{\"t\":\"// 设置命令禁用(可设置提示)(支持任意命令) let Command_SetCommandDisabled = RemoteCallAPI.ImportAs<Action<string,string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\") (playerXuid,cmd,feedback) |>Command_SetCommandDisabled.Invoke \"},\"940\":{\"h\":\"Command::SetCommandEnabled\",\"a\":\"command-setcommandenabled\"},\"941\":{\"h\":\"设置命令启用\",\"a\":\"设置命令启用\"},\"942\":{\"t\":\"形参\"},\"943\":{\"t\":\"类型\"},\"944\":{\"t\":\"playerXuid\"},\"945\":{\"t\":\"string\"},\"946\":{\"t\":\"cmd\"},\"947\":{\"t\":\"string\"},\"948\":{\"t\":\"无返回值;\"},\"949\":{\"t\":\"JavaScript\"},\"950\":{\"t\":\"/** 设置命令启用 */ const Command_SetCommandEnabled = ll.import(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"); Command_SetCommandEnabled(playerXuid,cmd); \"},\"951\":{\"t\":\"C++\"},\"952\":{\"t\":\"// 设置命令启用 auto Command_SetCommandEnabled = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& cmd)>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"); Command_SetCommandEnabled(playerXuid,cmd); \"},\"953\":{\"t\":\"C#\"},\"954\":{\"t\":\"// 设置命令启用 var Command_SetCommandEnabled = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"); Command_SetCommandEnabled(playerXuid,cmd); \"},\"955\":{\"t\":\"Visual Basic .NET\"},\"956\":{\"t\":\"' 设置命令启用 Dim Command_SetCommandEnabled = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\") Command_SetCommandEnabled(playerXuid,cmd) \"},\"957\":{\"t\":\"F#\"},\"958\":{\"t\":\"// 设置命令启用 let Command_SetCommandEnabled = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\") (playerXuid,cmd) |>Command_SetCommandEnabled.Invoke \"},\"959\":{\"h\":\"FloatText\"},\"960\":{\"h\":\"FloatText::Add\",\"a\":\"floattext-add\"},\"961\":{\"h\":\"创建浮空字(给玩家发包)\",\"a\":\"创建浮空字-给玩家发包\"},\"962\":{\"t\":\"形参\"},\"963\":{\"t\":\"类型\"},\"964\":{\"t\":\"playerXuid\"},\"965\":{\"t\":\"string\"},\"966\":{\"t\":\"x\"},\"967\":{\"t\":\"float\"},\"968\":{\"t\":\"y\"},\"969\":{\"t\":\"float\"},\"970\":{\"t\":\"z\"},\"971\":{\"t\":\"float\"},\"972\":{\"t\":\"text\"},\"973\":{\"t\":\"string\"},\"974\":{\"t\":\"返回值类型：int;\"},\"975\":{\"t\":\"JavaScript\"},\"976\":{\"t\":\"/** 创建浮空字(给玩家发包) 返回值类型：int */ const FloatText_Add = ll.import(\\\"PFLP\\\", \\\"FloatText::Add\\\"); let result = FloatText_Add(playerXuid,x,y,z,text); \"},\"977\":{\"t\":\"C++\"},\"978\":{\"t\":\"// 创建浮空字(给玩家发包) 返回值类型：int auto FloatText_Add = RemoteCall::importAs<int(std::string const& playerXuid,float const& x,float const& y,float const& z,std::string const& text)>(\\\"PFLP\\\", \\\"FloatText::Add\\\"); auto result = FloatText_Add(playerXuid,x,y,z,text); \"},\"979\":{\"t\":\"C#\"},\"980\":{\"t\":\"// 创建浮空字(给玩家发包) 返回值类型：int var FloatText_Add = RemoteCallAPI.ImportAs<Func<string,float,float,float,string,int>>(\\\"PFLP\\\", \\\"FloatText::Add\\\"); var result = FloatText_Add(playerXuid,x,y,z,text); \"},\"981\":{\"t\":\"Visual Basic .NET\"},\"982\":{\"t\":\"' 创建浮空字(给玩家发包) 返回值类型：int Dim FloatText_Add = RemoteCallAPI.ImportAs(Of Func(Of String,Single,Single,Single,String,Integer))(\\\"PFLP\\\", \\\"FloatText::Add\\\") Dim result = FloatText_Add(playerXuid,x,y,z,text) \"},\"983\":{\"t\":\"F#\"},\"984\":{\"t\":\"// 创建浮空字(给玩家发包) 返回值类型：int let FloatText_Add = RemoteCallAPI.ImportAs<Func<string,float,float,float,string,int>>(\\\"PFLP\\\", \\\"FloatText::Add\\\") (playerXuid,x,y,z,text) |>FloatText_Add.Invoke |>ignore \"},\"985\":{\"h\":\"FloatText::Remove\",\"a\":\"floattext-remove\"},\"986\":{\"h\":\"移除浮空字(给玩家发包)\",\"a\":\"移除浮空字-给玩家发包\"},\"987\":{\"t\":\"形参\"},\"988\":{\"t\":\"类型\"},\"989\":{\"t\":\"playerXuid\"},\"990\":{\"t\":\"string\"},\"991\":{\"t\":\"id\"},\"992\":{\"t\":\"int\"},\"993\":{\"t\":\"无返回值;\"},\"994\":{\"t\":\"JavaScript\"},\"995\":{\"t\":\"/** 移除浮空字(给玩家发包) */ const FloatText_Remove = ll.import(\\\"PFLP\\\", \\\"FloatText::Remove\\\"); FloatText_Remove(playerXuid,id); \"},\"996\":{\"t\":\"C++\"},\"997\":{\"t\":\"// 移除浮空字(给玩家发包) auto FloatText_Remove = RemoteCall::importAs<void(std::string const& playerXuid,int const& id)>(\\\"PFLP\\\", \\\"FloatText::Remove\\\"); FloatText_Remove(playerXuid,id); \"},\"998\":{\"t\":\"C#\"},\"999\":{\"t\":\"// 移除浮空字(给玩家发包) var FloatText_Remove = RemoteCallAPI.ImportAs<Action<string,int>>(\\\"PFLP\\\", \\\"FloatText::Remove\\\"); FloatText_Remove(playerXuid,id); \"},\"1000\":{\"t\":\"Visual Basic .NET\"},\"1001\":{\"t\":\"' 移除浮空字(给玩家发包) Dim FloatText_Remove = RemoteCallAPI.ImportAs(Of Action(Of String,Integer))(\\\"PFLP\\\", \\\"FloatText::Remove\\\") FloatText_Remove(playerXuid,id) \"},\"1002\":{\"t\":\"F#\"},\"1003\":{\"t\":\"// 移除浮空字(给玩家发包) let FloatText_Remove = RemoteCallAPI.ImportAs<Action<string,int>>(\\\"PFLP\\\", \\\"FloatText::Remove\\\") (playerXuid,id) |>FloatText_Remove.Invoke \"},\"1004\":{\"h\":\"Format\"},\"1005\":{\"h\":\"Format::GetVariableString\",\"a\":\"format-getvariablestring\"},\"1006\":{\"h\":\"获取变量\",\"a\":\"获取变量\"},\"1007\":{\"t\":\"形参\"},\"1008\":{\"t\":\"类型\"},\"1009\":{\"t\":\"playerXuid\"},\"1010\":{\"t\":\"string\"},\"1011\":{\"t\":\"name\"},\"1012\":{\"t\":\"string\"},\"1013\":{\"t\":\"format\"},\"1014\":{\"t\":\"string\"},\"1015\":{\"t\":\"返回值类型：string;\"},\"1016\":{\"t\":\"JavaScript\"},\"1017\":{\"t\":\"/** 获取变量 返回值类型：string */ const Format_GetVariableString = ll.import(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"); let result = Format_GetVariableString(playerXuid,name,format); \"},\"1018\":{\"t\":\"C++\"},\"1019\":{\"t\":\"// 获取变量 返回值类型：string auto Format_GetVariableString = RemoteCall::importAs<std::string(std::string const& playerXuid,std::string const& name,std::string const& format)>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"); auto result = Format_GetVariableString(playerXuid,name,format); \"},\"1020\":{\"t\":\"C#\"},\"1021\":{\"t\":\"// 获取变量 返回值类型：string var Format_GetVariableString = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"); var result = Format_GetVariableString(playerXuid,name,format); \"},\"1022\":{\"t\":\"Visual Basic .NET\"},\"1023\":{\"t\":\"' 获取变量 返回值类型：string Dim Format_GetVariableString = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetVariableString\\\") Dim result = Format_GetVariableString(playerXuid,name,format) \"},\"1024\":{\"t\":\"F#\"},\"1025\":{\"t\":\"// 获取变量 返回值类型：string let Format_GetVariableString = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\") (playerXuid,name,format) |>Format_GetVariableString.Invoke |>ignore \"},\"1026\":{\"h\":\"Format::GetVariableInt\",\"a\":\"format-getvariableint\"},\"1027\":{\"h\":\"获取变量，但是强制返回int类型\",\"a\":\"获取变量-但是强制返回int类型\"},\"1028\":{\"t\":\"形参\"},\"1029\":{\"t\":\"类型\"},\"1030\":{\"t\":\"playerXuid\"},\"1031\":{\"t\":\"string\"},\"1032\":{\"t\":\"name\"},\"1033\":{\"t\":\"string\"},\"1034\":{\"t\":\"返回值类型：int;\"},\"1035\":{\"t\":\"JavaScript\"},\"1036\":{\"t\":\"/** 获取变量，但是强制返回int类型 返回值类型：int */ const Format_GetVariableInt = ll.import(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"); let result = Format_GetVariableInt(playerXuid,name); \"},\"1037\":{\"t\":\"C++\"},\"1038\":{\"t\":\"// 获取变量，但是强制返回int类型 返回值类型：int auto Format_GetVariableInt = RemoteCall::importAs<int(std::string const& playerXuid,std::string const& name)>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"); auto result = Format_GetVariableInt(playerXuid,name); \"},\"1039\":{\"t\":\"C#\"},\"1040\":{\"t\":\"// 获取变量，但是强制返回int类型 返回值类型：int var Format_GetVariableInt = RemoteCallAPI.ImportAs<Func<string,string,int>>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"); var result = Format_GetVariableInt(playerXuid,name); \"},\"1041\":{\"t\":\"Visual Basic .NET\"},\"1042\":{\"t\":\"' 获取变量，但是强制返回int类型 返回值类型：int Dim Format_GetVariableInt = RemoteCallAPI.ImportAs(Of Func(Of String,String,Integer))(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\") Dim result = Format_GetVariableInt(playerXuid,name) \"},\"1043\":{\"t\":\"F#\"},\"1044\":{\"t\":\"// 获取变量，但是强制返回int类型 返回值类型：int let Format_GetVariableInt = RemoteCallAPI.ImportAs<Func<string,string,int>>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\") (playerXuid,name) |>Format_GetVariableInt.Invoke |>ignore \"},\"1045\":{\"h\":\"Format::GetVariableFloat\",\"a\":\"format-getvariablefloat\"},\"1046\":{\"h\":\"获取变量，但是强制返回float类型\",\"a\":\"获取变量-但是强制返回float类型\"},\"1047\":{\"t\":\"形参\"},\"1048\":{\"t\":\"类型\"},\"1049\":{\"t\":\"playerXuid\"},\"1050\":{\"t\":\"string\"},\"1051\":{\"t\":\"name\"},\"1052\":{\"t\":\"string\"},\"1053\":{\"t\":\"返回值类型：float;\"},\"1054\":{\"t\":\"JavaScript\"},\"1055\":{\"t\":\"/** 获取变量，但是强制返回float类型 返回值类型：float */ const Format_GetVariableFloat = ll.import(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"); let result = Format_GetVariableFloat(playerXuid,name); \"},\"1056\":{\"t\":\"C++\"},\"1057\":{\"t\":\"// 获取变量，但是强制返回float类型 返回值类型：float auto Format_GetVariableFloat = RemoteCall::importAs<float(std::string const& playerXuid,std::string const& name)>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"); auto result = Format_GetVariableFloat(playerXuid,name); \"},\"1058\":{\"t\":\"C#\"},\"1059\":{\"t\":\"// 获取变量，但是强制返回float类型 返回值类型：float var Format_GetVariableFloat = RemoteCallAPI.ImportAs<Func<string,string,float>>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"); var result = Format_GetVariableFloat(playerXuid,name); \"},\"1060\":{\"t\":\"Visual Basic .NET\"},\"1061\":{\"t\":\"' 获取变量，但是强制返回float类型 返回值类型：float Dim Format_GetVariableFloat = RemoteCallAPI.ImportAs(Of Func(Of String,String,Single))(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\") Dim result = Format_GetVariableFloat(playerXuid,name) \"},\"1062\":{\"t\":\"F#\"},\"1063\":{\"t\":\"// 获取变量，但是强制返回float类型 返回值类型：float let Format_GetVariableFloat = RemoteCallAPI.ImportAs<Func<string,string,float>>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\") (playerXuid,name) |>Format_GetVariableFloat.Invoke |>ignore \"},\"1064\":{\"h\":\"Format::FormatRawString\",\"a\":\"format-formatrawstring\"},\"1065\":{\"h\":\"格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat)\",\"a\":\"格式化字符串-反复调用会导致反复解析-推荐使用defineformat和getformat\"},\"1066\":{\"t\":\"形参\"},\"1067\":{\"t\":\"类型\"},\"1068\":{\"t\":\"playerXuid\"},\"1069\":{\"t\":\"string\"},\"1070\":{\"t\":\"rawFormat\"},\"1071\":{\"t\":\"string\"},\"1072\":{\"t\":\"返回值类型：string;\"},\"1073\":{\"t\":\"JavaScript\"},\"1074\":{\"t\":\"/** 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string */ const Format_FormatRawString = ll.import(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"); let result = Format_FormatRawString(playerXuid,rawFormat); \"},\"1075\":{\"t\":\"C++\"},\"1076\":{\"t\":\"// 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string auto Format_FormatRawString = RemoteCall::importAs<std::string(std::string const& playerXuid,std::string const& rawFormat)>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"); auto result = Format_FormatRawString(playerXuid,rawFormat); \"},\"1077\":{\"t\":\"C#\"},\"1078\":{\"t\":\"// 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string var Format_FormatRawString = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"); var result = Format_FormatRawString(playerXuid,rawFormat); \"},\"1079\":{\"t\":\"Visual Basic .NET\"},\"1080\":{\"t\":\"' 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string Dim Format_FormatRawString = RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Format::FormatRawString\\\") Dim result = Format_FormatRawString(playerXuid,rawFormat) \"},\"1081\":{\"t\":\"F#\"},\"1082\":{\"t\":\"// 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string let Format_FormatRawString = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\") (playerXuid,rawFormat) |>Format_FormatRawString.Invoke |>ignore \"},\"1083\":{\"h\":\"Format::DefineFormat\",\"a\":\"format-defineformat\"},\"1084\":{\"h\":\"定义格式化内容（返回true为创建成功，false为覆盖）\",\"a\":\"定义格式化内容-返回true为创建成功-false为覆盖\"},\"1085\":{\"t\":\"形参\"},\"1086\":{\"t\":\"类型\"},\"1087\":{\"t\":\"id\"},\"1088\":{\"t\":\"string\"},\"1089\":{\"t\":\"rawFormat\"},\"1090\":{\"t\":\"string\"},\"1091\":{\"t\":\"返回值类型：bool;\"},\"1092\":{\"t\":\"JavaScript\"},\"1093\":{\"t\":\"/** 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool */ const Format_DefineFormat = ll.import(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"); let result = Format_DefineFormat(id,rawFormat); \"},\"1094\":{\"t\":\"C++\"},\"1095\":{\"t\":\"// 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool auto Format_DefineFormat = RemoteCall::importAs<bool(std::string const& id,std::string const& rawFormat)>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"); auto result = Format_DefineFormat(id,rawFormat); \"},\"1096\":{\"t\":\"C#\"},\"1097\":{\"t\":\"// 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool var Format_DefineFormat = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"); var result = Format_DefineFormat(id,rawFormat); \"},\"1098\":{\"t\":\"Visual Basic .NET\"},\"1099\":{\"t\":\"' 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool Dim Format_DefineFormat = RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Format::DefineFormat\\\") Dim result = Format_DefineFormat(id,rawFormat) \"},\"1100\":{\"t\":\"F#\"},\"1101\":{\"t\":\"// 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool let Format_DefineFormat = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\") (id,rawFormat) |>Format_DefineFormat.Invoke |>ignore \"},\"1102\":{\"h\":\"Format::RemoveFormat\",\"a\":\"format-removeformat\"},\"1103\":{\"h\":\"移除格式化定义（返回true为存在并移除）\",\"a\":\"移除格式化定义-返回true为存在并移除\"},\"1104\":{\"t\":\"形参\"},\"1105\":{\"t\":\"类型\"},\"1106\":{\"t\":\"id\"},\"1107\":{\"t\":\"string\"},\"1108\":{\"t\":\"返回值类型：bool;\"},\"1109\":{\"t\":\"JavaScript\"},\"1110\":{\"t\":\"/** 移除格式化定义（返回true为存在并移除） 返回值类型：bool */ const Format_RemoveFormat = ll.import(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"); let result = Format_RemoveFormat(id); \"},\"1111\":{\"t\":\"C++\"},\"1112\":{\"t\":\"// 移除格式化定义（返回true为存在并移除） 返回值类型：bool auto Format_RemoveFormat = RemoteCall::importAs<bool(std::string const& id)>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"); auto result = Format_RemoveFormat(id); \"},\"1113\":{\"t\":\"C#\"},\"1114\":{\"t\":\"// 移除格式化定义（返回true为存在并移除） 返回值类型：bool var Format_RemoveFormat = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"); var result = Format_RemoveFormat(id); \"},\"1115\":{\"t\":\"Visual Basic .NET\"},\"1116\":{\"t\":\"' 移除格式化定义（返回true为存在并移除） 返回值类型：bool Dim Format_RemoveFormat = RemoteCallAPI.ImportAs(Of Func(Of String,Boolean))(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\") Dim result = Format_RemoveFormat(id) \"},\"1117\":{\"t\":\"F#\"},\"1118\":{\"t\":\"// 移除格式化定义（返回true为存在并移除） 返回值类型：bool let Format_RemoveFormat = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\") id |>Format_RemoveFormat.Invoke |>ignore \"},\"1119\":{\"h\":\"Format::GetFormatWithPlayer\",\"a\":\"format-getformatwithplayer\"},\"1120\":{\"h\":\"通过已定义的ID获取格式化内容（性能更优）\",\"a\":\"通过已定义的id获取格式化内容-性能更优\"},\"1121\":{\"t\":\"形参\"},\"1122\":{\"t\":\"类型\"},\"1123\":{\"t\":\"id\"},\"1124\":{\"t\":\"string\"},\"1125\":{\"t\":\"playerXuid\"},\"1126\":{\"t\":\"string\"},\"1127\":{\"t\":\"extra\"},\"1128\":{\"t\":\"string\"},\"1129\":{\"t\":\"返回值类型：string;\"},\"1130\":{\"t\":\"JavaScript\"},\"1131\":{\"t\":\"/** 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string */ const Format_GetFormatWithPlayer = ll.import(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"); let result = Format_GetFormatWithPlayer(id,playerXuid,extra); \"},\"1132\":{\"t\":\"C++\"},\"1133\":{\"t\":\"// 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string auto Format_GetFormatWithPlayer = RemoteCall::importAs<std::string(std::string const& id,std::string const& playerXuid,std::string const& extra)>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"); auto result = Format_GetFormatWithPlayer(id,playerXuid,extra); \"},\"1134\":{\"t\":\"C#\"},\"1135\":{\"t\":\"// 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string var Format_GetFormatWithPlayer = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"); var result = Format_GetFormatWithPlayer(id,playerXuid,extra); \"},\"1136\":{\"t\":\"Visual Basic .NET\"},\"1137\":{\"t\":\"' 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string Dim Format_GetFormatWithPlayer = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\") Dim result = Format_GetFormatWithPlayer(id,playerXuid,extra) \"},\"1138\":{\"t\":\"F#\"},\"1139\":{\"t\":\"// 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string let Format_GetFormatWithPlayer = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\") (id,playerXuid,extra) |>Format_GetFormatWithPlayer.Invoke |>ignore \"},\"1140\":{\"h\":\"Format::GetFormatWithPlayerLang\",\"a\":\"format-getformatwithplayerlang\"},\"1141\":{\"h\":\"通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取）\",\"a\":\"通过已定义的id获取格式化内容-其中playerxuid为玩家上下文-playerlangxuid用于格式化的语言获取\"},\"1142\":{\"t\":\"形参\"},\"1143\":{\"t\":\"类型\"},\"1144\":{\"t\":\"id\"},\"1145\":{\"t\":\"string\"},\"1146\":{\"t\":\"playerXuid\"},\"1147\":{\"t\":\"string\"},\"1148\":{\"t\":\"playerLangXuid\"},\"1149\":{\"t\":\"string\"},\"1150\":{\"t\":\"extra\"},\"1151\":{\"t\":\"string\"},\"1152\":{\"t\":\"返回值类型：string;\"},\"1153\":{\"t\":\"JavaScript\"},\"1154\":{\"t\":\"/** 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string */ const Format_GetFormatWithPlayerLang = ll.import(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"); let result = Format_GetFormatWithPlayerLang(id,playerXuid,playerLangXuid,extra); \"},\"1155\":{\"t\":\"C++\"},\"1156\":{\"t\":\"// 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string auto Format_GetFormatWithPlayerLang = RemoteCall::importAs<std::string(std::string const& id,std::string const& playerXuid,std::string const& playerLangXuid,std::string const& extra)>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"); auto result = Format_GetFormatWithPlayerLang(id,playerXuid,playerLangXuid,extra); \"},\"1157\":{\"t\":\"C#\"},\"1158\":{\"t\":\"// 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string var Format_GetFormatWithPlayerLang = RemoteCallAPI.ImportAs<Func<string,string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"); var result = Format_GetFormatWithPlayerLang(id,playerXuid,playerLangXuid,extra); \"},\"1159\":{\"t\":\"Visual Basic .NET\"},\"1160\":{\"t\":\"' 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string Dim Format_GetFormatWithPlayerLang = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\") Dim result = Format_GetFormatWithPlayerLang(id,playerXuid,playerLangXuid,extra) \"},\"1161\":{\"t\":\"F#\"},\"1162\":{\"t\":\"// 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string let Format_GetFormatWithPlayerLang = RemoteCallAPI.ImportAs<Func<string,string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\") (id,playerXuid,playerLangXuid,extra) |>Format_GetFormatWithPlayerLang.Invoke |>ignore \"},\"1163\":{\"h\":\"Format::GetFormat\",\"a\":\"format-getformat\"},\"1164\":{\"h\":\"通过已定义的ID获取格式化内容（不包含玩家上下文）\",\"a\":\"通过已定义的id获取格式化内容-不包含玩家上下文\"},\"1165\":{\"t\":\"形参\"},\"1166\":{\"t\":\"类型\"},\"1167\":{\"t\":\"id\"},\"1168\":{\"t\":\"string\"},\"1169\":{\"t\":\"extra\"},\"1170\":{\"t\":\"string\"},\"1171\":{\"t\":\"返回值类型：string;\"},\"1172\":{\"t\":\"JavaScript\"},\"1173\":{\"t\":\"/** 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string */ const Format_GetFormat = ll.import(\\\"PFLP\\\", \\\"Format::GetFormat\\\"); let result = Format_GetFormat(id,extra); \"},\"1174\":{\"t\":\"C++\"},\"1175\":{\"t\":\"// 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string auto Format_GetFormat = RemoteCall::importAs<std::string(std::string const& id,std::string const& extra)>(\\\"PFLP\\\", \\\"Format::GetFormat\\\"); auto result = Format_GetFormat(id,extra); \"},\"1176\":{\"t\":\"C#\"},\"1177\":{\"t\":\"// 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string var Format_GetFormat = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormat\\\"); var result = Format_GetFormat(id,extra); \"},\"1178\":{\"t\":\"Visual Basic .NET\"},\"1179\":{\"t\":\"' 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string Dim Format_GetFormat = RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormat\\\") Dim result = Format_GetFormat(id,extra) \"},\"1180\":{\"t\":\"F#\"},\"1181\":{\"t\":\"// 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string let Format_GetFormat = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormat\\\") (id,extra) |>Format_GetFormat.Invoke |>ignore \"},\"1182\":{\"h\":\"General\"},\"1183\":{\"h\":\"General::SetConfig\",\"a\":\"general-setconfig\"},\"1184\":{\"h\":\"设置全局配置文件（要求JSON字符串）\",\"a\":\"设置全局配置文件-要求json字符串\"},\"1185\":{\"t\":\"形参\"},\"1186\":{\"t\":\"类型\"},\"1187\":{\"t\":\"jsonStr\"},\"1188\":{\"t\":\"string\"},\"1189\":{\"t\":\"返回值类型：bool;\"},\"1190\":{\"t\":\"JavaScript\"},\"1191\":{\"t\":\"/** 设置全局配置文件（要求JSON字符串） 返回值类型：bool */ const General_SetConfig = ll.import(\\\"PFLP\\\", \\\"General::SetConfig\\\"); let result = General_SetConfig(jsonStr); \"},\"1192\":{\"t\":\"C++\"},\"1193\":{\"t\":\"// 设置全局配置文件（要求JSON字符串） 返回值类型：bool auto General_SetConfig = RemoteCall::importAs<bool(std::string const& jsonStr)>(\\\"PFLP\\\", \\\"General::SetConfig\\\"); auto result = General_SetConfig(jsonStr); \"},\"1194\":{\"t\":\"C#\"},\"1195\":{\"t\":\"// 设置全局配置文件（要求JSON字符串） 返回值类型：bool var General_SetConfig = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"General::SetConfig\\\"); var result = General_SetConfig(jsonStr); \"},\"1196\":{\"t\":\"Visual Basic .NET\"},\"1197\":{\"t\":\"' 设置全局配置文件（要求JSON字符串） 返回值类型：bool Dim General_SetConfig = RemoteCallAPI.ImportAs(Of Func(Of String,Boolean))(\\\"PFLP\\\", \\\"General::SetConfig\\\") Dim result = General_SetConfig(jsonStr) \"},\"1198\":{\"t\":\"F#\"},\"1199\":{\"t\":\"// 设置全局配置文件（要求JSON字符串） 返回值类型：bool let General_SetConfig = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"General::SetConfig\\\") jsonStr |>General_SetConfig.Invoke |>ignore \"},\"1200\":{\"h\":\"General::GetConfig\",\"a\":\"general-getconfig\"},\"1201\":{\"h\":\"获取全局配置文件（JSON字符串）\",\"a\":\"获取全局配置文件-json字符串\"},\"1202\":{\"t\":\"无参数;\"},\"1203\":{\"t\":\"返回值类型：string;\"},\"1204\":{\"t\":\"JavaScript\"},\"1205\":{\"t\":\"/** 获取全局配置文件（JSON字符串） 返回值类型：string */ const General_GetConfig = ll.import(\\\"PFLP\\\", \\\"General::GetConfig\\\"); let result = General_GetConfig(); \"},\"1206\":{\"t\":\"C++\"},\"1207\":{\"t\":\"// 获取全局配置文件（JSON字符串） 返回值类型：string auto General_GetConfig = RemoteCall::importAs<std::string()>(\\\"PFLP\\\", \\\"General::GetConfig\\\"); auto result = General_GetConfig(); \"},\"1208\":{\"t\":\"C#\"},\"1209\":{\"t\":\"// 获取全局配置文件（JSON字符串） 返回值类型：string var General_GetConfig = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"General::GetConfig\\\"); var result = General_GetConfig(); \"},\"1210\":{\"t\":\"Visual Basic .NET\"},\"1211\":{\"t\":\"' 获取全局配置文件（JSON字符串） 返回值类型：string Dim General_GetConfig = RemoteCallAPI.ImportAs(Of Func(Of String))(\\\"PFLP\\\", \\\"General::GetConfig\\\") Dim result = General_GetConfig() \"},\"1212\":{\"t\":\"F#\"},\"1213\":{\"t\":\"// 获取全局配置文件（JSON字符串） 返回值类型：string let General_GetConfig = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"General::GetConfig\\\") General_GetConfig() |>ignore \"},\"1214\":{\"h\":\"General::Reload\",\"a\":\"general-reload\"},\"1215\":{\"h\":\"重新加载所有功能的配置文件\",\"a\":\"重新加载所有功能的配置文件\"},\"1216\":{\"t\":\"无参数;\"},\"1217\":{\"t\":\"无返回值;\"},\"1218\":{\"t\":\"JavaScript\"},\"1219\":{\"t\":\"/** 重新加载所有功能的配置文件 */ const General_Reload = ll.import(\\\"PFLP\\\", \\\"General::Reload\\\"); General_Reload(); \"},\"1220\":{\"t\":\"C++\"},\"1221\":{\"t\":\"// 重新加载所有功能的配置文件 auto General_Reload = RemoteCall::importAs<void()>(\\\"PFLP\\\", \\\"General::Reload\\\"); General_Reload(); \"},\"1222\":{\"t\":\"C#\"},\"1223\":{\"t\":\"// 重新加载所有功能的配置文件 var General_Reload = RemoteCallAPI.ImportAs<Action>(\\\"PFLP\\\", \\\"General::Reload\\\"); General_Reload(); \"},\"1224\":{\"t\":\"Visual Basic .NET\"},\"1225\":{\"t\":\"' 重新加载所有功能的配置文件 Dim General_Reload = RemoteCallAPI.ImportAs(Of Action)(\\\"PFLP\\\", \\\"General::Reload\\\") General_Reload() \"},\"1226\":{\"t\":\"F#\"},\"1227\":{\"t\":\"// 重新加载所有功能的配置文件 let General_Reload = RemoteCallAPI.ImportAs<Action>(\\\"PFLP\\\", \\\"General::Reload\\\") General_Reload() \"},\"1228\":{\"h\":\"Internal\"},\"1229\":{\"h\":\"Internal::CheatPunish\",\"a\":\"internal-cheatpunish\"},\"1230\":{\"h\":\"作弊反馈（LLAntiCheat用）\",\"a\":\"作弊反馈-llanticheat用\"},\"1231\":{\"t\":\"形参\"},\"1232\":{\"t\":\"类型\"},\"1233\":{\"t\":\"PunishLevel\"},\"1234\":{\"t\":\"int\"},\"1235\":{\"t\":\"PunishReason\"},\"1236\":{\"t\":\"int\"},\"1237\":{\"t\":\"playerXuid\"},\"1238\":{\"t\":\"Player\"},\"1239\":{\"t\":\"CheatCount\"},\"1240\":{\"t\":\"int\"},\"1241\":{\"t\":\"返回值类型：bool;\"},\"1242\":{\"t\":\"JavaScript\"},\"1243\":{\"t\":\"/** 作弊反馈（LLAntiCheat用） 返回值类型：bool */ const Internal_CheatPunish = ll.import(\\\"PFLP\\\", \\\"Internal::CheatPunish\\\"); let result = Internal_CheatPunish(PunishLevel,PunishReason,playerXuid,CheatCount); \"},\"1244\":{\"h\":\"Lands\"},\"1245\":{\"h\":\"Lands::CheckCubeHasLand\",\"a\":\"lands-checkcubehasland\"},\"1246\":{\"h\":\"检查指定立方体区域(float)是否有领地\",\"a\":\"检查指定立方体区域-float-是否有领地\"},\"1247\":{\"t\":\"形参\"},\"1248\":{\"t\":\"类型\"},\"1249\":{\"t\":\"x1\"},\"1250\":{\"t\":\"float\"},\"1251\":{\"t\":\"y1\"},\"1252\":{\"t\":\"float\"},\"1253\":{\"t\":\"z1\"},\"1254\":{\"t\":\"float\"},\"1255\":{\"t\":\"x2\"},\"1256\":{\"t\":\"float\"},\"1257\":{\"t\":\"y2\"},\"1258\":{\"t\":\"float\"},\"1259\":{\"t\":\"z2\"},\"1260\":{\"t\":\"float\"},\"1261\":{\"t\":\"dimensionId\"},\"1262\":{\"t\":\"int\"},\"1263\":{\"t\":\"返回值类型：bool;\"},\"1264\":{\"t\":\"JavaScript\"},\"1265\":{\"t\":\"/** 检查指定立方体区域(float)是否有领地 返回值类型：bool */ const Lands_CheckCubeHasLand = ll.import(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"); let result = Lands_CheckCubeHasLand(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1266\":{\"t\":\"C++\"},\"1267\":{\"t\":\"// 检查指定立方体区域(float)是否有领地 返回值类型：bool auto Lands_CheckCubeHasLand = RemoteCall::importAs<bool(float const& x1,float const& y1,float const& z1,float const& x2,float const& y2,float const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"); auto result = Lands_CheckCubeHasLand(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1268\":{\"t\":\"C#\"},\"1269\":{\"t\":\"// 检查指定立方体区域(float)是否有领地 返回值类型：bool var Lands_CheckCubeHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"); var result = Lands_CheckCubeHasLand(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1270\":{\"t\":\"Visual Basic .NET\"},\"1271\":{\"t\":\"' 检查指定立方体区域(float)是否有领地 返回值类型：bool Dim Lands_CheckCubeHasLand = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\") Dim result = Lands_CheckCubeHasLand(x1,y1,z1,x2,y2,z2,dimensionId) \"},\"1272\":{\"t\":\"F#\"},\"1273\":{\"t\":\"// 检查指定立方体区域(float)是否有领地 返回值类型：bool let Lands_CheckCubeHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\") (x1,y1,z1,x2,y2,z2,dimensionId) |>Lands_CheckCubeHasLand.Invoke |>ignore \"},\"1274\":{\"h\":\"Lands::CheckCubeHasLandInt\",\"a\":\"lands-checkcubehaslandint\"},\"1275\":{\"h\":\"检查指定立方体区域(int)是否有领地\",\"a\":\"检查指定立方体区域-int-是否有领地\"},\"1276\":{\"t\":\"形参\"},\"1277\":{\"t\":\"类型\"},\"1278\":{\"t\":\"x1\"},\"1279\":{\"t\":\"int\"},\"1280\":{\"t\":\"y1\"},\"1281\":{\"t\":\"int\"},\"1282\":{\"t\":\"z1\"},\"1283\":{\"t\":\"int\"},\"1284\":{\"t\":\"x2\"},\"1285\":{\"t\":\"int\"},\"1286\":{\"t\":\"y2\"},\"1287\":{\"t\":\"int\"},\"1288\":{\"t\":\"z2\"},\"1289\":{\"t\":\"int\"},\"1290\":{\"t\":\"dimensionId\"},\"1291\":{\"t\":\"int\"},\"1292\":{\"t\":\"返回值类型：bool;\"},\"1293\":{\"t\":\"JavaScript\"},\"1294\":{\"t\":\"/** 检查指定立方体区域(int)是否有领地 返回值类型：bool */ const Lands_CheckCubeHasLandInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"); let result = Lands_CheckCubeHasLandInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1295\":{\"t\":\"C++\"},\"1296\":{\"t\":\"// 检查指定立方体区域(int)是否有领地 返回值类型：bool auto Lands_CheckCubeHasLandInt = RemoteCall::importAs<bool(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"); auto result = Lands_CheckCubeHasLandInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1297\":{\"t\":\"C#\"},\"1298\":{\"t\":\"// 检查指定立方体区域(int)是否有领地 返回值类型：bool var Lands_CheckCubeHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"); var result = Lands_CheckCubeHasLandInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1299\":{\"t\":\"Visual Basic .NET\"},\"1300\":{\"t\":\"' 检查指定立方体区域(int)是否有领地 返回值类型：bool Dim Lands_CheckCubeHasLandInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\") Dim result = Lands_CheckCubeHasLandInt(x1,y1,z1,x2,y2,z2,dimensionId) \"},\"1301\":{\"t\":\"F#\"},\"1302\":{\"t\":\"// 检查指定立方体区域(int)是否有领地 返回值类型：bool let Lands_CheckCubeHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\") (x1,y1,z1,x2,y2,z2,dimensionId) |>Lands_CheckCubeHasLandInt.Invoke |>ignore \"},\"1303\":{\"h\":\"Lands::CheckPosHasLand\",\"a\":\"lands-checkposhasland\"},\"1304\":{\"h\":\"检查指定坐标(float)是否有领地\",\"a\":\"检查指定坐标-float-是否有领地\"},\"1305\":{\"t\":\"形参\"},\"1306\":{\"t\":\"类型\"},\"1307\":{\"t\":\"x\"},\"1308\":{\"t\":\"float\"},\"1309\":{\"t\":\"y\"},\"1310\":{\"t\":\"float\"},\"1311\":{\"t\":\"z\"},\"1312\":{\"t\":\"float\"},\"1313\":{\"t\":\"dimensionId\"},\"1314\":{\"t\":\"int\"},\"1315\":{\"t\":\"返回值类型：bool;\"},\"1316\":{\"t\":\"JavaScript\"},\"1317\":{\"t\":\"/** 检查指定坐标(float)是否有领地 返回值类型：bool */ const Lands_CheckPosHasLand = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"); let result = Lands_CheckPosHasLand(x,y,z,dimensionId); \"},\"1318\":{\"t\":\"C++\"},\"1319\":{\"t\":\"// 检查指定坐标(float)是否有领地 返回值类型：bool auto Lands_CheckPosHasLand = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"); auto result = Lands_CheckPosHasLand(x,y,z,dimensionId); \"},\"1320\":{\"t\":\"C#\"},\"1321\":{\"t\":\"// 检查指定坐标(float)是否有领地 返回值类型：bool var Lands_CheckPosHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"); var result = Lands_CheckPosHasLand(x,y,z,dimensionId); \"},\"1322\":{\"t\":\"Visual Basic .NET\"},\"1323\":{\"t\":\"' 检查指定坐标(float)是否有领地 返回值类型：bool Dim Lands_CheckPosHasLand = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\") Dim result = Lands_CheckPosHasLand(x,y,z,dimensionId) \"},\"1324\":{\"t\":\"F#\"},\"1325\":{\"t\":\"// 检查指定坐标(float)是否有领地 返回值类型：bool let Lands_CheckPosHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\") (x,y,z,dimensionId) |>Lands_CheckPosHasLand.Invoke |>ignore \"},\"1326\":{\"h\":\"Lands::CheckPosHasLandInt\",\"a\":\"lands-checkposhaslandint\"},\"1327\":{\"h\":\"检查指定坐标(int)是否有领地\",\"a\":\"检查指定坐标-int-是否有领地\"},\"1328\":{\"t\":\"形参\"},\"1329\":{\"t\":\"类型\"},\"1330\":{\"t\":\"x\"},\"1331\":{\"t\":\"int\"},\"1332\":{\"t\":\"y\"},\"1333\":{\"t\":\"int\"},\"1334\":{\"t\":\"z\"},\"1335\":{\"t\":\"int\"},\"1336\":{\"t\":\"dimensionId\"},\"1337\":{\"t\":\"int\"},\"1338\":{\"t\":\"返回值类型：bool;\"},\"1339\":{\"t\":\"JavaScript\"},\"1340\":{\"t\":\"/** 检查指定坐标(int)是否有领地 返回值类型：bool */ const Lands_CheckPosHasLandInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"); let result = Lands_CheckPosHasLandInt(x,y,z,dimensionId); \"},\"1341\":{\"t\":\"C++\"},\"1342\":{\"t\":\"// 检查指定坐标(int)是否有领地 返回值类型：bool auto Lands_CheckPosHasLandInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"); auto result = Lands_CheckPosHasLandInt(x,y,z,dimensionId); \"},\"1343\":{\"t\":\"C#\"},\"1344\":{\"t\":\"// 检查指定坐标(int)是否有领地 返回值类型：bool var Lands_CheckPosHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"); var result = Lands_CheckPosHasLandInt(x,y,z,dimensionId); \"},\"1345\":{\"t\":\"Visual Basic .NET\"},\"1346\":{\"t\":\"' 检查指定坐标(int)是否有领地 返回值类型：bool Dim Lands_CheckPosHasLandInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\") Dim result = Lands_CheckPosHasLandInt(x,y,z,dimensionId) \"},\"1347\":{\"t\":\"F#\"},\"1348\":{\"t\":\"// 检查指定坐标(int)是否有领地 返回值类型：bool let Lands_CheckPosHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\") (x,y,z,dimensionId) |>Lands_CheckPosHasLandInt.Invoke |>ignore \"},\"1349\":{\"h\":\"Lands::GetLandByCube\",\"a\":\"lands-getlandbycube\"},\"1350\":{\"h\":\"获取立方体区域(float)领地信息（返回JSON字符串）\",\"a\":\"获取立方体区域-float-领地信息-返回json字符串\"},\"1351\":{\"t\":\"形参\"},\"1352\":{\"t\":\"类型\"},\"1353\":{\"t\":\"x1\"},\"1354\":{\"t\":\"float\"},\"1355\":{\"t\":\"y1\"},\"1356\":{\"t\":\"float\"},\"1357\":{\"t\":\"z1\"},\"1358\":{\"t\":\"float\"},\"1359\":{\"t\":\"x2\"},\"1360\":{\"t\":\"float\"},\"1361\":{\"t\":\"y2\"},\"1362\":{\"t\":\"float\"},\"1363\":{\"t\":\"z2\"},\"1364\":{\"t\":\"float\"},\"1365\":{\"t\":\"dimensionId\"},\"1366\":{\"t\":\"int\"},\"1367\":{\"t\":\"返回值类型：string;\"},\"1368\":{\"t\":\"JavaScript\"},\"1369\":{\"t\":\"/** 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByCube = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"); let result = Lands_GetLandByCube(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1370\":{\"t\":\"C++\"},\"1371\":{\"t\":\"// 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByCube = RemoteCall::importAs<std::string(float const& x1,float const& y1,float const& z1,float const& x2,float const& y2,float const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"); auto result = Lands_GetLandByCube(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1372\":{\"t\":\"C#\"},\"1373\":{\"t\":\"// 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"); var result = Lands_GetLandByCube(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1374\":{\"t\":\"Visual Basic .NET\"},\"1375\":{\"t\":\"' 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByCube = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\") Dim result = Lands_GetLandByCube(x1,y1,z1,x2,y2,z2,dimensionId) \"},\"1376\":{\"t\":\"F#\"},\"1377\":{\"t\":\"// 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\") (x1,y1,z1,x2,y2,z2,dimensionId) |>Lands_GetLandByCube.Invoke |>ignore \"},\"1378\":{\"h\":\"Lands::GetLandByCubeInt\",\"a\":\"lands-getlandbycubeint\"},\"1379\":{\"h\":\"获取立方体区域(int)领地信息（返回JSON字符串）\",\"a\":\"获取立方体区域-int-领地信息-返回json字符串\"},\"1380\":{\"t\":\"形参\"},\"1381\":{\"t\":\"类型\"},\"1382\":{\"t\":\"x1\"},\"1383\":{\"t\":\"int\"},\"1384\":{\"t\":\"y1\"},\"1385\":{\"t\":\"int\"},\"1386\":{\"t\":\"z1\"},\"1387\":{\"t\":\"int\"},\"1388\":{\"t\":\"x2\"},\"1389\":{\"t\":\"int\"},\"1390\":{\"t\":\"y2\"},\"1391\":{\"t\":\"int\"},\"1392\":{\"t\":\"z2\"},\"1393\":{\"t\":\"int\"},\"1394\":{\"t\":\"dimensionId\"},\"1395\":{\"t\":\"int\"},\"1396\":{\"t\":\"返回值类型：string;\"},\"1397\":{\"t\":\"JavaScript\"},\"1398\":{\"t\":\"/** 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByCubeInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"); let result = Lands_GetLandByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1399\":{\"t\":\"C++\"},\"1400\":{\"t\":\"// 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByCubeInt = RemoteCall::importAs<std::string(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"); auto result = Lands_GetLandByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1401\":{\"t\":\"C#\"},\"1402\":{\"t\":\"// 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"); var result = Lands_GetLandByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1403\":{\"t\":\"Visual Basic .NET\"},\"1404\":{\"t\":\"' 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByCubeInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\") Dim result = Lands_GetLandByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId) \"},\"1405\":{\"t\":\"F#\"},\"1406\":{\"t\":\"// 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\") (x1,y1,z1,x2,y2,z2,dimensionId) |>Lands_GetLandByCubeInt.Invoke |>ignore \"},\"1407\":{\"h\":\"Lands::GetLandByPos\",\"a\":\"lands-getlandbypos\"},\"1408\":{\"h\":\"获取指定坐标(float)领地信息（返回JSON字符串）\",\"a\":\"获取指定坐标-float-领地信息-返回json字符串\"},\"1409\":{\"t\":\"形参\"},\"1410\":{\"t\":\"类型\"},\"1411\":{\"t\":\"x\"},\"1412\":{\"t\":\"float\"},\"1413\":{\"t\":\"y\"},\"1414\":{\"t\":\"float\"},\"1415\":{\"t\":\"z\"},\"1416\":{\"t\":\"float\"},\"1417\":{\"t\":\"dimensionId\"},\"1418\":{\"t\":\"int\"},\"1419\":{\"t\":\"返回值类型：string;\"},\"1420\":{\"t\":\"JavaScript\"},\"1421\":{\"t\":\"/** 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByPos = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"); let result = Lands_GetLandByPos(x,y,z,dimensionId); \"},\"1422\":{\"t\":\"C++\"},\"1423\":{\"t\":\"// 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByPos = RemoteCall::importAs<std::string(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"); auto result = Lands_GetLandByPos(x,y,z,dimensionId); \"},\"1424\":{\"t\":\"C#\"},\"1425\":{\"t\":\"// 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"); var result = Lands_GetLandByPos(x,y,z,dimensionId); \"},\"1426\":{\"t\":\"Visual Basic .NET\"},\"1427\":{\"t\":\"' 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\") Dim result = Lands_GetLandByPos(x,y,z,dimensionId) \"},\"1428\":{\"t\":\"F#\"},\"1429\":{\"t\":\"// 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\") (x,y,z,dimensionId) |>Lands_GetLandByPos.Invoke |>ignore \"},\"1430\":{\"h\":\"Lands::GetLandByPosInt\",\"a\":\"lands-getlandbyposint\"},\"1431\":{\"h\":\"获取指定坐标(int)领地信息（返回JSON字符串）\",\"a\":\"获取指定坐标-int-领地信息-返回json字符串\"},\"1432\":{\"t\":\"形参\"},\"1433\":{\"t\":\"类型\"},\"1434\":{\"t\":\"x\"},\"1435\":{\"t\":\"int\"},\"1436\":{\"t\":\"y\"},\"1437\":{\"t\":\"int\"},\"1438\":{\"t\":\"z\"},\"1439\":{\"t\":\"int\"},\"1440\":{\"t\":\"dimensionId\"},\"1441\":{\"t\":\"int\"},\"1442\":{\"t\":\"返回值类型：string;\"},\"1443\":{\"t\":\"JavaScript\"},\"1444\":{\"t\":\"/** 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"); let result = Lands_GetLandByPosInt(x,y,z,dimensionId); \"},\"1445\":{\"t\":\"C++\"},\"1446\":{\"t\":\"// 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByPosInt = RemoteCall::importAs<std::string(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"); auto result = Lands_GetLandByPosInt(x,y,z,dimensionId); \"},\"1447\":{\"t\":\"C#\"},\"1448\":{\"t\":\"// 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"); var result = Lands_GetLandByPosInt(x,y,z,dimensionId); \"},\"1449\":{\"t\":\"Visual Basic .NET\"},\"1450\":{\"t\":\"' 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\") Dim result = Lands_GetLandByPosInt(x,y,z,dimensionId) \"},\"1451\":{\"t\":\"F#\"},\"1452\":{\"t\":\"// 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\") (x,y,z,dimensionId) |>Lands_GetLandByPosInt.Invoke |>ignore \"},\"1453\":{\"h\":\"Lands::GetLandInfoByCube\",\"a\":\"lands-getlandinfobycube\"},\"1454\":{\"h\":\"获取立方体区域(float)领地数据源详细信息（返回JSON字符串）\",\"a\":\"获取立方体区域-float-领地数据源详细信息-返回json字符串\"},\"1455\":{\"t\":\"形参\"},\"1456\":{\"t\":\"类型\"},\"1457\":{\"t\":\"x1\"},\"1458\":{\"t\":\"float\"},\"1459\":{\"t\":\"y1\"},\"1460\":{\"t\":\"float\"},\"1461\":{\"t\":\"z1\"},\"1462\":{\"t\":\"float\"},\"1463\":{\"t\":\"x2\"},\"1464\":{\"t\":\"float\"},\"1465\":{\"t\":\"y2\"},\"1466\":{\"t\":\"float\"},\"1467\":{\"t\":\"z2\"},\"1468\":{\"t\":\"float\"},\"1469\":{\"t\":\"dimensionId\"},\"1470\":{\"t\":\"int\"},\"1471\":{\"t\":\"返回值类型：string;\"},\"1472\":{\"t\":\"JavaScript\"},\"1473\":{\"t\":\"/** 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByCube = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"); let result = Lands_GetLandInfoByCube(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1474\":{\"t\":\"C++\"},\"1475\":{\"t\":\"// 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByCube = RemoteCall::importAs<std::string(float const& x1,float const& y1,float const& z1,float const& x2,float const& y2,float const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"); auto result = Lands_GetLandInfoByCube(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1476\":{\"t\":\"C#\"},\"1477\":{\"t\":\"// 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"); var result = Lands_GetLandInfoByCube(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1478\":{\"t\":\"Visual Basic .NET\"},\"1479\":{\"t\":\"' 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByCube = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\") Dim result = Lands_GetLandInfoByCube(x1,y1,z1,x2,y2,z2,dimensionId) \"},\"1480\":{\"t\":\"F#\"},\"1481\":{\"t\":\"// 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\") (x1,y1,z1,x2,y2,z2,dimensionId) |>Lands_GetLandInfoByCube.Invoke |>ignore \"},\"1482\":{\"h\":\"Lands::GetLandInfoByCubeInt\",\"a\":\"lands-getlandinfobycubeint\"},\"1483\":{\"h\":\"获取立方体区域(int)领地数据源详细信息（返回JSON字符串）\",\"a\":\"获取立方体区域-int-领地数据源详细信息-返回json字符串\"},\"1484\":{\"t\":\"形参\"},\"1485\":{\"t\":\"类型\"},\"1486\":{\"t\":\"x1\"},\"1487\":{\"t\":\"int\"},\"1488\":{\"t\":\"y1\"},\"1489\":{\"t\":\"int\"},\"1490\":{\"t\":\"z1\"},\"1491\":{\"t\":\"int\"},\"1492\":{\"t\":\"x2\"},\"1493\":{\"t\":\"int\"},\"1494\":{\"t\":\"y2\"},\"1495\":{\"t\":\"int\"},\"1496\":{\"t\":\"z2\"},\"1497\":{\"t\":\"int\"},\"1498\":{\"t\":\"dimensionId\"},\"1499\":{\"t\":\"int\"},\"1500\":{\"t\":\"返回值类型：string;\"},\"1501\":{\"t\":\"JavaScript\"},\"1502\":{\"t\":\"/** 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByCubeInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"); let result = Lands_GetLandInfoByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1503\":{\"t\":\"C++\"},\"1504\":{\"t\":\"// 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByCubeInt = RemoteCall::importAs<std::string(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"); auto result = Lands_GetLandInfoByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1505\":{\"t\":\"C#\"},\"1506\":{\"t\":\"// 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"); var result = Lands_GetLandInfoByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId); \"},\"1507\":{\"t\":\"Visual Basic .NET\"},\"1508\":{\"t\":\"' 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByCubeInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\") Dim result = Lands_GetLandInfoByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId) \"},\"1509\":{\"t\":\"F#\"},\"1510\":{\"t\":\"// 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\") (x1,y1,z1,x2,y2,z2,dimensionId) |>Lands_GetLandInfoByCubeInt.Invoke |>ignore \"},\"1511\":{\"h\":\"Lands::GetLandInfoByPos\",\"a\":\"lands-getlandinfobypos\"},\"1512\":{\"h\":\"获取指定坐标(float)领地数据源详细信息（返回JSON字符串）\",\"a\":\"获取指定坐标-float-领地数据源详细信息-返回json字符串\"},\"1513\":{\"t\":\"形参\"},\"1514\":{\"t\":\"类型\"},\"1515\":{\"t\":\"x\"},\"1516\":{\"t\":\"float\"},\"1517\":{\"t\":\"y\"},\"1518\":{\"t\":\"float\"},\"1519\":{\"t\":\"z\"},\"1520\":{\"t\":\"float\"},\"1521\":{\"t\":\"dimensionId\"},\"1522\":{\"t\":\"int\"},\"1523\":{\"t\":\"返回值类型：string;\"},\"1524\":{\"t\":\"JavaScript\"},\"1525\":{\"t\":\"/** 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByPos = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"); let result = Lands_GetLandInfoByPos(x,y,z,dimensionId); \"},\"1526\":{\"t\":\"C++\"},\"1527\":{\"t\":\"// 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByPos = RemoteCall::importAs<std::string(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"); auto result = Lands_GetLandInfoByPos(x,y,z,dimensionId); \"},\"1528\":{\"t\":\"C#\"},\"1529\":{\"t\":\"// 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"); var result = Lands_GetLandInfoByPos(x,y,z,dimensionId); \"},\"1530\":{\"t\":\"Visual Basic .NET\"},\"1531\":{\"t\":\"' 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\") Dim result = Lands_GetLandInfoByPos(x,y,z,dimensionId) \"},\"1532\":{\"t\":\"F#\"},\"1533\":{\"t\":\"// 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\") (x,y,z,dimensionId) |>Lands_GetLandInfoByPos.Invoke |>ignore \"},\"1534\":{\"h\":\"Lands::GetLandInfoByPosInt\",\"a\":\"lands-getlandinfobyposint\"},\"1535\":{\"h\":\"获取指定坐标(int)领地数据源详细信息（返回JSON字符串）\",\"a\":\"获取指定坐标-int-领地数据源详细信息-返回json字符串\"},\"1536\":{\"t\":\"形参\"},\"1537\":{\"t\":\"类型\"},\"1538\":{\"t\":\"x\"},\"1539\":{\"t\":\"int\"},\"1540\":{\"t\":\"y\"},\"1541\":{\"t\":\"int\"},\"1542\":{\"t\":\"z\"},\"1543\":{\"t\":\"int\"},\"1544\":{\"t\":\"dimensionId\"},\"1545\":{\"t\":\"int\"},\"1546\":{\"t\":\"返回值类型：string;\"},\"1547\":{\"t\":\"JavaScript\"},\"1548\":{\"t\":\"/** 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"); let result = Lands_GetLandInfoByPosInt(x,y,z,dimensionId); \"},\"1549\":{\"t\":\"C++\"},\"1550\":{\"t\":\"// 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByPosInt = RemoteCall::importAs<std::string(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"); auto result = Lands_GetLandInfoByPosInt(x,y,z,dimensionId); \"},\"1551\":{\"t\":\"C#\"},\"1552\":{\"t\":\"// 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"); var result = Lands_GetLandInfoByPosInt(x,y,z,dimensionId); \"},\"1553\":{\"t\":\"Visual Basic .NET\"},\"1554\":{\"t\":\"' 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\") Dim result = Lands_GetLandInfoByPosInt(x,y,z,dimensionId) \"},\"1555\":{\"t\":\"F#\"},\"1556\":{\"t\":\"// 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\") (x,y,z,dimensionId) |>Lands_GetLandInfoByPosInt.Invoke |>ignore \"},\"1557\":{\"h\":\"Lands::SetLandInfoByPos\",\"a\":\"lands-setlandinfobypos\"},\"1558\":{\"h\":\"设置指定坐标(float)领地数据源详细信息（传入JSON字符串）\",\"a\":\"设置指定坐标-float-领地数据源详细信息-传入json字符串\"},\"1559\":{\"t\":\"形参\"},\"1560\":{\"t\":\"类型\"},\"1561\":{\"t\":\"x\"},\"1562\":{\"t\":\"float\"},\"1563\":{\"t\":\"y\"},\"1564\":{\"t\":\"float\"},\"1565\":{\"t\":\"z\"},\"1566\":{\"t\":\"float\"},\"1567\":{\"t\":\"dimensionId\"},\"1568\":{\"t\":\"int\"},\"1569\":{\"t\":\"landinfo\"},\"1570\":{\"t\":\"string\"},\"1571\":{\"t\":\"返回值类型：bool;\"},\"1572\":{\"t\":\"JavaScript\"},\"1573\":{\"t\":\"/** 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool */ const Lands_SetLandInfoByPos = ll.import(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"); let result = Lands_SetLandInfoByPos(x,y,z,dimensionId,landinfo); \"},\"1574\":{\"t\":\"C++\"},\"1575\":{\"t\":\"// 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool auto Lands_SetLandInfoByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& landinfo)>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"); auto result = Lands_SetLandInfoByPos(x,y,z,dimensionId,landinfo); \"},\"1576\":{\"t\":\"C#\"},\"1577\":{\"t\":\"// 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool var Lands_SetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"); var result = Lands_SetLandInfoByPos(x,y,z,dimensionId,landinfo); \"},\"1578\":{\"t\":\"Visual Basic .NET\"},\"1579\":{\"t\":\"' 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool Dim Lands_SetLandInfoByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\") Dim result = Lands_SetLandInfoByPos(x,y,z,dimensionId,landinfo) \"},\"1580\":{\"t\":\"F#\"},\"1581\":{\"t\":\"// 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool let Lands_SetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\") (x,y,z,dimensionId,landinfo) |>Lands_SetLandInfoByPos.Invoke |>ignore \"},\"1582\":{\"h\":\"Lands::SetLandInfoByPosInt\",\"a\":\"lands-setlandinfobyposint\"},\"1583\":{\"h\":\"设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串）\",\"a\":\"设置或修改指定坐标-int-领地数据源详细信息-传入json字符串\"},\"1584\":{\"t\":\"形参\"},\"1585\":{\"t\":\"类型\"},\"1586\":{\"t\":\"x\"},\"1587\":{\"t\":\"int\"},\"1588\":{\"t\":\"y\"},\"1589\":{\"t\":\"int\"},\"1590\":{\"t\":\"z\"},\"1591\":{\"t\":\"int\"},\"1592\":{\"t\":\"dimensionId\"},\"1593\":{\"t\":\"int\"},\"1594\":{\"t\":\"landinfo\"},\"1595\":{\"t\":\"string\"},\"1596\":{\"t\":\"返回值类型：bool;\"},\"1597\":{\"t\":\"JavaScript\"},\"1598\":{\"t\":\"/** 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool */ const Lands_SetLandInfoByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"); let result = Lands_SetLandInfoByPosInt(x,y,z,dimensionId,landinfo); \"},\"1599\":{\"t\":\"C++\"},\"1600\":{\"t\":\"// 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool auto Lands_SetLandInfoByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& landinfo)>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"); auto result = Lands_SetLandInfoByPosInt(x,y,z,dimensionId,landinfo); \"},\"1601\":{\"t\":\"C#\"},\"1602\":{\"t\":\"// 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool var Lands_SetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"); var result = Lands_SetLandInfoByPosInt(x,y,z,dimensionId,landinfo); \"},\"1603\":{\"t\":\"Visual Basic .NET\"},\"1604\":{\"t\":\"' 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool Dim Lands_SetLandInfoByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\") Dim result = Lands_SetLandInfoByPosInt(x,y,z,dimensionId,landinfo) \"},\"1605\":{\"t\":\"F#\"},\"1606\":{\"t\":\"// 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool let Lands_SetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\") (x,y,z,dimensionId,landinfo) |>Lands_SetLandInfoByPosInt.Invoke |>ignore \"},\"1607\":{\"h\":\"Lands::CreateLand2D\",\"a\":\"lands-createland2d\"},\"1608\":{\"h\":\"新建领地\",\"a\":\"新建领地\"},\"1609\":{\"t\":\"形参\"},\"1610\":{\"t\":\"类型\"},\"1611\":{\"t\":\"x1\"},\"1612\":{\"t\":\"int\"},\"1613\":{\"t\":\"z1\"},\"1614\":{\"t\":\"int\"},\"1615\":{\"t\":\"x2\"},\"1616\":{\"t\":\"int\"},\"1617\":{\"t\":\"z2\"},\"1618\":{\"t\":\"int\"},\"1619\":{\"t\":\"dimensionId\"},\"1620\":{\"t\":\"int\"},\"1621\":{\"t\":\"playerXuid\"},\"1622\":{\"t\":\"string\"},\"1623\":{\"t\":\"返回值类型：bool;\"},\"1624\":{\"t\":\"JavaScript\"},\"1625\":{\"t\":\"/** 新建领地 返回值类型：bool */ const Lands_CreateLand2D = ll.import(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"); let result = Lands_CreateLand2D(x1,z1,x2,z2,dimensionId,playerXuid); \"},\"1626\":{\"t\":\"C++\"},\"1627\":{\"t\":\"// 新建领地 返回值类型：bool auto Lands_CreateLand2D = RemoteCall::importAs<bool(int const& x1,int const& z1,int const& x2,int const& z2,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"); auto result = Lands_CreateLand2D(x1,z1,x2,z2,dimensionId,playerXuid); \"},\"1628\":{\"t\":\"C#\"},\"1629\":{\"t\":\"// 新建领地 返回值类型：bool var Lands_CreateLand2D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"); var result = Lands_CreateLand2D(x1,z1,x2,z2,dimensionId,playerXuid); \"},\"1630\":{\"t\":\"Visual Basic .NET\"},\"1631\":{\"t\":\"' 新建领地 返回值类型：bool Dim Lands_CreateLand2D = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\") Dim result = Lands_CreateLand2D(x1,z1,x2,z2,dimensionId,playerXuid) \"},\"1632\":{\"t\":\"F#\"},\"1633\":{\"t\":\"// 新建领地 返回值类型：bool let Lands_CreateLand2D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\") (x1,z1,x2,z2,dimensionId,playerXuid) |>Lands_CreateLand2D.Invoke |>ignore \"},\"1634\":{\"h\":\"Lands::CreateLand3D\",\"a\":\"lands-createland3d\"},\"1635\":{\"h\":\"新建领地\",\"a\":\"新建领地-1\"},\"1636\":{\"t\":\"形参\"},\"1637\":{\"t\":\"类型\"},\"1638\":{\"t\":\"x1\"},\"1639\":{\"t\":\"int\"},\"1640\":{\"t\":\"y1\"},\"1641\":{\"t\":\"int\"},\"1642\":{\"t\":\"z1\"},\"1643\":{\"t\":\"int\"},\"1644\":{\"t\":\"x2\"},\"1645\":{\"t\":\"int\"},\"1646\":{\"t\":\"y2\"},\"1647\":{\"t\":\"int\"},\"1648\":{\"t\":\"z2\"},\"1649\":{\"t\":\"int\"},\"1650\":{\"t\":\"dimensionId\"},\"1651\":{\"t\":\"int\"},\"1652\":{\"t\":\"playerXuid\"},\"1653\":{\"t\":\"string\"},\"1654\":{\"t\":\"返回值类型：bool;\"},\"1655\":{\"t\":\"JavaScript\"},\"1656\":{\"t\":\"/** 新建领地 返回值类型：bool */ const Lands_CreateLand3D = ll.import(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"); let result = Lands_CreateLand3D(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid); \"},\"1657\":{\"t\":\"C++\"},\"1658\":{\"t\":\"// 新建领地 返回值类型：bool auto Lands_CreateLand3D = RemoteCall::importAs<bool(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"); auto result = Lands_CreateLand3D(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid); \"},\"1659\":{\"t\":\"C#\"},\"1660\":{\"t\":\"// 新建领地 返回值类型：bool var Lands_CreateLand3D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"); var result = Lands_CreateLand3D(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid); \"},\"1661\":{\"t\":\"Visual Basic .NET\"},\"1662\":{\"t\":\"' 新建领地 返回值类型：bool Dim Lands_CreateLand3D = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\") Dim result = Lands_CreateLand3D(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid) \"},\"1663\":{\"t\":\"F#\"},\"1664\":{\"t\":\"// 新建领地 返回值类型：bool let Lands_CreateLand3D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\") (x1,y1,z1,x2,y2,z2,dimensionId,playerXuid) |>Lands_CreateLand3D.Invoke |>ignore \"},\"1665\":{\"h\":\"Lands::DeleteLandByPos\",\"a\":\"lands-deletelandbypos\"},\"1666\":{\"h\":\"删除指定坐标(float)的领地\",\"a\":\"删除指定坐标-float-的领地\"},\"1667\":{\"t\":\"形参\"},\"1668\":{\"t\":\"类型\"},\"1669\":{\"t\":\"x\"},\"1670\":{\"t\":\"float\"},\"1671\":{\"t\":\"y\"},\"1672\":{\"t\":\"float\"},\"1673\":{\"t\":\"z\"},\"1674\":{\"t\":\"float\"},\"1675\":{\"t\":\"dimensionId\"},\"1676\":{\"t\":\"int\"},\"1677\":{\"t\":\"返回值类型：bool;\"},\"1678\":{\"t\":\"JavaScript\"},\"1679\":{\"t\":\"/** 删除指定坐标(float)的领地 返回值类型：bool */ const Lands_DeleteLandByPos = ll.import(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"); let result = Lands_DeleteLandByPos(x,y,z,dimensionId); \"},\"1680\":{\"t\":\"C++\"},\"1681\":{\"t\":\"// 删除指定坐标(float)的领地 返回值类型：bool auto Lands_DeleteLandByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"); auto result = Lands_DeleteLandByPos(x,y,z,dimensionId); \"},\"1682\":{\"t\":\"C#\"},\"1683\":{\"t\":\"// 删除指定坐标(float)的领地 返回值类型：bool var Lands_DeleteLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"); var result = Lands_DeleteLandByPos(x,y,z,dimensionId); \"},\"1684\":{\"t\":\"Visual Basic .NET\"},\"1685\":{\"t\":\"' 删除指定坐标(float)的领地 返回值类型：bool Dim Lands_DeleteLandByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\") Dim result = Lands_DeleteLandByPos(x,y,z,dimensionId) \"},\"1686\":{\"t\":\"F#\"},\"1687\":{\"t\":\"// 删除指定坐标(float)的领地 返回值类型：bool let Lands_DeleteLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\") (x,y,z,dimensionId) |>Lands_DeleteLandByPos.Invoke |>ignore \"},\"1688\":{\"h\":\"Lands::DeleteLandByPosInt\",\"a\":\"lands-deletelandbyposint\"},\"1689\":{\"h\":\"删除指定坐标(int)的领地\",\"a\":\"删除指定坐标-int-的领地\"},\"1690\":{\"t\":\"形参\"},\"1691\":{\"t\":\"类型\"},\"1692\":{\"t\":\"x\"},\"1693\":{\"t\":\"int\"},\"1694\":{\"t\":\"y\"},\"1695\":{\"t\":\"int\"},\"1696\":{\"t\":\"z\"},\"1697\":{\"t\":\"int\"},\"1698\":{\"t\":\"dimensionId\"},\"1699\":{\"t\":\"int\"},\"1700\":{\"t\":\"返回值类型：bool;\"},\"1701\":{\"t\":\"JavaScript\"},\"1702\":{\"t\":\"/** 删除指定坐标(int)的领地 返回值类型：bool */ const Lands_DeleteLandByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"); let result = Lands_DeleteLandByPosInt(x,y,z,dimensionId); \"},\"1703\":{\"t\":\"C++\"},\"1704\":{\"t\":\"// 删除指定坐标(int)的领地 返回值类型：bool auto Lands_DeleteLandByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"); auto result = Lands_DeleteLandByPosInt(x,y,z,dimensionId); \"},\"1705\":{\"t\":\"C#\"},\"1706\":{\"t\":\"// 删除指定坐标(int)的领地 返回值类型：bool var Lands_DeleteLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"); var result = Lands_DeleteLandByPosInt(x,y,z,dimensionId); \"},\"1707\":{\"t\":\"Visual Basic .NET\"},\"1708\":{\"t\":\"' 删除指定坐标(int)的领地 返回值类型：bool Dim Lands_DeleteLandByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\") Dim result = Lands_DeleteLandByPosInt(x,y,z,dimensionId) \"},\"1709\":{\"t\":\"F#\"},\"1710\":{\"t\":\"// 删除指定坐标(int)的领地 返回值类型：bool let Lands_DeleteLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\") (x,y,z,dimensionId) |>Lands_DeleteLandByPosInt.Invoke |>ignore \"},\"1711\":{\"h\":\"Lands::GetLandPermissionByPos\",\"a\":\"lands-getlandpermissionbypos\"},\"1712\":{\"h\":\"获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串）\",\"a\":\"获取指定坐标-float-领地权限-返回json字符串字典-key-boolean-可指定玩家否则playerxuid填写空字符串\"},\"1713\":{\"t\":\"形参\"},\"1714\":{\"t\":\"类型\"},\"1715\":{\"t\":\"x\"},\"1716\":{\"t\":\"float\"},\"1717\":{\"t\":\"y\"},\"1718\":{\"t\":\"float\"},\"1719\":{\"t\":\"z\"},\"1720\":{\"t\":\"float\"},\"1721\":{\"t\":\"dimensionId\"},\"1722\":{\"t\":\"int\"},\"1723\":{\"t\":\"playerXuid\"},\"1724\":{\"t\":\"string\"},\"1725\":{\"t\":\"返回值类型：string;\"},\"1726\":{\"t\":\"JavaScript\"},\"1727\":{\"t\":\"/** 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string */ const Lands_GetLandPermissionByPos = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"); let result = Lands_GetLandPermissionByPos(x,y,z,dimensionId,playerXuid); \"},\"1728\":{\"t\":\"C++\"},\"1729\":{\"t\":\"// 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string auto Lands_GetLandPermissionByPos = RemoteCall::importAs<std::string(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"); auto result = Lands_GetLandPermissionByPos(x,y,z,dimensionId,playerXuid); \"},\"1730\":{\"t\":\"C#\"},\"1731\":{\"t\":\"// 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string var Lands_GetLandPermissionByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"); var result = Lands_GetLandPermissionByPos(x,y,z,dimensionId,playerXuid); \"},\"1732\":{\"t\":\"Visual Basic .NET\"},\"1733\":{\"t\":\"' 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string Dim Lands_GetLandPermissionByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,String))(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\") Dim result = Lands_GetLandPermissionByPos(x,y,z,dimensionId,playerXuid) \"},\"1734\":{\"t\":\"F#\"},\"1735\":{\"t\":\"// 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string let Lands_GetLandPermissionByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\") (x,y,z,dimensionId,playerXuid) |>Lands_GetLandPermissionByPos.Invoke |>ignore \"},\"1736\":{\"h\":\"Lands::GetLandPermissionByPosInt\",\"a\":\"lands-getlandpermissionbyposint\"},\"1737\":{\"h\":\"获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串）\",\"a\":\"获取指定坐标-int-领地权限-返回json字符串字典-key-boolean-可指定玩家否则playerxuid填写空字符串\"},\"1738\":{\"t\":\"形参\"},\"1739\":{\"t\":\"类型\"},\"1740\":{\"t\":\"x\"},\"1741\":{\"t\":\"int\"},\"1742\":{\"t\":\"y\"},\"1743\":{\"t\":\"int\"},\"1744\":{\"t\":\"z\"},\"1745\":{\"t\":\"int\"},\"1746\":{\"t\":\"dimensionId\"},\"1747\":{\"t\":\"int\"},\"1748\":{\"t\":\"playerXuid\"},\"1749\":{\"t\":\"string\"},\"1750\":{\"t\":\"返回值类型：string;\"},\"1751\":{\"t\":\"JavaScript\"},\"1752\":{\"t\":\"/** 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string */ const Lands_GetLandPermissionByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"); let result = Lands_GetLandPermissionByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1753\":{\"t\":\"C++\"},\"1754\":{\"t\":\"// 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string auto Lands_GetLandPermissionByPosInt = RemoteCall::importAs<std::string(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"); auto result = Lands_GetLandPermissionByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1755\":{\"t\":\"C#\"},\"1756\":{\"t\":\"// 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string var Lands_GetLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"); var result = Lands_GetLandPermissionByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1757\":{\"t\":\"Visual Basic .NET\"},\"1758\":{\"t\":\"' 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string Dim Lands_GetLandPermissionByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,String))(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\") Dim result = Lands_GetLandPermissionByPosInt(x,y,z,dimensionId,playerXuid) \"},\"1759\":{\"t\":\"F#\"},\"1760\":{\"t\":\"// 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string let Lands_GetLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\") (x,y,z,dimensionId,playerXuid) |>Lands_GetLandPermissionByPosInt.Invoke |>ignore \"},\"1761\":{\"h\":\"Lands::CheckLandPermissionByPos\",\"a\":\"lands-checklandpermissionbypos\"},\"1762\":{\"h\":\"检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串）\",\"a\":\"检查指定坐标-float-领地是否有指定权限-permissionid参考getlandpermissionbypos返回的key-返回json字符串字典-key-boolean-可指定玩家否则playerxuid填写空字符串\"},\"1763\":{\"t\":\"形参\"},\"1764\":{\"t\":\"类型\"},\"1765\":{\"t\":\"permissionId\"},\"1766\":{\"t\":\"string\"},\"1767\":{\"t\":\"x\"},\"1768\":{\"t\":\"float\"},\"1769\":{\"t\":\"y\"},\"1770\":{\"t\":\"float\"},\"1771\":{\"t\":\"z\"},\"1772\":{\"t\":\"float\"},\"1773\":{\"t\":\"dimensionId\"},\"1774\":{\"t\":\"int\"},\"1775\":{\"t\":\"playerXuid\"},\"1776\":{\"t\":\"string\"},\"1777\":{\"t\":\"返回值类型：bool;\"},\"1778\":{\"t\":\"JavaScript\"},\"1779\":{\"t\":\"/** 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool */ const Lands_CheckLandPermissionByPos = ll.import(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"); let result = Lands_CheckLandPermissionByPos(permissionId,x,y,z,dimensionId,playerXuid); \"},\"1780\":{\"t\":\"C++\"},\"1781\":{\"t\":\"// 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool auto Lands_CheckLandPermissionByPos = RemoteCall::importAs<bool(std::string const& permissionId,float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"); auto result = Lands_CheckLandPermissionByPos(permissionId,x,y,z,dimensionId,playerXuid); \"},\"1782\":{\"t\":\"C#\"},\"1783\":{\"t\":\"// 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool var Lands_CheckLandPermissionByPos = RemoteCallAPI.ImportAs<Func<string,float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"); var result = Lands_CheckLandPermissionByPos(permissionId,x,y,z,dimensionId,playerXuid); \"},\"1784\":{\"t\":\"Visual Basic .NET\"},\"1785\":{\"t\":\"' 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool Dim Lands_CheckLandPermissionByPos = RemoteCallAPI.ImportAs(Of Func(Of String,Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\") Dim result = Lands_CheckLandPermissionByPos(permissionId,x,y,z,dimensionId,playerXuid) \"},\"1786\":{\"t\":\"F#\"},\"1787\":{\"t\":\"// 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool let Lands_CheckLandPermissionByPos = RemoteCallAPI.ImportAs<Func<string,float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\") (permissionId,x,y,z,dimensionId,playerXuid) |>Lands_CheckLandPermissionByPos.Invoke |>ignore \"},\"1788\":{\"h\":\"Lands::CheckLandPermissionByPosInt\",\"a\":\"lands-checklandpermissionbyposint\"},\"1789\":{\"h\":\"检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串）\",\"a\":\"检查指定坐标-int-领地是否有指定权限-permissionid参考getlandpermissionbypos返回的key-返回json字符串字典-key-boolean-可指定玩家否则playerxuid填写空字符串\"},\"1790\":{\"t\":\"形参\"},\"1791\":{\"t\":\"类型\"},\"1792\":{\"t\":\"permissionId\"},\"1793\":{\"t\":\"string\"},\"1794\":{\"t\":\"x\"},\"1795\":{\"t\":\"int\"},\"1796\":{\"t\":\"y\"},\"1797\":{\"t\":\"int\"},\"1798\":{\"t\":\"z\"},\"1799\":{\"t\":\"int\"},\"1800\":{\"t\":\"dimensionId\"},\"1801\":{\"t\":\"int\"},\"1802\":{\"t\":\"playerXuid\"},\"1803\":{\"t\":\"string\"},\"1804\":{\"t\":\"返回值类型：bool;\"},\"1805\":{\"t\":\"JavaScript\"},\"1806\":{\"t\":\"/** 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool */ const Lands_CheckLandPermissionByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"); let result = Lands_CheckLandPermissionByPosInt(permissionId,x,y,z,dimensionId,playerXuid); \"},\"1807\":{\"t\":\"C++\"},\"1808\":{\"t\":\"// 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool auto Lands_CheckLandPermissionByPosInt = RemoteCall::importAs<bool(std::string const& permissionId,int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"); auto result = Lands_CheckLandPermissionByPosInt(permissionId,x,y,z,dimensionId,playerXuid); \"},\"1809\":{\"t\":\"C#\"},\"1810\":{\"t\":\"// 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool var Lands_CheckLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<string,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"); var result = Lands_CheckLandPermissionByPosInt(permissionId,x,y,z,dimensionId,playerXuid); \"},\"1811\":{\"t\":\"Visual Basic .NET\"},\"1812\":{\"t\":\"' 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool Dim Lands_CheckLandPermissionByPosInt = RemoteCallAPI.ImportAs(Of Func(Of String,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\") Dim result = Lands_CheckLandPermissionByPosInt(permissionId,x,y,z,dimensionId,playerXuid) \"},\"1813\":{\"t\":\"F#\"},\"1814\":{\"t\":\"// 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool let Lands_CheckLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<string,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\") (permissionId,x,y,z,dimensionId,playerXuid) |>Lands_CheckLandPermissionByPosInt.Invoke |>ignore \"},\"1815\":{\"h\":\"Lands::CheckPlayerIsLandOwnerByPos\",\"a\":\"lands-checkplayerislandownerbypos\"},\"1816\":{\"h\":\"检查玩家是否是指定坐标(float)领地的主人\",\"a\":\"检查玩家是否是指定坐标-float-领地的主人\"},\"1817\":{\"t\":\"形参\"},\"1818\":{\"t\":\"类型\"},\"1819\":{\"t\":\"x\"},\"1820\":{\"t\":\"float\"},\"1821\":{\"t\":\"y\"},\"1822\":{\"t\":\"float\"},\"1823\":{\"t\":\"z\"},\"1824\":{\"t\":\"float\"},\"1825\":{\"t\":\"dimensionId\"},\"1826\":{\"t\":\"int\"},\"1827\":{\"t\":\"playerXuid\"},\"1828\":{\"t\":\"string\"},\"1829\":{\"t\":\"返回值类型：bool;\"},\"1830\":{\"t\":\"JavaScript\"},\"1831\":{\"t\":\"/** 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool */ const Lands_CheckPlayerIsLandOwnerByPos = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"); let result = Lands_CheckPlayerIsLandOwnerByPos(x,y,z,dimensionId,playerXuid); \"},\"1832\":{\"t\":\"C++\"},\"1833\":{\"t\":\"// 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool auto Lands_CheckPlayerIsLandOwnerByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"); auto result = Lands_CheckPlayerIsLandOwnerByPos(x,y,z,dimensionId,playerXuid); \"},\"1834\":{\"t\":\"C#\"},\"1835\":{\"t\":\"// 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool var Lands_CheckPlayerIsLandOwnerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"); var result = Lands_CheckPlayerIsLandOwnerByPos(x,y,z,dimensionId,playerXuid); \"},\"1836\":{\"t\":\"Visual Basic .NET\"},\"1837\":{\"t\":\"' 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool Dim Lands_CheckPlayerIsLandOwnerByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\") Dim result = Lands_CheckPlayerIsLandOwnerByPos(x,y,z,dimensionId,playerXuid) \"},\"1838\":{\"t\":\"F#\"},\"1839\":{\"t\":\"// 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool let Lands_CheckPlayerIsLandOwnerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\") (x,y,z,dimensionId,playerXuid) |>Lands_CheckPlayerIsLandOwnerByPos.Invoke |>ignore \"},\"1840\":{\"h\":\"Lands::CheckPlayerIsLandOwnerByPosInt\",\"a\":\"lands-checkplayerislandownerbyposint\"},\"1841\":{\"h\":\"检查玩家是否是指定坐标(int)领地的主人\",\"a\":\"检查玩家是否是指定坐标-int-领地的主人\"},\"1842\":{\"t\":\"形参\"},\"1843\":{\"t\":\"类型\"},\"1844\":{\"t\":\"x\"},\"1845\":{\"t\":\"int\"},\"1846\":{\"t\":\"y\"},\"1847\":{\"t\":\"int\"},\"1848\":{\"t\":\"z\"},\"1849\":{\"t\":\"int\"},\"1850\":{\"t\":\"dimensionId\"},\"1851\":{\"t\":\"int\"},\"1852\":{\"t\":\"playerXuid\"},\"1853\":{\"t\":\"string\"},\"1854\":{\"t\":\"返回值类型：bool;\"},\"1855\":{\"t\":\"JavaScript\"},\"1856\":{\"t\":\"/** 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool */ const Lands_CheckPlayerIsLandOwnerByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"); let result = Lands_CheckPlayerIsLandOwnerByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1857\":{\"t\":\"C++\"},\"1858\":{\"t\":\"// 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool auto Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"); auto result = Lands_CheckPlayerIsLandOwnerByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1859\":{\"t\":\"C#\"},\"1860\":{\"t\":\"// 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool var Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"); var result = Lands_CheckPlayerIsLandOwnerByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1861\":{\"t\":\"Visual Basic .NET\"},\"1862\":{\"t\":\"' 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool Dim Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\") Dim result = Lands_CheckPlayerIsLandOwnerByPosInt(x,y,z,dimensionId,playerXuid) \"},\"1863\":{\"t\":\"F#\"},\"1864\":{\"t\":\"// 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool let Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\") (x,y,z,dimensionId,playerXuid) |>Lands_CheckPlayerIsLandOwnerByPosInt.Invoke |>ignore \"},\"1865\":{\"h\":\"Lands::CheckIsLandSharedToPlayerByPos\",\"a\":\"lands-checkislandsharedtoplayerbypos\"},\"1866\":{\"h\":\"检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos）\",\"a\":\"检查指定坐标-float-领地是否共享给指定玩家-检查具体权限请使用checklandpermissionbypos\"},\"1867\":{\"t\":\"形参\"},\"1868\":{\"t\":\"类型\"},\"1869\":{\"t\":\"x\"},\"1870\":{\"t\":\"float\"},\"1871\":{\"t\":\"y\"},\"1872\":{\"t\":\"float\"},\"1873\":{\"t\":\"z\"},\"1874\":{\"t\":\"float\"},\"1875\":{\"t\":\"dimensionId\"},\"1876\":{\"t\":\"int\"},\"1877\":{\"t\":\"playerXuid\"},\"1878\":{\"t\":\"string\"},\"1879\":{\"t\":\"返回值类型：bool;\"},\"1880\":{\"t\":\"JavaScript\"},\"1881\":{\"t\":\"/** 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool */ const Lands_CheckIsLandSharedToPlayerByPos = ll.import(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"); let result = Lands_CheckIsLandSharedToPlayerByPos(x,y,z,dimensionId,playerXuid); \"},\"1882\":{\"t\":\"C++\"},\"1883\":{\"t\":\"// 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool auto Lands_CheckIsLandSharedToPlayerByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"); auto result = Lands_CheckIsLandSharedToPlayerByPos(x,y,z,dimensionId,playerXuid); \"},\"1884\":{\"t\":\"C#\"},\"1885\":{\"t\":\"// 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool var Lands_CheckIsLandSharedToPlayerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"); var result = Lands_CheckIsLandSharedToPlayerByPos(x,y,z,dimensionId,playerXuid); \"},\"1886\":{\"t\":\"Visual Basic .NET\"},\"1887\":{\"t\":\"' 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool Dim Lands_CheckIsLandSharedToPlayerByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\") Dim result = Lands_CheckIsLandSharedToPlayerByPos(x,y,z,dimensionId,playerXuid) \"},\"1888\":{\"t\":\"F#\"},\"1889\":{\"t\":\"// 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool let Lands_CheckIsLandSharedToPlayerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\") (x,y,z,dimensionId,playerXuid) |>Lands_CheckIsLandSharedToPlayerByPos.Invoke |>ignore \"},\"1890\":{\"h\":\"Lands::CheckIsLandSharedToPlayerByPosInt\",\"a\":\"lands-checkislandsharedtoplayerbyposint\"},\"1891\":{\"h\":\"检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos）\",\"a\":\"检查指定坐标-int-领地是否共享给指定玩家-检查具体权限请使用checklandpermissionbypos\"},\"1892\":{\"t\":\"形参\"},\"1893\":{\"t\":\"类型\"},\"1894\":{\"t\":\"x\"},\"1895\":{\"t\":\"int\"},\"1896\":{\"t\":\"y\"},\"1897\":{\"t\":\"int\"},\"1898\":{\"t\":\"z\"},\"1899\":{\"t\":\"int\"},\"1900\":{\"t\":\"dimensionId\"},\"1901\":{\"t\":\"int\"},\"1902\":{\"t\":\"playerXuid\"},\"1903\":{\"t\":\"string\"},\"1904\":{\"t\":\"返回值类型：bool;\"},\"1905\":{\"t\":\"JavaScript\"},\"1906\":{\"t\":\"/** 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool */ const Lands_CheckIsLandSharedToPlayerByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"); let result = Lands_CheckIsLandSharedToPlayerByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1907\":{\"t\":\"C++\"},\"1908\":{\"t\":\"// 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool auto Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"); auto result = Lands_CheckIsLandSharedToPlayerByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1909\":{\"t\":\"C#\"},\"1910\":{\"t\":\"// 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool var Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"); var result = Lands_CheckIsLandSharedToPlayerByPosInt(x,y,z,dimensionId,playerXuid); \"},\"1911\":{\"t\":\"Visual Basic .NET\"},\"1912\":{\"t\":\"' 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool Dim Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\") Dim result = Lands_CheckIsLandSharedToPlayerByPosInt(x,y,z,dimensionId,playerXuid) \"},\"1913\":{\"t\":\"F#\"},\"1914\":{\"t\":\"// 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool let Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\") (x,y,z,dimensionId,playerXuid) |>Lands_CheckIsLandSharedToPlayerByPosInt.Invoke |>ignore \"},\"1915\":{\"h\":\"Lands::CheckPlayerHasCreateChestPermission\",\"a\":\"lands-checkplayerhascreatechestpermission\"},\"1916\":{\"h\":\"(请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件)\",\"a\":\"请使用getlandpermissionbypos-检查玩家在指定坐标-int-领地是否有开箱-方块交互-、放置、破坏的权限-主要用于锁箱插件\"},\"1917\":{\"t\":\"形参\"},\"1918\":{\"t\":\"类型\"},\"1919\":{\"t\":\"x\"},\"1920\":{\"t\":\"int\"},\"1921\":{\"t\":\"y\"},\"1922\":{\"t\":\"int\"},\"1923\":{\"t\":\"z\"},\"1924\":{\"t\":\"int\"},\"1925\":{\"t\":\"dimensionId\"},\"1926\":{\"t\":\"int\"},\"1927\":{\"t\":\"playerXuid\"},\"1928\":{\"t\":\"string\"},\"1929\":{\"t\":\"返回值类型：bool;\"},\"1930\":{\"t\":\"JavaScript\"},\"1931\":{\"t\":\"/** (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool */ const Lands_CheckPlayerHasCreateChestPermission = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"); let result = Lands_CheckPlayerHasCreateChestPermission(x,y,z,dimensionId,playerXuid); \"},\"1932\":{\"t\":\"C++\"},\"1933\":{\"t\":\"// (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool auto Lands_CheckPlayerHasCreateChestPermission = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"); auto result = Lands_CheckPlayerHasCreateChestPermission(x,y,z,dimensionId,playerXuid); \"},\"1934\":{\"t\":\"C#\"},\"1935\":{\"t\":\"// (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool var Lands_CheckPlayerHasCreateChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"); var result = Lands_CheckPlayerHasCreateChestPermission(x,y,z,dimensionId,playerXuid); \"},\"1936\":{\"t\":\"Visual Basic .NET\"},\"1937\":{\"t\":\"' (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool Dim Lands_CheckPlayerHasCreateChestPermission = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\") Dim result = Lands_CheckPlayerHasCreateChestPermission(x,y,z,dimensionId,playerXuid) \"},\"1938\":{\"t\":\"F#\"},\"1939\":{\"t\":\"// (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool let Lands_CheckPlayerHasCreateChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\") (x,y,z,dimensionId,playerXuid) |>Lands_CheckPlayerHasCreateChestPermission.Invoke |>ignore \"},\"1940\":{\"h\":\"Lands::CheckPlayerHasOpenChestPermission\",\"a\":\"lands-checkplayerhasopenchestpermission\"},\"1941\":{\"h\":\"(请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件)\",\"a\":\"请使用getlandpermissionbypos-检查玩家在指定坐标-int-领地是否有使用箱子的权限-主要用于锁箱插件\"},\"1942\":{\"t\":\"形参\"},\"1943\":{\"t\":\"类型\"},\"1944\":{\"t\":\"x\"},\"1945\":{\"t\":\"int\"},\"1946\":{\"t\":\"y\"},\"1947\":{\"t\":\"int\"},\"1948\":{\"t\":\"z\"},\"1949\":{\"t\":\"int\"},\"1950\":{\"t\":\"dimensionId\"},\"1951\":{\"t\":\"int\"},\"1952\":{\"t\":\"playerXuid\"},\"1953\":{\"t\":\"string\"},\"1954\":{\"t\":\"返回值类型：bool;\"},\"1955\":{\"t\":\"JavaScript\"},\"1956\":{\"t\":\"/** (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool */ const Lands_CheckPlayerHasOpenChestPermission = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"); let result = Lands_CheckPlayerHasOpenChestPermission(x,y,z,dimensionId,playerXuid); \"},\"1957\":{\"t\":\"C++\"},\"1958\":{\"t\":\"// (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool auto Lands_CheckPlayerHasOpenChestPermission = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"); auto result = Lands_CheckPlayerHasOpenChestPermission(x,y,z,dimensionId,playerXuid); \"},\"1959\":{\"t\":\"C#\"},\"1960\":{\"t\":\"// (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool var Lands_CheckPlayerHasOpenChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"); var result = Lands_CheckPlayerHasOpenChestPermission(x,y,z,dimensionId,playerXuid); \"},\"1961\":{\"t\":\"Visual Basic .NET\"},\"1962\":{\"t\":\"' (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool Dim Lands_CheckPlayerHasOpenChestPermission = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\") Dim result = Lands_CheckPlayerHasOpenChestPermission(x,y,z,dimensionId,playerXuid) \"},\"1963\":{\"t\":\"F#\"},\"1964\":{\"t\":\"// (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool let Lands_CheckPlayerHasOpenChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\") (x,y,z,dimensionId,playerXuid) |>Lands_CheckPlayerHasOpenChestPermission.Invoke |>ignore \"},\"1965\":{\"h\":\"Lands::GetPlayerAllPermissionGroupId\",\"a\":\"lands-getplayerallpermissiongroupid\"},\"1966\":{\"h\":\"取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串）\",\"a\":\"取玩家所有权限组id-返回-id1-id2-字符串\"},\"1967\":{\"t\":\"形参\"},\"1968\":{\"t\":\"类型\"},\"1969\":{\"t\":\"playerXuid\"},\"1970\":{\"t\":\"string\"},\"1971\":{\"t\":\"返回值类型：string;\"},\"1972\":{\"t\":\"JavaScript\"},\"1973\":{\"t\":\"/** 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string */ const Lands_GetPlayerAllPermissionGroupId = ll.import(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"); let result = Lands_GetPlayerAllPermissionGroupId(playerXuid); \"},\"1974\":{\"t\":\"C++\"},\"1975\":{\"t\":\"// 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string auto Lands_GetPlayerAllPermissionGroupId = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"); auto result = Lands_GetPlayerAllPermissionGroupId(playerXuid); \"},\"1976\":{\"t\":\"C#\"},\"1977\":{\"t\":\"// 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string var Lands_GetPlayerAllPermissionGroupId = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"); var result = Lands_GetPlayerAllPermissionGroupId(playerXuid); \"},\"1978\":{\"t\":\"Visual Basic .NET\"},\"1979\":{\"t\":\"' 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string Dim Lands_GetPlayerAllPermissionGroupId = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\") Dim result = Lands_GetPlayerAllPermissionGroupId(playerXuid) \"},\"1980\":{\"t\":\"F#\"},\"1981\":{\"t\":\"// 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string let Lands_GetPlayerAllPermissionGroupId = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\") playerXuid |>Lands_GetPlayerAllPermissionGroupId.Invoke |>ignore \"},\"1982\":{\"h\":\"Lands::GetPlayerPermissionGroup\",\"a\":\"lands-getplayerpermissiongroup\"},\"1983\":{\"h\":\"取玩家权限组内容(指定ID)（返回JSON对象字符串）\",\"a\":\"取玩家权限组内容-指定id-返回json对象字符串\"},\"1984\":{\"t\":\"形参\"},\"1985\":{\"t\":\"类型\"},\"1986\":{\"t\":\"playerXuid\"},\"1987\":{\"t\":\"string\"},\"1988\":{\"t\":\"permissionGroupId\"},\"1989\":{\"t\":\"string\"},\"1990\":{\"t\":\"返回值类型：string;\"},\"1991\":{\"t\":\"JavaScript\"},\"1992\":{\"t\":\"/** 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string */ const Lands_GetPlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"); let result = Lands_GetPlayerPermissionGroup(playerXuid,permissionGroupId); \"},\"1993\":{\"t\":\"C++\"},\"1994\":{\"t\":\"// 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string auto Lands_GetPlayerPermissionGroup = RemoteCall::importAs<std::string(std::string const& playerXuid,std::string const& permissionGroupId)>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"); auto result = Lands_GetPlayerPermissionGroup(playerXuid,permissionGroupId); \"},\"1995\":{\"t\":\"C#\"},\"1996\":{\"t\":\"// 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string var Lands_GetPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"); var result = Lands_GetPlayerPermissionGroup(playerXuid,permissionGroupId); \"},\"1997\":{\"t\":\"Visual Basic .NET\"},\"1998\":{\"t\":\"' 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string Dim Lands_GetPlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\") Dim result = Lands_GetPlayerPermissionGroup(playerXuid,permissionGroupId) \"},\"1999\":{\"t\":\"F#\"},\"2000\":{\"t\":\"// 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string let Lands_GetPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\") (playerXuid,permissionGroupId) |>Lands_GetPlayerPermissionGroup.Invoke |>ignore \"},\"2001\":{\"h\":\"Lands::DeletePlayerPermissionGroup\",\"a\":\"lands-deleteplayerpermissiongroup\"},\"2002\":{\"h\":\"删玩家权限组(指定ID)\",\"a\":\"删玩家权限组-指定id\"},\"2003\":{\"t\":\"形参\"},\"2004\":{\"t\":\"类型\"},\"2005\":{\"t\":\"playerXuid\"},\"2006\":{\"t\":\"string\"},\"2007\":{\"t\":\"permissionGroupId\"},\"2008\":{\"t\":\"string\"},\"2009\":{\"t\":\"返回值类型：bool;\"},\"2010\":{\"t\":\"JavaScript\"},\"2011\":{\"t\":\"/** 删玩家权限组(指定ID) 返回值类型：bool */ const Lands_DeletePlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"); let result = Lands_DeletePlayerPermissionGroup(playerXuid,permissionGroupId); \"},\"2012\":{\"t\":\"C++\"},\"2013\":{\"t\":\"// 删玩家权限组(指定ID) 返回值类型：bool auto Lands_DeletePlayerPermissionGroup = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& permissionGroupId)>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"); auto result = Lands_DeletePlayerPermissionGroup(playerXuid,permissionGroupId); \"},\"2014\":{\"t\":\"C#\"},\"2015\":{\"t\":\"// 删玩家权限组(指定ID) 返回值类型：bool var Lands_DeletePlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"); var result = Lands_DeletePlayerPermissionGroup(playerXuid,permissionGroupId); \"},\"2016\":{\"t\":\"Visual Basic .NET\"},\"2017\":{\"t\":\"' 删玩家权限组(指定ID) 返回值类型：bool Dim Lands_DeletePlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\") Dim result = Lands_DeletePlayerPermissionGroup(playerXuid,permissionGroupId) \"},\"2018\":{\"t\":\"F#\"},\"2019\":{\"t\":\"// 删玩家权限组(指定ID) 返回值类型：bool let Lands_DeletePlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\") (playerXuid,permissionGroupId) |>Lands_DeletePlayerPermissionGroup.Invoke |>ignore \"},\"2020\":{\"h\":\"Lands::EditPlayerPermissionGroup\",\"a\":\"lands-editplayerpermissiongroup\"},\"2021\":{\"h\":\"修改家权限组内容(指定ID)\",\"a\":\"修改家权限组内容-指定id\"},\"2022\":{\"t\":\"形参\"},\"2023\":{\"t\":\"类型\"},\"2024\":{\"t\":\"playerXuid\"},\"2025\":{\"t\":\"string\"},\"2026\":{\"t\":\"permissionGroupId\"},\"2027\":{\"t\":\"string\"},\"2028\":{\"t\":\"jsonString\"},\"2029\":{\"t\":\"string\"},\"2030\":{\"t\":\"返回值类型：bool;\"},\"2031\":{\"t\":\"JavaScript\"},\"2032\":{\"t\":\"/** 修改家权限组内容(指定ID) 返回值类型：bool */ const Lands_EditPlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"); let result = Lands_EditPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString); \"},\"2033\":{\"t\":\"C++\"},\"2034\":{\"t\":\"// 修改家权限组内容(指定ID) 返回值类型：bool auto Lands_EditPlayerPermissionGroup = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& permissionGroupId,std::string const& jsonString)>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"); auto result = Lands_EditPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString); \"},\"2035\":{\"t\":\"C#\"},\"2036\":{\"t\":\"// 修改家权限组内容(指定ID) 返回值类型：bool var Lands_EditPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"); var result = Lands_EditPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString); \"},\"2037\":{\"t\":\"Visual Basic .NET\"},\"2038\":{\"t\":\"' 修改家权限组内容(指定ID) 返回值类型：bool Dim Lands_EditPlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\") Dim result = Lands_EditPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString) \"},\"2039\":{\"t\":\"F#\"},\"2040\":{\"t\":\"// 修改家权限组内容(指定ID) 返回值类型：bool let Lands_EditPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\") (playerXuid,permissionGroupId,jsonString) |>Lands_EditPlayerPermissionGroup.Invoke |>ignore \"},\"2041\":{\"h\":\"Lands::AddPlayerPermissionGroup\",\"a\":\"lands-addplayerpermissiongroup\"},\"2042\":{\"h\":\"添加权限组\",\"a\":\"添加权限组\"},\"2043\":{\"t\":\"形参\"},\"2044\":{\"t\":\"类型\"},\"2045\":{\"t\":\"playerXuid\"},\"2046\":{\"t\":\"string\"},\"2047\":{\"t\":\"permissionGroupId\"},\"2048\":{\"t\":\"string\"},\"2049\":{\"t\":\"jsonString\"},\"2050\":{\"t\":\"string\"},\"2051\":{\"t\":\"返回值类型：bool;\"},\"2052\":{\"t\":\"JavaScript\"},\"2053\":{\"t\":\"/** 添加权限组 返回值类型：bool */ const Lands_AddPlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"); let result = Lands_AddPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString); \"},\"2054\":{\"t\":\"C++\"},\"2055\":{\"t\":\"// 添加权限组 返回值类型：bool auto Lands_AddPlayerPermissionGroup = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& permissionGroupId,std::string const& jsonString)>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"); auto result = Lands_AddPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString); \"},\"2056\":{\"t\":\"C#\"},\"2057\":{\"t\":\"// 添加权限组 返回值类型：bool var Lands_AddPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"); var result = Lands_AddPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString); \"},\"2058\":{\"t\":\"Visual Basic .NET\"},\"2059\":{\"t\":\"' 添加权限组 返回值类型：bool Dim Lands_AddPlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\") Dim result = Lands_AddPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString) \"},\"2060\":{\"t\":\"F#\"},\"2061\":{\"t\":\"// 添加权限组 返回值类型：bool let Lands_AddPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\") (playerXuid,permissionGroupId,jsonString) |>Lands_AddPlayerPermissionGroup.Invoke |>ignore \"},\"2062\":{\"h\":\"Lands::GetLandsOwnedByPlayer\",\"a\":\"lands-getlandsownedbyplayer\"},\"2063\":{\"h\":\"取玩家拥有的领地\",\"a\":\"取玩家拥有的领地\"},\"2064\":{\"t\":\"形参\"},\"2065\":{\"t\":\"类型\"},\"2066\":{\"t\":\"playerXuid\"},\"2067\":{\"t\":\"string\"},\"2068\":{\"t\":\"返回值类型：string;\"},\"2069\":{\"t\":\"JavaScript\"},\"2070\":{\"t\":\"/** 取玩家拥有的领地 返回值类型：string */ const Lands_GetLandsOwnedByPlayer = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"); let result = Lands_GetLandsOwnedByPlayer(playerXuid); \"},\"2071\":{\"t\":\"C++\"},\"2072\":{\"t\":\"// 取玩家拥有的领地 返回值类型：string auto Lands_GetLandsOwnedByPlayer = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"); auto result = Lands_GetLandsOwnedByPlayer(playerXuid); \"},\"2073\":{\"t\":\"C#\"},\"2074\":{\"t\":\"// 取玩家拥有的领地 返回值类型：string var Lands_GetLandsOwnedByPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"); var result = Lands_GetLandsOwnedByPlayer(playerXuid); \"},\"2075\":{\"t\":\"Visual Basic .NET\"},\"2076\":{\"t\":\"' 取玩家拥有的领地 返回值类型：string Dim Lands_GetLandsOwnedByPlayer = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\") Dim result = Lands_GetLandsOwnedByPlayer(playerXuid) \"},\"2077\":{\"t\":\"F#\"},\"2078\":{\"t\":\"// 取玩家拥有的领地 返回值类型：string let Lands_GetLandsOwnedByPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\") playerXuid |>Lands_GetLandsOwnedByPlayer.Invoke |>ignore \"},\"2079\":{\"h\":\"Lands::GetLandsSharedToPlayer\",\"a\":\"lands-getlandssharedtoplayer\"},\"2080\":{\"h\":\"取共享给玩家的领地\",\"a\":\"取共享给玩家的领地\"},\"2081\":{\"t\":\"形参\"},\"2082\":{\"t\":\"类型\"},\"2083\":{\"t\":\"playerXuid\"},\"2084\":{\"t\":\"string\"},\"2085\":{\"t\":\"返回值类型：string;\"},\"2086\":{\"t\":\"JavaScript\"},\"2087\":{\"t\":\"/** 取共享给玩家的领地 返回值类型：string */ const Lands_GetLandsSharedToPlayer = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"); let result = Lands_GetLandsSharedToPlayer(playerXuid); \"},\"2088\":{\"t\":\"C++\"},\"2089\":{\"t\":\"// 取共享给玩家的领地 返回值类型：string auto Lands_GetLandsSharedToPlayer = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"); auto result = Lands_GetLandsSharedToPlayer(playerXuid); \"},\"2090\":{\"t\":\"C#\"},\"2091\":{\"t\":\"// 取共享给玩家的领地 返回值类型：string var Lands_GetLandsSharedToPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"); var result = Lands_GetLandsSharedToPlayer(playerXuid); \"},\"2092\":{\"t\":\"Visual Basic .NET\"},\"2093\":{\"t\":\"' 取共享给玩家的领地 返回值类型：string Dim Lands_GetLandsSharedToPlayer = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\") Dim result = Lands_GetLandsSharedToPlayer(playerXuid) \"},\"2094\":{\"t\":\"F#\"},\"2095\":{\"t\":\"// 取共享给玩家的领地 返回值类型：string let Lands_GetLandsSharedToPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\") playerXuid |>Lands_GetLandsSharedToPlayer.Invoke |>ignore \"},\"2096\":{\"h\":\"Language\"},\"2097\":{\"h\":\"Language::Translate\",\"a\":\"language-translate\"},\"2098\":{\"h\":\"翻译\",\"a\":\"翻译\"},\"2099\":{\"t\":\"形参\"},\"2100\":{\"t\":\"类型\"},\"2101\":{\"t\":\"fromLanguage\"},\"2102\":{\"t\":\"string\"},\"2103\":{\"t\":\"toLanguage\"},\"2104\":{\"t\":\"string\"},\"2105\":{\"t\":\"text\"},\"2106\":{\"t\":\"string\"},\"2107\":{\"t\":\"返回值类型：string;\"},\"2108\":{\"t\":\"JavaScript\"},\"2109\":{\"t\":\"/** 翻译 返回值类型：string */ const Language_Translate = ll.import(\\\"PFLP\\\", \\\"Language::Translate\\\"); let result = Language_Translate(fromLanguage,toLanguage,text); \"},\"2110\":{\"t\":\"C++\"},\"2111\":{\"t\":\"// 翻译 返回值类型：string auto Language_Translate = RemoteCall::importAs<std::string(std::string const& fromLanguage,std::string const& toLanguage,std::string const& text)>(\\\"PFLP\\\", \\\"Language::Translate\\\"); auto result = Language_Translate(fromLanguage,toLanguage,text); \"},\"2112\":{\"t\":\"C#\"},\"2113\":{\"t\":\"// 翻译 返回值类型：string var Language_Translate = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Language::Translate\\\"); var result = Language_Translate(fromLanguage,toLanguage,text); \"},\"2114\":{\"t\":\"Visual Basic .NET\"},\"2115\":{\"t\":\"' 翻译 返回值类型：string Dim Language_Translate = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Language::Translate\\\") Dim result = Language_Translate(fromLanguage,toLanguage,text) \"},\"2116\":{\"t\":\"F#\"},\"2117\":{\"t\":\"// 翻译 返回值类型：string let Language_Translate = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Language::Translate\\\") (fromLanguage,toLanguage,text) |>Language_Translate.Invoke |>ignore \"},\"2118\":{\"h\":\"Location\"},\"2119\":{\"h\":\"Location::GetAllCacheData\",\"a\":\"location-getallcachedata\"},\"2120\":{\"h\":\"获取全部IP归属地缓存（JSON字符串）\",\"a\":\"获取全部ip归属地缓存-json字符串\"},\"2121\":{\"t\":\"无参数;\"},\"2122\":{\"t\":\"返回值类型：string;\"},\"2123\":{\"t\":\"JavaScript\"},\"2124\":{\"t\":\"/** 获取全部IP归属地缓存（JSON字符串） 返回值类型：string */ const Location_GetAllCacheData = ll.import(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"); let result = Location_GetAllCacheData(); \"},\"2125\":{\"t\":\"C++\"},\"2126\":{\"t\":\"// 获取全部IP归属地缓存（JSON字符串） 返回值类型：string auto Location_GetAllCacheData = RemoteCall::importAs<std::string()>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"); auto result = Location_GetAllCacheData(); \"},\"2127\":{\"t\":\"C#\"},\"2128\":{\"t\":\"// 获取全部IP归属地缓存（JSON字符串） 返回值类型：string var Location_GetAllCacheData = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"); var result = Location_GetAllCacheData(); \"},\"2129\":{\"t\":\"Visual Basic .NET\"},\"2130\":{\"t\":\"' 获取全部IP归属地缓存（JSON字符串） 返回值类型：string Dim Location_GetAllCacheData = RemoteCallAPI.ImportAs(Of Func(Of String))(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\") Dim result = Location_GetAllCacheData() \"},\"2131\":{\"t\":\"F#\"},\"2132\":{\"t\":\"// 获取全部IP归属地缓存（JSON字符串） 返回值类型：string let Location_GetAllCacheData = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\") Location_GetAllCacheData() |>ignore \"},\"2133\":{\"h\":\"Location::SetIpLocation\",\"a\":\"location-setiplocation\"},\"2134\":{\"h\":\"设置IP归属地缓存\",\"a\":\"设置ip归属地缓存\"},\"2135\":{\"t\":\"形参\"},\"2136\":{\"t\":\"类型\"},\"2137\":{\"t\":\"ip\"},\"2138\":{\"t\":\"string\"},\"2139\":{\"t\":\"country\"},\"2140\":{\"t\":\"string\"},\"2141\":{\"t\":\"province\"},\"2142\":{\"t\":\"string\"},\"2143\":{\"t\":\"city\"},\"2144\":{\"t\":\"string\"},\"2145\":{\"t\":\"area\"},\"2146\":{\"t\":\"string\"},\"2147\":{\"t\":\"isp\"},\"2148\":{\"t\":\"string\"},\"2149\":{\"t\":\"language\"},\"2150\":{\"t\":\"string\"},\"2151\":{\"t\":\"无返回值;\"},\"2152\":{\"t\":\"JavaScript\"},\"2153\":{\"t\":\"/** 设置IP归属地缓存 */ const Location_SetIpLocation = ll.import(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"); Location_SetIpLocation(ip,country,province,city,area,isp,language); \"},\"2154\":{\"t\":\"C++\"},\"2155\":{\"t\":\"// 设置IP归属地缓存 auto Location_SetIpLocation = RemoteCall::importAs<void(std::string const& ip,std::string const& country,std::string const& province,std::string const& city,std::string const& area,std::string const& isp,std::string const& language)>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"); Location_SetIpLocation(ip,country,province,city,area,isp,language); \"},\"2156\":{\"t\":\"C#\"},\"2157\":{\"t\":\"// 设置IP归属地缓存 var Location_SetIpLocation = RemoteCallAPI.ImportAs<Action<string,string,string,string,string,string,string>>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"); Location_SetIpLocation(ip,country,province,city,area,isp,language); \"},\"2158\":{\"t\":\"Visual Basic .NET\"},\"2159\":{\"t\":\"' 设置IP归属地缓存 Dim Location_SetIpLocation = RemoteCallAPI.ImportAs(Of Action(Of String,String,String,String,String,String,String))(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\") Location_SetIpLocation(ip,country,province,city,area,isp,language) \"},\"2160\":{\"t\":\"F#\"},\"2161\":{\"t\":\"// 设置IP归属地缓存 let Location_SetIpLocation = RemoteCallAPI.ImportAs<Action<string,string,string,string,string,string,string>>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\") (ip,country,province,city,area,isp,language) |>Location_SetIpLocation.Invoke \"},\"2162\":{\"h\":\"Money\"},\"2163\":{\"h\":\"Money::Get\",\"a\":\"money-get\"},\"2164\":{\"h\":\"获取玩家(指定玩家名)金钱\",\"a\":\"获取玩家-指定玩家名-金钱\"},\"2165\":{\"t\":\"形参\"},\"2166\":{\"t\":\"类型\"},\"2167\":{\"t\":\"playerXuid\"},\"2168\":{\"t\":\"string\"},\"2169\":{\"t\":\"返回值类型：long;\"},\"2170\":{\"t\":\"JavaScript\"},\"2171\":{\"t\":\"/** 获取玩家(指定玩家名)金钱 返回值类型：long */ const Money_Get = ll.import(\\\"PFLP\\\", \\\"Money::Get\\\"); let result = Money_Get(playerXuid); \"},\"2172\":{\"t\":\"C++\"},\"2173\":{\"t\":\"// 获取玩家(指定玩家名)金钱 返回值类型：long auto Money_Get = RemoteCall::importAs<long long(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Money::Get\\\"); auto result = Money_Get(playerXuid); \"},\"2174\":{\"t\":\"C#\"},\"2175\":{\"t\":\"// 获取玩家(指定玩家名)金钱 返回值类型：long var Money_Get = RemoteCallAPI.ImportAs<Func<string,long>>(\\\"PFLP\\\", \\\"Money::Get\\\"); var result = Money_Get(playerXuid); \"},\"2176\":{\"t\":\"Visual Basic .NET\"},\"2177\":{\"t\":\"' 获取玩家(指定玩家名)金钱 返回值类型：long Dim Money_Get = RemoteCallAPI.ImportAs(Of Func(Of String,Long))(\\\"PFLP\\\", \\\"Money::Get\\\") Dim result = Money_Get(playerXuid) \"},\"2178\":{\"t\":\"F#\"},\"2179\":{\"t\":\"// 获取玩家(指定玩家名)金钱 返回值类型：long let Money_Get = RemoteCallAPI.ImportAs<Func<string,int64>>(\\\"PFLP\\\", \\\"Money::Get\\\") playerXuid |>Money_Get.Invoke |>ignore \"},\"2180\":{\"h\":\"Money::Add\",\"a\":\"money-add\"},\"2181\":{\"h\":\"给玩家(指定玩家名)加钱\",\"a\":\"给玩家-指定玩家名-加钱\"},\"2182\":{\"t\":\"形参\"},\"2183\":{\"t\":\"类型\"},\"2184\":{\"t\":\"playerXuid\"},\"2185\":{\"t\":\"string\"},\"2186\":{\"t\":\"count\"},\"2187\":{\"t\":\"long\"},\"2188\":{\"t\":\"info\"},\"2189\":{\"t\":\"string\"},\"2190\":{\"t\":\"无返回值;\"},\"2191\":{\"t\":\"JavaScript\"},\"2192\":{\"t\":\"/** 给玩家(指定玩家名)加钱 */ const Money_Add = ll.import(\\\"PFLP\\\", \\\"Money::Add\\\"); Money_Add(playerXuid,count,info); \"},\"2193\":{\"t\":\"C++\"},\"2194\":{\"t\":\"// 给玩家(指定玩家名)加钱 auto Money_Add = RemoteCall::importAs<void(std::string const& playerXuid,long long const& count,std::string const& info)>(\\\"PFLP\\\", \\\"Money::Add\\\"); Money_Add(playerXuid,count,info); \"},\"2195\":{\"t\":\"C#\"},\"2196\":{\"t\":\"// 给玩家(指定玩家名)加钱 var Money_Add = RemoteCallAPI.ImportAs<Action<string,long,string>>(\\\"PFLP\\\", \\\"Money::Add\\\"); Money_Add(playerXuid,count,info); \"},\"2197\":{\"t\":\"Visual Basic .NET\"},\"2198\":{\"t\":\"' 给玩家(指定玩家名)加钱 Dim Money_Add = RemoteCallAPI.ImportAs(Of Action(Of String,Long,String))(\\\"PFLP\\\", \\\"Money::Add\\\") Money_Add(playerXuid,count,info) \"},\"2199\":{\"t\":\"F#\"},\"2200\":{\"t\":\"// 给玩家(指定玩家名)加钱 let Money_Add = RemoteCallAPI.ImportAs<Action<string,int64,string>>(\\\"PFLP\\\", \\\"Money::Add\\\") (playerXuid,count,info) |>Money_Add.Invoke \"},\"2201\":{\"h\":\"Money::Remove\",\"a\":\"money-remove\"},\"2202\":{\"h\":\"给玩家(指定玩家名)减钱\",\"a\":\"给玩家-指定玩家名-减钱\"},\"2203\":{\"t\":\"形参\"},\"2204\":{\"t\":\"类型\"},\"2205\":{\"t\":\"playerXuid\"},\"2206\":{\"t\":\"string\"},\"2207\":{\"t\":\"count\"},\"2208\":{\"t\":\"long\"},\"2209\":{\"t\":\"info\"},\"2210\":{\"t\":\"string\"},\"2211\":{\"t\":\"无返回值;\"},\"2212\":{\"t\":\"JavaScript\"},\"2213\":{\"t\":\"/** 给玩家(指定玩家名)减钱 */ const Money_Remove = ll.import(\\\"PFLP\\\", \\\"Money::Remove\\\"); Money_Remove(playerXuid,count,info); \"},\"2214\":{\"t\":\"C++\"},\"2215\":{\"t\":\"// 给玩家(指定玩家名)减钱 auto Money_Remove = RemoteCall::importAs<void(std::string const& playerXuid,long long const& count,std::string const& info)>(\\\"PFLP\\\", \\\"Money::Remove\\\"); Money_Remove(playerXuid,count,info); \"},\"2216\":{\"t\":\"C#\"},\"2217\":{\"t\":\"// 给玩家(指定玩家名)减钱 var Money_Remove = RemoteCallAPI.ImportAs<Action<string,long,string>>(\\\"PFLP\\\", \\\"Money::Remove\\\"); Money_Remove(playerXuid,count,info); \"},\"2218\":{\"t\":\"Visual Basic .NET\"},\"2219\":{\"t\":\"' 给玩家(指定玩家名)减钱 Dim Money_Remove = RemoteCallAPI.ImportAs(Of Action(Of String,Long,String))(\\\"PFLP\\\", \\\"Money::Remove\\\") Money_Remove(playerXuid,count,info) \"},\"2220\":{\"t\":\"F#\"},\"2221\":{\"t\":\"// 给玩家(指定玩家名)减钱 let Money_Remove = RemoteCallAPI.ImportAs<Action<string,int64,string>>(\\\"PFLP\\\", \\\"Money::Remove\\\") (playerXuid,count,info) |>Money_Remove.Invoke \"},\"2222\":{\"h\":\"ParticlesGraphics\"},\"2223\":{\"h\":\"ParticlesGraphics::DrawBlock\",\"a\":\"particlesgraphics-drawblock\"},\"2224\":{\"h\":\"给指定方块描框\",\"a\":\"给指定方块描框\"},\"2225\":{\"t\":\"形参\"},\"2226\":{\"t\":\"类型\"},\"2227\":{\"t\":\"playerXuid\"},\"2228\":{\"t\":\"string\"},\"2229\":{\"t\":\"x\"},\"2230\":{\"t\":\"int\"},\"2231\":{\"t\":\"y\"},\"2232\":{\"t\":\"int\"},\"2233\":{\"t\":\"z\"},\"2234\":{\"t\":\"int\"},\"2235\":{\"t\":\"r\"},\"2236\":{\"t\":\"float\"},\"2237\":{\"t\":\"g\"},\"2238\":{\"t\":\"float\"},\"2239\":{\"t\":\"b\"},\"2240\":{\"t\":\"float\"},\"2241\":{\"t\":\"thickness\"},\"2242\":{\"t\":\"float\"},\"2243\":{\"t\":\"time\"},\"2244\":{\"t\":\"float\"},\"2245\":{\"t\":\"alpha\"},\"2246\":{\"t\":\"float\"},\"2247\":{\"t\":\"无返回值;\"},\"2248\":{\"t\":\"JavaScript\"},\"2249\":{\"t\":\"/** 给指定方块描框 */ const ParticlesGraphics_DrawBlock = ll.import(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"); ParticlesGraphics_DrawBlock(playerXuid,x,y,z,r,g,b,thickness,time,alpha); \"},\"2250\":{\"t\":\"C++\"},\"2251\":{\"t\":\"// 给指定方块描框 auto ParticlesGraphics_DrawBlock = RemoteCall::importAs<void(std::string const& playerXuid,int const& x,int const& y,int const& z,float const& r,float const& g,float const& b,float const& thickness,float const& time,float const& alpha)>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"); ParticlesGraphics_DrawBlock(playerXuid,x,y,z,r,g,b,thickness,time,alpha); \"},\"2252\":{\"t\":\"C#\"},\"2253\":{\"t\":\"// 给指定方块描框 var ParticlesGraphics_DrawBlock = RemoteCallAPI.ImportAs<Action<string,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"); ParticlesGraphics_DrawBlock(playerXuid,x,y,z,r,g,b,thickness,time,alpha); \"},\"2254\":{\"t\":\"Visual Basic .NET\"},\"2255\":{\"t\":\"' 给指定方块描框 Dim ParticlesGraphics_DrawBlock = RemoteCallAPI.ImportAs(Of Action(Of String,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\") ParticlesGraphics_DrawBlock(playerXuid,x,y,z,r,g,b,thickness,time,alpha) \"},\"2256\":{\"t\":\"F#\"},\"2257\":{\"t\":\"// 给指定方块描框 let ParticlesGraphics_DrawBlock = RemoteCallAPI.ImportAs<Action<string,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\") (playerXuid,x,y,z,r,g,b,thickness,time,alpha) |>ParticlesGraphics_DrawBlock.Invoke \"},\"2258\":{\"h\":\"ParticlesGraphics::DrawBorder\",\"a\":\"particlesgraphics-drawborder\"},\"2259\":{\"h\":\"给指定区域描框\",\"a\":\"给指定区域描框\"},\"2260\":{\"t\":\"形参\"},\"2261\":{\"t\":\"类型\"},\"2262\":{\"t\":\"playerXuid\"},\"2263\":{\"t\":\"string\"},\"2264\":{\"t\":\"x1\"},\"2265\":{\"t\":\"int\"},\"2266\":{\"t\":\"y1\"},\"2267\":{\"t\":\"int\"},\"2268\":{\"t\":\"z1\"},\"2269\":{\"t\":\"int\"},\"2270\":{\"t\":\"x2\"},\"2271\":{\"t\":\"int\"},\"2272\":{\"t\":\"y2\"},\"2273\":{\"t\":\"int\"},\"2274\":{\"t\":\"z2\"},\"2275\":{\"t\":\"int\"},\"2276\":{\"t\":\"r\"},\"2277\":{\"t\":\"float\"},\"2278\":{\"t\":\"g\"},\"2279\":{\"t\":\"float\"},\"2280\":{\"t\":\"b\"},\"2281\":{\"t\":\"float\"},\"2282\":{\"t\":\"thickness\"},\"2283\":{\"t\":\"float\"},\"2284\":{\"t\":\"time\"},\"2285\":{\"t\":\"float\"},\"2286\":{\"t\":\"alpha\"},\"2287\":{\"t\":\"float\"},\"2288\":{\"t\":\"无返回值;\"},\"2289\":{\"t\":\"JavaScript\"},\"2290\":{\"t\":\"/** 给指定区域描框 */ const ParticlesGraphics_DrawBorder = ll.import(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"); ParticlesGraphics_DrawBorder(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha); \"},\"2291\":{\"t\":\"C++\"},\"2292\":{\"t\":\"// 给指定区域描框 auto ParticlesGraphics_DrawBorder = RemoteCall::importAs<void(std::string const& playerXuid,int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,float const& r,float const& g,float const& b,float const& thickness,float const& time,float const& alpha)>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"); ParticlesGraphics_DrawBorder(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha); \"},\"2293\":{\"t\":\"C#\"},\"2294\":{\"t\":\"// 给指定区域描框 var ParticlesGraphics_DrawBorder = RemoteCallAPI.ImportAs<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"); ParticlesGraphics_DrawBorder(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha); \"},\"2295\":{\"t\":\"Visual Basic .NET\"},\"2296\":{\"t\":\"' 给指定区域描框 Dim ParticlesGraphics_DrawBorder = RemoteCallAPI.ImportAs(Of Action(Of String,Integer,Integer,Integer,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\") ParticlesGraphics_DrawBorder(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha) \"},\"2297\":{\"t\":\"F#\"},\"2298\":{\"t\":\"// 给指定区域描框 let ParticlesGraphics_DrawBorder = RemoteCallAPI.ImportAs<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\") (playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha) |>ParticlesGraphics_DrawBorder.Invoke \"},\"2299\":{\"h\":\"RemoteCall\"},\"2300\":{\"h\":\"介绍\",\"a\":\"介绍\"},\"2301\":{\"t\":\"通过公开接口，可实现更多的配置文件以外的自定义以及二次开发\"},\"2302\":{\"h\":\"使用方法\",\"a\":\"使用方法\"},\"2303\":{\"t\":\"基于 LiteLoader 的 RemoteCall 功能\"},\"2304\":{\"t\":\"使用脚本联动\"},\"2305\":{\"h\":\"Statistics\"},\"2306\":{\"h\":\"Statistics::GetPlayerStatistics\",\"a\":\"statistics-getplayerstatistics\"},\"2307\":{\"h\":\"获取指定玩家的统计数据（JSON字符串）\",\"a\":\"获取指定玩家的统计数据-json字符串\"},\"2308\":{\"t\":\"形参\"},\"2309\":{\"t\":\"类型\"},\"2310\":{\"t\":\"playerXuid\"},\"2311\":{\"t\":\"string\"},\"2312\":{\"t\":\"返回值类型：string;\"},\"2313\":{\"t\":\"JavaScript\"},\"2314\":{\"t\":\"/** 获取指定玩家的统计数据（JSON字符串） 返回值类型：string */ const Statistics_GetPlayerStatistics = ll.import(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"); let result = Statistics_GetPlayerStatistics(playerXuid); \"},\"2315\":{\"t\":\"C++\"},\"2316\":{\"t\":\"// 获取指定玩家的统计数据（JSON字符串） 返回值类型：string auto Statistics_GetPlayerStatistics = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"); auto result = Statistics_GetPlayerStatistics(playerXuid); \"},\"2317\":{\"t\":\"C#\"},\"2318\":{\"t\":\"// 获取指定玩家的统计数据（JSON字符串） 返回值类型：string var Statistics_GetPlayerStatistics = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"); var result = Statistics_GetPlayerStatistics(playerXuid); \"},\"2319\":{\"t\":\"Visual Basic .NET\"},\"2320\":{\"t\":\"' 获取指定玩家的统计数据（JSON字符串） 返回值类型：string Dim Statistics_GetPlayerStatistics = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\") Dim result = Statistics_GetPlayerStatistics(playerXuid) \"},\"2321\":{\"t\":\"F#\"},\"2322\":{\"t\":\"// 获取指定玩家的统计数据（JSON字符串） 返回值类型：string let Statistics_GetPlayerStatistics = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\") playerXuid |>Statistics_GetPlayerStatistics.Invoke |>ignore \"},\"2323\":{\"h\":\"Statistics::SetPlayerStatistics\",\"a\":\"statistics-setplayerstatistics\"},\"2324\":{\"h\":\"设定指定玩家的统计数据（JSON字符串）\",\"a\":\"设定指定玩家的统计数据-json字符串\"},\"2325\":{\"t\":\"形参\"},\"2326\":{\"t\":\"类型\"},\"2327\":{\"t\":\"playerXuid\"},\"2328\":{\"t\":\"string\"},\"2329\":{\"t\":\"newData\"},\"2330\":{\"t\":\"string\"},\"2331\":{\"t\":\"无返回值;\"},\"2332\":{\"t\":\"JavaScript\"},\"2333\":{\"t\":\"/** 设定指定玩家的统计数据（JSON字符串） */ const Statistics_SetPlayerStatistics = ll.import(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"); Statistics_SetPlayerStatistics(playerXuid,newData); \"},\"2334\":{\"t\":\"C++\"},\"2335\":{\"t\":\"// 设定指定玩家的统计数据（JSON字符串） auto Statistics_SetPlayerStatistics = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& newData)>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"); Statistics_SetPlayerStatistics(playerXuid,newData); \"},\"2336\":{\"t\":\"C#\"},\"2337\":{\"t\":\"// 设定指定玩家的统计数据（JSON字符串） var Statistics_SetPlayerStatistics = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"); Statistics_SetPlayerStatistics(playerXuid,newData); \"},\"2338\":{\"t\":\"Visual Basic .NET\"},\"2339\":{\"t\":\"' 设定指定玩家的统计数据（JSON字符串） Dim Statistics_SetPlayerStatistics = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\") Statistics_SetPlayerStatistics(playerXuid,newData) \"},\"2340\":{\"t\":\"F#\"},\"2341\":{\"t\":\"// 设定指定玩家的统计数据（JSON字符串） let Statistics_SetPlayerStatistics = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\") (playerXuid,newData) |>Statistics_SetPlayerStatistics.Invoke \"},\"2342\":{\"h\":\"Tpa\"},\"2343\":{\"h\":\"Tpa::GetTemp\",\"a\":\"tpa-gettemp\"},\"2344\":{\"h\":\"获取指定玩家的Tpa缓存（JSON字符串）\",\"a\":\"获取指定玩家的tpa缓存-json字符串\"},\"2345\":{\"t\":\"形参\"},\"2346\":{\"t\":\"类型\"},\"2347\":{\"t\":\"playerXuid\"},\"2348\":{\"t\":\"string\"},\"2349\":{\"t\":\"返回值类型：string;\"},\"2350\":{\"t\":\"JavaScript\"},\"2351\":{\"t\":\"/** 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string */ const Tpa_GetTemp = ll.import(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"); let result = Tpa_GetTemp(playerXuid); \"},\"2352\":{\"t\":\"C++\"},\"2353\":{\"t\":\"// 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string auto Tpa_GetTemp = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"); auto result = Tpa_GetTemp(playerXuid); \"},\"2354\":{\"t\":\"C#\"},\"2355\":{\"t\":\"// 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string var Tpa_GetTemp = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"); var result = Tpa_GetTemp(playerXuid); \"},\"2356\":{\"t\":\"Visual Basic .NET\"},\"2357\":{\"t\":\"' 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string Dim Tpa_GetTemp = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\") Dim result = Tpa_GetTemp(playerXuid) \"},\"2358\":{\"t\":\"F#\"},\"2359\":{\"t\":\"// 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string let Tpa_GetTemp = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\") playerXuid |>Tpa_GetTemp.Invoke |>ignore \"},\"2360\":{\"h\":\"示例\"},\"2361\":{\"h\":\"介绍\",\"a\":\"介绍\"},\"2362\":{\"t\":\"本文件夹有一些简单的示例，可以参考使用\"},\"2363\":{\"h\":\"命令接口\"},\"2364\":{\"h\":\"使用 LLJS 重写和替换自带命令\",\"a\":\"使用-lljs-重写和替换自带命令\"},\"2365\":{\"t\":\"/// <reference path=\\\"./PixelFaramitaLuminousPolymerization/scripts/node_modules/@pf/index.d.ts\\\" /> /// <reference path=\\\"A:/Documents/GitHub/HelperLib/src/index.d.ts\\\" /> mc.listen(\\\"onServerStarted\\\", () => { //添加监听，在服务器启动后，保证$pf变量正确获取 $pf.Api.Command.RenameCommand(\\\"land\\\", \\\"\\\"); //隐藏PFLP默认的land命令 const cmd = mc.newCommand(\\\"land\\\", \\\"测试\\\"); //创建新的命令 cmd.overload(); cmd.setCallback((cmd, origin, output, result) => { output.addMessage(\\\"§a执行land\\\"); //执行真land命令（执行PFLP内置的land命令） $pf.Api.Command.ExecuteInternalCommand( origin.player.xuid, \\\"/land create 3d\\\" ); log(origin.player.name + \\\"执行了land命令\\\"); }); cmd.setup(); //注册命令 }); \"},\"2366\":{\"h\":\"注册变量\"},\"2367\":{\"h\":\"示例（以彩色延迟为例）\",\"a\":\"示例-以彩色延迟为例\"},\"2368\":{\"t\":\"效果：配置文件各个地方可以直接使用变量%colorping%\"},\"2369\":{\"t\":\"这里提供两种方法\"},\"2370\":{\"t\":\"普通 LLJS 脚本（放在 plugins 目录）\"},\"2371\":{\"t\":\"/// <reference path=\\\"./PixelFaramitaLuminousPolymerization/scripts/node_modules/@pf/index.d.ts\\\" /> /// <reference path=\\\"A:/Documents/GitHub/HelperLib/src/index.d.ts\\\" /> mc.listen(\\\"onServerStarted\\\", () => { //添加监听，在服务器启动后，保证$pf变量正确获取 $pf.Format.Add(\\\"colorping\\\", (xuid, xuidLang, fmt, extra) => { const val = $pf.Api.Format.GetVariableInt(xuid, \\\"ping\\\"); if (val <= 0) { return \\\"?\\\"; } else if (val <= 50) { return \\\"§a\\\" + val + \\\"§r\\\"; } else if (val <= 80) { return \\\"§2\\\" + val + \\\"§r\\\"; } else if (val <= 110) { return \\\"§g\\\" + val + \\\"§r\\\"; } else { return \\\"§c\\\" + val + \\\"§r\\\"; } }); }); \"},\"2372\":{\"t\":\"内置脚本（放在 PFLP 的 scripts 文件夹下面）\"},\"2373\":{\"t\":\"//使用方法： // 放在PFLP的scripts文件夹下面 // 然后在配置文件各个地方可以直接使用变量%colorping% import { Format, Api } from \\\"@pf\\\"; Format.Add(\\\"colorping\\\", (xuid, xuidLang, fmt, extra) => { const val = Api.Format.GetVariableInt(xuid, \\\"ping\\\"); if (val <= 0) { return \\\"?\\\"; } else if (val <= 50) { return \\\"§a\\\" + val + \\\"§r\\\"; } else if (val <= 80) { return \\\"§2\\\" + val + \\\"§r\\\"; } else if (val <= 110) { return \\\"§g\\\" + val + \\\"§r\\\"; } else { return \\\"§c\\\" + val + \\\"§r\\\"; } }); \"},\"2374\":{\"h\":\"扩展WebUI功能\"},\"2375\":{\"t\":\"lljs\"},\"2376\":{\"t\":\"//使用方法： // 放在LL的plugins文件夹下面 // PFLP在获取IP位置的时候会调用这个事件，然后可以通过自定义API获取IP位并设置到PFLP的缓存里面，下次会通过缓存获取IP位置 // 也可以通过$pf.Api.Location.GetAllCacheData();获取全部缓存数据 /// <reference path=\\\"./PixelFaramitaLuminousPolymerization/scripts/node_modules/@pf/index.d.ts\\\" /> /// <reference path=\\\"A:/Documents/GitHub/HelperLib/src/index.d.ts\\\" /> //服务器启动，保证$pf注册成功 mc.listen(\\\"onServerStarted\\\", () => { //监听获取IP位置事件 $pf.listen($pf.EventKey.tryGetIpLocation, (ip) => { //使用network模块获取IP位置 network.httpGet(\\\"http://ip-api.com/json/\\\" + ip, (stateCode, result) => { $pf.log(result); let data = JSON.parse(result); let country = data.country; let province = data.regionName; let city = data.city; let isp = data.isp; //设置IP位置缓存 $pf.Api.Location.SetIpLocation(ip, country, province, city, \\\"\\\", isp, \\\"\\\"); }); }); throw new Error(\\\"测试\\\"); }); mc.listen(\\\"onServerStarted\\\", () => { $pf.listen($pf.EventKey.webUIGetName, (xuid, name) => { return `<a href=\\\"https://baidu.com\\\">${name}</a>`; //写html以显示玩家名称 }); }); \"},\"2377\":{\"h\":\"修改统计变量\"},\"2378\":{\"h\":\"修改 统计数据 模块的变量\",\"a\":\"修改统计数据模块的变量\"},\"2379\":{\"t\":\"如实现玩家花费游戏币赎罪（减少击杀次数）等\"},\"2380\":{\"t\":\"/// <reference path=\\\"./PixelFaramitaLuminousPolymerization/scripts/node_modules/@pf/index.d.ts\\\" /> /// <reference path=\\\"A:/Documents/GitHub/HelperLib/src/index.d.ts\\\" /> mc.listen(\\\"onServerStarted\\\", () => { //获取 //var info = $pf.Api.Statistics.GetPlayerStatistics(\\\"2535445286243008\\\"); //$pf.log(JSON.stringify(info, null, 2)); //设定 $pf.Api.Statistics.SetPlayerStatistics(\\\"2535445286243008\\\", { OnlineTime: 233, }); }); \"},\"2381\":{\"h\":\"扩展WebUI功能\"},\"2382\":{\"h\":\"修改玩家的显示昵称（主要在聊天界面）\",\"a\":\"修改玩家的显示昵称-主要在聊天界面\"},\"2383\":{\"t\":\"可以实现自定义称号显示等\"},\"2384\":{\"t\":\"mc.listen(\\\"onServerStarted\\\", () => { $pf.listen($pf.EventKey.webUIGetName, (xuid, name) => { return `<a href=\\\"https://baidu.com\\\">${name}</a>`; //写html以显示玩家名称 }); }); \"},\"2385\":{\"h\":\"汇总 C++ SDK\"},\"2386\":{\"t\":\"// 设置全局配置文件（要求JSON字符串） 返回值类型：bool auto General_SetConfig = RemoteCall::importAs<bool(std::string const& jsonStr)>(\\\"PFLP\\\", \\\"General::SetConfig\\\"); // 获取全局配置文件（JSON字符串） 返回值类型：string auto General_GetConfig = RemoteCall::importAs<std::string()>(\\\"PFLP\\\", \\\"General::GetConfig\\\"); // 重新加载所有功能的配置文件 auto General_Reload = RemoteCall::importAs<void()>(\\\"PFLP\\\", \\\"General::Reload\\\"); // 获取全部IP归属地缓存（JSON字符串） 返回值类型：string auto Location_GetAllCacheData = RemoteCall::importAs<std::string()>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"); // 设置IP归属地缓存 auto Location_SetIpLocation = RemoteCall::importAs<void(std::string const& ip,std::string const& country,std::string const& province,std::string const& city,std::string const& area,std::string const& isp,std::string const& language)>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"); // 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string auto Tpa_GetTemp = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"); // 获取指定玩家的统计数据（JSON字符串） 返回值类型：string auto Statistics_GetPlayerStatistics = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"); // 设定指定玩家的统计数据（JSON字符串） auto Statistics_SetPlayerStatistics = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& newData)>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"); // 获取变量 返回值类型：string auto Format_GetVariableString = RemoteCall::importAs<std::string(std::string const& playerXuid,std::string const& name,std::string const& format)>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"); // 获取变量，但是强制返回int类型 返回值类型：int auto Format_GetVariableInt = RemoteCall::importAs<int(std::string const& playerXuid,std::string const& name)>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"); // 获取变量，但是强制返回float类型 返回值类型：float auto Format_GetVariableFloat = RemoteCall::importAs<float(std::string const& playerXuid,std::string const& name)>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"); // 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string auto Format_FormatRawString = RemoteCall::importAs<std::string(std::string const& playerXuid,std::string const& rawFormat)>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"); // 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool auto Format_DefineFormat = RemoteCall::importAs<bool(std::string const& id,std::string const& rawFormat)>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"); // 移除格式化定义（返回true为存在并移除） 返回值类型：bool auto Format_RemoveFormat = RemoteCall::importAs<bool(std::string const& id)>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"); // 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string auto Format_GetFormatWithPlayer = RemoteCall::importAs<std::string(std::string const& id,std::string const& playerXuid,std::string const& extra)>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"); // 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string auto Format_GetFormatWithPlayerLang = RemoteCall::importAs<std::string(std::string const& id,std::string const& playerXuid,std::string const& playerLangXuid,std::string const& extra)>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"); // 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string auto Format_GetFormat = RemoteCall::importAs<std::string(std::string const& id,std::string const& extra)>(\\\"PFLP\\\", \\\"Format::GetFormat\\\"); // 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) auto Command_RenameCommand = RemoteCall::importAs<void(std::string const& cmd,std::string const& newCmd)>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"); // 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool auto Command_ExecuteInternalCommand = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& cmd)>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"); // 设置命令禁用(可设置提示)(支持任意命令) auto Command_SetCommandDisabled = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& cmd,std::string const& feedback)>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"); // 设置命令启用 auto Command_SetCommandEnabled = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& cmd)>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"); // 翻译 返回值类型：string auto Language_Translate = RemoteCall::importAs<std::string(std::string const& fromLanguage,std::string const& toLanguage,std::string const& text)>(\\\"PFLP\\\", \\\"Language::Translate\\\"); // 设置玩家昵称 auto ChatEx_SetNickName = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& nickName)>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"); // 设置玩家聊天时的名字 auto ChatEx_SetFakeName = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& fakeName)>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"); // 设置玩家聊天消息后缀 auto ChatEx_SetEnd = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& endStr)>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"); // 设置玩家聊天消息前缀 auto ChatEx_SetStart = RemoteCall::importAs<void(std::string const& playerXuid,std::string const& startStr)>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"); // 获取玩家昵称 返回值类型：string auto ChatEx_GetNickName = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"); // 获取玩家聊天时的名字 返回值类型：string auto ChatEx_GetFakeName = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"); // 获取玩家聊天消息后缀 返回值类型：string auto ChatEx_GetEnd = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"); // 获取玩家聊天消息前缀 返回值类型：string auto ChatEx_GetStart = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"); // 给指定方块描框 auto ParticlesGraphics_DrawBlock = RemoteCall::importAs<void(std::string const& playerXuid,int const& x,int const& y,int const& z,float const& r,float const& g,float const& b,float const& thickness,float const& time,float const& alpha)>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"); // 给指定区域描框 auto ParticlesGraphics_DrawBorder = RemoteCall::importAs<void(std::string const& playerXuid,int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,float const& r,float const& g,float const& b,float const& thickness,float const& time,float const& alpha)>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"); // 检查指定立方体区域(float)是否有领地 返回值类型：bool auto Lands_CheckCubeHasLand = RemoteCall::importAs<bool(float const& x1,float const& y1,float const& z1,float const& x2,float const& y2,float const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"); // 检查指定立方体区域(int)是否有领地 返回值类型：bool auto Lands_CheckCubeHasLandInt = RemoteCall::importAs<bool(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"); // 检查指定坐标(float)是否有领地 返回值类型：bool auto Lands_CheckPosHasLand = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"); // 检查指定坐标(int)是否有领地 返回值类型：bool auto Lands_CheckPosHasLandInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"); // 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByCube = RemoteCall::importAs<std::string(float const& x1,float const& y1,float const& z1,float const& x2,float const& y2,float const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"); // 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByCubeInt = RemoteCall::importAs<std::string(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"); // 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByPos = RemoteCall::importAs<std::string(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"); // 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandByPosInt = RemoteCall::importAs<std::string(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"); // 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByCube = RemoteCall::importAs<std::string(float const& x1,float const& y1,float const& z1,float const& x2,float const& y2,float const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"); // 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByCubeInt = RemoteCall::importAs<std::string(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"); // 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByPos = RemoteCall::importAs<std::string(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"); // 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string auto Lands_GetLandInfoByPosInt = RemoteCall::importAs<std::string(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"); // 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool auto Lands_SetLandInfoByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& landinfo)>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"); // 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool auto Lands_SetLandInfoByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& landinfo)>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"); // 新建领地 返回值类型：bool auto Lands_CreateLand2D = RemoteCall::importAs<bool(int const& x1,int const& z1,int const& x2,int const& z2,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"); // 新建领地 返回值类型：bool auto Lands_CreateLand3D = RemoteCall::importAs<bool(int const& x1,int const& y1,int const& z1,int const& x2,int const& y2,int const& z2,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"); // 删除指定坐标(float)的领地 返回值类型：bool auto Lands_DeleteLandByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"); // 删除指定坐标(int)的领地 返回值类型：bool auto Lands_DeleteLandByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId)>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"); // 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string auto Lands_GetLandPermissionByPos = RemoteCall::importAs<std::string(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"); // 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string auto Lands_GetLandPermissionByPosInt = RemoteCall::importAs<std::string(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"); // 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool auto Lands_CheckLandPermissionByPos = RemoteCall::importAs<bool(std::string const& permissionId,float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"); // 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool auto Lands_CheckLandPermissionByPosInt = RemoteCall::importAs<bool(std::string const& permissionId,int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"); // 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool auto Lands_CheckPlayerIsLandOwnerByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"); // 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool auto Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"); // 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool auto Lands_CheckIsLandSharedToPlayerByPos = RemoteCall::importAs<bool(float const& x,float const& y,float const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"); // 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool auto Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"); // (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool auto Lands_CheckPlayerHasCreateChestPermission = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"); // (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool auto Lands_CheckPlayerHasOpenChestPermission = RemoteCall::importAs<bool(int const& x,int const& y,int const& z,int const& dimensionId,std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"); // 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string auto Lands_GetPlayerAllPermissionGroupId = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"); // 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string auto Lands_GetPlayerPermissionGroup = RemoteCall::importAs<std::string(std::string const& playerXuid,std::string const& permissionGroupId)>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"); // 删玩家权限组(指定ID) 返回值类型：bool auto Lands_DeletePlayerPermissionGroup = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& permissionGroupId)>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"); // 修改家权限组内容(指定ID) 返回值类型：bool auto Lands_EditPlayerPermissionGroup = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& permissionGroupId,std::string const& jsonString)>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"); // 添加权限组 返回值类型：bool auto Lands_AddPlayerPermissionGroup = RemoteCall::importAs<bool(std::string const& playerXuid,std::string const& permissionGroupId,std::string const& jsonString)>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"); // 取玩家拥有的领地 返回值类型：string auto Lands_GetLandsOwnedByPlayer = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"); // 取共享给玩家的领地 返回值类型：string auto Lands_GetLandsSharedToPlayer = RemoteCall::importAs<std::string(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"); // 创建浮空字(给玩家发包) 返回值类型：int auto FloatText_Add = RemoteCall::importAs<int(std::string const& playerXuid,float const& x,float const& y,float const& z,std::string const& text)>(\\\"PFLP\\\", \\\"FloatText::Add\\\"); // 移除浮空字(给玩家发包) auto FloatText_Remove = RemoteCall::importAs<void(std::string const& playerXuid,int const& id)>(\\\"PFLP\\\", \\\"FloatText::Remove\\\"); // 获取玩家(指定玩家名)金钱 返回值类型：long auto Money_Get = RemoteCall::importAs<long long(std::string const& playerXuid)>(\\\"PFLP\\\", \\\"Money::Get\\\"); // 给玩家(指定玩家名)加钱 auto Money_Add = RemoteCall::importAs<void(std::string const& playerXuid,long long const& count,std::string const& info)>(\\\"PFLP\\\", \\\"Money::Add\\\"); // 给玩家(指定玩家名)减钱 auto Money_Remove = RemoteCall::importAs<void(std::string const& playerXuid,long long const& count,std::string const& info)>(\\\"PFLP\\\", \\\"Money::Remove\\\"); \"},\"2387\":{\"h\":\"汇总 C# SDK\"},\"2388\":{\"t\":\"C# imports / 直接导入\"},\"2389\":{\"t\":\"using RemoteCallAPI = LiteLoader.RemoteCall.RemoteCallAPI; // 设置全局配置文件（要求JSON字符串） 返回值类型：bool var General_SetConfig = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"General::SetConfig\\\"); // 获取全局配置文件（JSON字符串） 返回值类型：string var General_GetConfig = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"General::GetConfig\\\"); // 重新加载所有功能的配置文件 var General_Reload = RemoteCallAPI.ImportAs<Action>(\\\"PFLP\\\", \\\"General::Reload\\\"); // 获取全部IP归属地缓存（JSON字符串） 返回值类型：string var Location_GetAllCacheData = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"); // 设置IP归属地缓存 var Location_SetIpLocation = RemoteCallAPI.ImportAs<Action<string,string,string,string,string,string,string>>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"); // 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string var Tpa_GetTemp = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"); // 获取指定玩家的统计数据（JSON字符串） 返回值类型：string var Statistics_GetPlayerStatistics = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"); // 设定指定玩家的统计数据（JSON字符串） var Statistics_SetPlayerStatistics = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"); // 获取变量 返回值类型：string var Format_GetVariableString = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"); // 获取变量，但是强制返回int类型 返回值类型：int var Format_GetVariableInt = RemoteCallAPI.ImportAs<Func<string,string,int>>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"); // 获取变量，但是强制返回float类型 返回值类型：float var Format_GetVariableFloat = RemoteCallAPI.ImportAs<Func<string,string,float>>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"); // 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string var Format_FormatRawString = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"); // 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool var Format_DefineFormat = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"); // 移除格式化定义（返回true为存在并移除） 返回值类型：bool var Format_RemoveFormat = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"); // 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string var Format_GetFormatWithPlayer = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"); // 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string var Format_GetFormatWithPlayerLang = RemoteCallAPI.ImportAs<Func<string,string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"); // 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string var Format_GetFormat = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormat\\\"); // 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) var Command_RenameCommand = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"); // 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool var Command_ExecuteInternalCommand = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"); // 设置命令禁用(可设置提示)(支持任意命令) var Command_SetCommandDisabled = RemoteCallAPI.ImportAs<Action<string,string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"); // 设置命令启用 var Command_SetCommandEnabled = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"); // 翻译 返回值类型：string var Language_Translate = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Language::Translate\\\"); // 设置玩家昵称 var ChatEx_SetNickName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"); // 设置玩家聊天时的名字 var ChatEx_SetFakeName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"); // 设置玩家聊天消息后缀 var ChatEx_SetEnd = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"); // 设置玩家聊天消息前缀 var ChatEx_SetStart = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"); // 获取玩家昵称 返回值类型：string var ChatEx_GetNickName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"); // 获取玩家聊天时的名字 返回值类型：string var ChatEx_GetFakeName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"); // 获取玩家聊天消息后缀 返回值类型：string var ChatEx_GetEnd = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"); // 获取玩家聊天消息前缀 返回值类型：string var ChatEx_GetStart = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"); // 给指定方块描框 var ParticlesGraphics_DrawBlock = RemoteCallAPI.ImportAs<Action<string,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"); // 给指定区域描框 var ParticlesGraphics_DrawBorder = RemoteCallAPI.ImportAs<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"); // 检查指定立方体区域(float)是否有领地 返回值类型：bool var Lands_CheckCubeHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"); // 检查指定立方体区域(int)是否有领地 返回值类型：bool var Lands_CheckCubeHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"); // 检查指定坐标(float)是否有领地 返回值类型：bool var Lands_CheckPosHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"); // 检查指定坐标(int)是否有领地 返回值类型：bool var Lands_CheckPosHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"); // 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"); // 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"); // 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"); // 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string var Lands_GetLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"); // 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"); // 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"); // 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"); // 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string var Lands_GetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"); // 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool var Lands_SetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"); // 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool var Lands_SetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"); // 新建领地 返回值类型：bool var Lands_CreateLand2D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"); // 新建领地 返回值类型：bool var Lands_CreateLand3D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"); // 删除指定坐标(float)的领地 返回值类型：bool var Lands_DeleteLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"); // 删除指定坐标(int)的领地 返回值类型：bool var Lands_DeleteLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"); // 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string var Lands_GetLandPermissionByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"); // 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string var Lands_GetLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"); // 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool var Lands_CheckLandPermissionByPos = RemoteCallAPI.ImportAs<Func<string,float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"); // 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool var Lands_CheckLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<string,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"); // 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool var Lands_CheckPlayerIsLandOwnerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"); // 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool var Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"); // 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool var Lands_CheckIsLandSharedToPlayerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"); // 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool var Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"); // (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool var Lands_CheckPlayerHasCreateChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"); // (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool var Lands_CheckPlayerHasOpenChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"); // 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string var Lands_GetPlayerAllPermissionGroupId = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"); // 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string var Lands_GetPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"); // 删玩家权限组(指定ID) 返回值类型：bool var Lands_DeletePlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"); // 修改家权限组内容(指定ID) 返回值类型：bool var Lands_EditPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"); // 添加权限组 返回值类型：bool var Lands_AddPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"); // 取玩家拥有的领地 返回值类型：string var Lands_GetLandsOwnedByPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"); // 取共享给玩家的领地 返回值类型：string var Lands_GetLandsSharedToPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"); // 创建浮空字(给玩家发包) 返回值类型：int var FloatText_Add = RemoteCallAPI.ImportAs<Func<string,float,float,float,string,int>>(\\\"PFLP\\\", \\\"FloatText::Add\\\"); // 移除浮空字(给玩家发包) var FloatText_Remove = RemoteCallAPI.ImportAs<Action<string,int>>(\\\"PFLP\\\", \\\"FloatText::Remove\\\"); // 获取玩家(指定玩家名)金钱 返回值类型：long var Money_Get = RemoteCallAPI.ImportAs<Func<string,long>>(\\\"PFLP\\\", \\\"Money::Get\\\"); // 给玩家(指定玩家名)加钱 var Money_Add = RemoteCallAPI.ImportAs<Action<string,long,string>>(\\\"PFLP\\\", \\\"Money::Add\\\"); // 给玩家(指定玩家名)减钱 var Money_Remove = RemoteCallAPI.ImportAs<Action<string,long,string>>(\\\"PFLP\\\", \\\"Money::Remove\\\"); \"},\"2390\":{\"t\":\"C# class / C#静态类定义（推荐）\"},\"2391\":{\"t\":\"using RemoteCallAPI = LiteLoader.RemoteCall.RemoteCallAPI; internal static class PFLP { public static class General { private static Lazy<Func<string,bool>> General_SetConfig_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"General::SetConfig\\\")); /// <summary> 设置全局配置文件（要求JSON字符串） 返回值类型：bool </summary> public static bool SetConfig(string jsonStr) { return General_SetConfig_instance.Value(jsonStr); } private static Lazy<Func<string>> General_GetConfig_instance = new(()=> RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"General::GetConfig\\\")); /// <summary> 获取全局配置文件（JSON字符串） 返回值类型：string </summary> public static string GetConfig() { return General_GetConfig_instance.Value(); } private static Lazy<Action> General_Reload_instance = new(()=> RemoteCallAPI.ImportAs<Action>(\\\"PFLP\\\", \\\"General::Reload\\\")); /// <summary> 重新加载所有功能的配置文件 </summary> public static void Reload() { General_Reload_instance.Value(); } } public static class Location { private static Lazy<Func<string>> Location_GetAllCacheData_instance = new(()=> RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\")); /// <summary> 获取全部IP归属地缓存（JSON字符串） 返回值类型：string </summary> public static string GetAllCacheData() { return Location_GetAllCacheData_instance.Value(); } private static Lazy<Action<string,string,string,string,string,string,string>> Location_SetIpLocation_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string,string,string,string,string,string>>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\")); /// <summary> 设置IP归属地缓存 </summary> public static void SetIpLocation(string ip,string country,string province,string city,string area,string isp,string language) { Location_SetIpLocation_instance.Value(ip,country,province,city,area,isp,language); } } public static class Tpa { private static Lazy<Func<string,string>> Tpa_GetTemp_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\")); /// <summary> 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string </summary> public static string GetTemp(string playerXuid) { return Tpa_GetTemp_instance.Value(playerXuid); } } public static class Statistics { private static Lazy<Func<string,string>> Statistics_GetPlayerStatistics_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\")); /// <summary> 获取指定玩家的统计数据（JSON字符串） 返回值类型：string </summary> public static string GetPlayerStatistics(string playerXuid) { return Statistics_GetPlayerStatistics_instance.Value(playerXuid); } private static Lazy<Action<string,string>> Statistics_SetPlayerStatistics_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\")); /// <summary> 设定指定玩家的统计数据（JSON字符串） </summary> public static void SetPlayerStatistics(string playerXuid,string newData) { Statistics_SetPlayerStatistics_instance.Value(playerXuid,newData); } } public static class Format { private static Lazy<Func<string,string,string,string>> Format_GetVariableString_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\")); /// <summary> 获取变量 返回值类型：string </summary> public static string GetVariableString(string playerXuid,string name,string format) { return Format_GetVariableString_instance.Value(playerXuid,name,format); } private static Lazy<Func<string,string,int>> Format_GetVariableInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,int>>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\")); /// <summary> 获取变量，但是强制返回int类型 返回值类型：int </summary> public static int GetVariableInt(string playerXuid,string name) { return Format_GetVariableInt_instance.Value(playerXuid,name); } private static Lazy<Func<string,string,float>> Format_GetVariableFloat_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,float>>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\")); /// <summary> 获取变量，但是强制返回float类型 返回值类型：float </summary> public static float GetVariableFloat(string playerXuid,string name) { return Format_GetVariableFloat_instance.Value(playerXuid,name); } private static Lazy<Func<string,string,string>> Format_FormatRawString_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\")); /// <summary> 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string </summary> public static string FormatRawString(string playerXuid,string rawFormat) { return Format_FormatRawString_instance.Value(playerXuid,rawFormat); } private static Lazy<Func<string,string,bool>> Format_DefineFormat_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\")); /// <summary> 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool </summary> public static bool DefineFormat(string id,string rawFormat) { return Format_DefineFormat_instance.Value(id,rawFormat); } private static Lazy<Func<string,bool>> Format_RemoveFormat_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\")); /// <summary> 移除格式化定义（返回true为存在并移除） 返回值类型：bool </summary> public static bool RemoveFormat(string id) { return Format_RemoveFormat_instance.Value(id); } private static Lazy<Func<string,string,string,string>> Format_GetFormatWithPlayer_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\")); /// <summary> 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string </summary> public static string GetFormatWithPlayer(string id,string playerXuid,string extra) { return Format_GetFormatWithPlayer_instance.Value(id,playerXuid,extra); } private static Lazy<Func<string,string,string,string,string>> Format_GetFormatWithPlayerLang_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\")); /// <summary> 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string </summary> public static string GetFormatWithPlayerLang(string id,string playerXuid,string playerLangXuid,string extra) { return Format_GetFormatWithPlayerLang_instance.Value(id,playerXuid,playerLangXuid,extra); } private static Lazy<Func<string,string,string>> Format_GetFormat_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormat\\\")); /// <summary> 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string </summary> public static string GetFormat(string id,string extra) { return Format_GetFormat_instance.Value(id,extra); } } public static class Command { private static Lazy<Action<string,string>> Command_RenameCommand_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\")); /// <summary> 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) </summary> public static void RenameCommand(string cmd,string newCmd) { Command_RenameCommand_instance.Value(cmd,newCmd); } private static Lazy<Func<string,string,bool>> Command_ExecuteInternalCommand_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\")); /// <summary> 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool </summary> public static bool ExecuteInternalCommand(string playerXuid,string cmd) { return Command_ExecuteInternalCommand_instance.Value(playerXuid,cmd); } private static Lazy<Action<string,string,string>> Command_SetCommandDisabled_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\")); /// <summary> 设置命令禁用(可设置提示)(支持任意命令) </summary> public static void SetCommandDisabled(string playerXuid,string cmd,string feedback) { Command_SetCommandDisabled_instance.Value(playerXuid,cmd,feedback); } private static Lazy<Action<string,string>> Command_SetCommandEnabled_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\")); /// <summary> 设置命令启用 </summary> public static void SetCommandEnabled(string playerXuid,string cmd) { Command_SetCommandEnabled_instance.Value(playerXuid,cmd); } } public static class Language { private static Lazy<Func<string,string,string,string>> Language_Translate_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Language::Translate\\\")); /// <summary> 翻译 返回值类型：string </summary> public static string Translate(string fromLanguage,string toLanguage,string text) { return Language_Translate_instance.Value(fromLanguage,toLanguage,text); } } public static class ChatEx { private static Lazy<Action<string,string>> ChatEx_SetNickName_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\")); /// <summary> 设置玩家昵称 </summary> public static void SetNickName(string playerXuid,string nickName) { ChatEx_SetNickName_instance.Value(playerXuid,nickName); } private static Lazy<Action<string,string>> ChatEx_SetFakeName_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\")); /// <summary> 设置玩家聊天时的名字 </summary> public static void SetFakeName(string playerXuid,string fakeName) { ChatEx_SetFakeName_instance.Value(playerXuid,fakeName); } private static Lazy<Action<string,string>> ChatEx_SetEnd_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\")); /// <summary> 设置玩家聊天消息后缀 </summary> public static void SetEnd(string playerXuid,string endStr) { ChatEx_SetEnd_instance.Value(playerXuid,endStr); } private static Lazy<Action<string,string>> ChatEx_SetStart_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\")); /// <summary> 设置玩家聊天消息前缀 </summary> public static void SetStart(string playerXuid,string startStr) { ChatEx_SetStart_instance.Value(playerXuid,startStr); } private static Lazy<Func<string,string>> ChatEx_GetNickName_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\")); /// <summary> 获取玩家昵称 返回值类型：string </summary> public static string GetNickName(string playerXuid) { return ChatEx_GetNickName_instance.Value(playerXuid); } private static Lazy<Func<string,string>> ChatEx_GetFakeName_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\")); /// <summary> 获取玩家聊天时的名字 返回值类型：string </summary> public static string GetFakeName(string playerXuid) { return ChatEx_GetFakeName_instance.Value(playerXuid); } private static Lazy<Func<string,string>> ChatEx_GetEnd_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\")); /// <summary> 获取玩家聊天消息后缀 返回值类型：string </summary> public static string GetEnd(string playerXuid) { return ChatEx_GetEnd_instance.Value(playerXuid); } private static Lazy<Func<string,string>> ChatEx_GetStart_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\")); /// <summary> 获取玩家聊天消息前缀 返回值类型：string </summary> public static string GetStart(string playerXuid) { return ChatEx_GetStart_instance.Value(playerXuid); } } public static class ParticlesGraphics { private static Lazy<Action<string,int,int,int,float,float,float,float,float,float>> ParticlesGraphics_DrawBlock_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\")); /// <summary> 给指定方块描框 </summary> public static void DrawBlock(string playerXuid,int x,int y,int z,float r,float g,float b,float thickness,float time,float alpha) { ParticlesGraphics_DrawBlock_instance.Value(playerXuid,x,y,z,r,g,b,thickness,time,alpha); } private static Lazy<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>> ParticlesGraphics_DrawBorder_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\")); /// <summary> 给指定区域描框 </summary> public static void DrawBorder(string playerXuid,int x1,int y1,int z1,int x2,int y2,int z2,float r,float g,float b,float thickness,float time,float alpha) { ParticlesGraphics_DrawBorder_instance.Value(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha); } } public static class Lands { private static Lazy<Func<float,float,float,float,float,float,int,bool>> Lands_CheckCubeHasLand_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\")); /// <summary> 检查指定立方体区域(float)是否有领地 返回值类型：bool </summary> public static bool CheckCubeHasLand(float x1,float y1,float z1,float x2,float y2,float z2,int dimensionId) { return Lands_CheckCubeHasLand_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId); } private static Lazy<Func<int,int,int,int,int,int,int,bool>> Lands_CheckCubeHasLandInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\")); /// <summary> 检查指定立方体区域(int)是否有领地 返回值类型：bool </summary> public static bool CheckCubeHasLandInt(int x1,int y1,int z1,int x2,int y2,int z2,int dimensionId) { return Lands_CheckCubeHasLandInt_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId); } private static Lazy<Func<float,float,float,int,bool>> Lands_CheckPosHasLand_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\")); /// <summary> 检查指定坐标(float)是否有领地 返回值类型：bool </summary> public static bool CheckPosHasLand(float x,float y,float z,int dimensionId) { return Lands_CheckPosHasLand_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<int,int,int,int,bool>> Lands_CheckPosHasLandInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\")); /// <summary> 检查指定坐标(int)是否有领地 返回值类型：bool </summary> public static bool CheckPosHasLandInt(int x,int y,int z,int dimensionId) { return Lands_CheckPosHasLandInt_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<float,float,float,float,float,float,int,string>> Lands_GetLandByCube_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\")); /// <summary> 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandByCube(float x1,float y1,float z1,float x2,float y2,float z2,int dimensionId) { return Lands_GetLandByCube_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId); } private static Lazy<Func<int,int,int,int,int,int,int,string>> Lands_GetLandByCubeInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\")); /// <summary> 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandByCubeInt(int x1,int y1,int z1,int x2,int y2,int z2,int dimensionId) { return Lands_GetLandByCubeInt_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId); } private static Lazy<Func<float,float,float,int,string>> Lands_GetLandByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\")); /// <summary> 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandByPos(float x,float y,float z,int dimensionId) { return Lands_GetLandByPos_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<int,int,int,int,string>> Lands_GetLandByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\")); /// <summary> 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandByPosInt(int x,int y,int z,int dimensionId) { return Lands_GetLandByPosInt_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<float,float,float,float,float,float,int,string>> Lands_GetLandInfoByCube_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\")); /// <summary> 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandInfoByCube(float x1,float y1,float z1,float x2,float y2,float z2,int dimensionId) { return Lands_GetLandInfoByCube_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId); } private static Lazy<Func<int,int,int,int,int,int,int,string>> Lands_GetLandInfoByCubeInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\")); /// <summary> 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandInfoByCubeInt(int x1,int y1,int z1,int x2,int y2,int z2,int dimensionId) { return Lands_GetLandInfoByCubeInt_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId); } private static Lazy<Func<float,float,float,int,string>> Lands_GetLandInfoByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\")); /// <summary> 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandInfoByPos(float x,float y,float z,int dimensionId) { return Lands_GetLandInfoByPos_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<int,int,int,int,string>> Lands_GetLandInfoByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\")); /// <summary> 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> public static string GetLandInfoByPosInt(int x,int y,int z,int dimensionId) { return Lands_GetLandInfoByPosInt_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<float,float,float,int,string,bool>> Lands_SetLandInfoByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\")); /// <summary> 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool </summary> public static bool SetLandInfoByPos(float x,float y,float z,int dimensionId,string landinfo) { return Lands_SetLandInfoByPos_instance.Value(x,y,z,dimensionId,landinfo); } private static Lazy<Func<int,int,int,int,string,bool>> Lands_SetLandInfoByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\")); /// <summary> 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool </summary> public static bool SetLandInfoByPosInt(int x,int y,int z,int dimensionId,string landinfo) { return Lands_SetLandInfoByPosInt_instance.Value(x,y,z,dimensionId,landinfo); } private static Lazy<Func<int,int,int,int,int,string,bool>> Lands_CreateLand2D_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\")); /// <summary> 新建领地 返回值类型：bool </summary> public static bool CreateLand2D(int x1,int z1,int x2,int z2,int dimensionId,string playerXuid) { return Lands_CreateLand2D_instance.Value(x1,z1,x2,z2,dimensionId,playerXuid); } private static Lazy<Func<int,int,int,int,int,int,int,string,bool>> Lands_CreateLand3D_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\")); /// <summary> 新建领地 返回值类型：bool </summary> public static bool CreateLand3D(int x1,int y1,int z1,int x2,int y2,int z2,int dimensionId,string playerXuid) { return Lands_CreateLand3D_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid); } private static Lazy<Func<float,float,float,int,bool>> Lands_DeleteLandByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\")); /// <summary> 删除指定坐标(float)的领地 返回值类型：bool </summary> public static bool DeleteLandByPos(float x,float y,float z,int dimensionId) { return Lands_DeleteLandByPos_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<int,int,int,int,bool>> Lands_DeleteLandByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\")); /// <summary> 删除指定坐标(int)的领地 返回值类型：bool </summary> public static bool DeleteLandByPosInt(int x,int y,int z,int dimensionId) { return Lands_DeleteLandByPosInt_instance.Value(x,y,z,dimensionId); } private static Lazy<Func<float,float,float,int,string,string>> Lands_GetLandPermissionByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\")); /// <summary> 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string </summary> public static string GetLandPermissionByPos(float x,float y,float z,int dimensionId,string playerXuid) { return Lands_GetLandPermissionByPos_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<int,int,int,int,string,string>> Lands_GetLandPermissionByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\")); /// <summary> 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string </summary> public static string GetLandPermissionByPosInt(int x,int y,int z,int dimensionId,string playerXuid) { return Lands_GetLandPermissionByPosInt_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<string,float,float,float,int,string,bool>> Lands_CheckLandPermissionByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\")); /// <summary> 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool </summary> public static bool CheckLandPermissionByPos(string permissionId,float x,float y,float z,int dimensionId,string playerXuid) { return Lands_CheckLandPermissionByPos_instance.Value(permissionId,x,y,z,dimensionId,playerXuid); } private static Lazy<Func<string,int,int,int,int,string,bool>> Lands_CheckLandPermissionByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\")); /// <summary> 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool </summary> public static bool CheckLandPermissionByPosInt(string permissionId,int x,int y,int z,int dimensionId,string playerXuid) { return Lands_CheckLandPermissionByPosInt_instance.Value(permissionId,x,y,z,dimensionId,playerXuid); } private static Lazy<Func<float,float,float,int,string,bool>> Lands_CheckPlayerIsLandOwnerByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\")); /// <summary> 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool </summary> public static bool CheckPlayerIsLandOwnerByPos(float x,float y,float z,int dimensionId,string playerXuid) { return Lands_CheckPlayerIsLandOwnerByPos_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<int,int,int,int,string,bool>> Lands_CheckPlayerIsLandOwnerByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\")); /// <summary> 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool </summary> public static bool CheckPlayerIsLandOwnerByPosInt(int x,int y,int z,int dimensionId,string playerXuid) { return Lands_CheckPlayerIsLandOwnerByPosInt_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<float,float,float,int,string,bool>> Lands_CheckIsLandSharedToPlayerByPos_instance = new(()=> RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\")); /// <summary> 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool </summary> public static bool CheckIsLandSharedToPlayerByPos(float x,float y,float z,int dimensionId,string playerXuid) { return Lands_CheckIsLandSharedToPlayerByPos_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<int,int,int,int,string,bool>> Lands_CheckIsLandSharedToPlayerByPosInt_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\")); /// <summary> 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool </summary> public static bool CheckIsLandSharedToPlayerByPosInt(int x,int y,int z,int dimensionId,string playerXuid) { return Lands_CheckIsLandSharedToPlayerByPosInt_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<int,int,int,int,string,bool>> Lands_CheckPlayerHasCreateChestPermission_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\")); /// <summary> (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool </summary> public static bool CheckPlayerHasCreateChestPermission(int x,int y,int z,int dimensionId,string playerXuid) { return Lands_CheckPlayerHasCreateChestPermission_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<int,int,int,int,string,bool>> Lands_CheckPlayerHasOpenChestPermission_instance = new(()=> RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\")); /// <summary> (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool </summary> public static bool CheckPlayerHasOpenChestPermission(int x,int y,int z,int dimensionId,string playerXuid) { return Lands_CheckPlayerHasOpenChestPermission_instance.Value(x,y,z,dimensionId,playerXuid); } private static Lazy<Func<string,string>> Lands_GetPlayerAllPermissionGroupId_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\")); /// <summary> 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string </summary> public static string GetPlayerAllPermissionGroupId(string playerXuid) { return Lands_GetPlayerAllPermissionGroupId_instance.Value(playerXuid); } private static Lazy<Func<string,string,string>> Lands_GetPlayerPermissionGroup_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\")); /// <summary> 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string </summary> public static string GetPlayerPermissionGroup(string playerXuid,string permissionGroupId) { return Lands_GetPlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId); } private static Lazy<Func<string,string,bool>> Lands_DeletePlayerPermissionGroup_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\")); /// <summary> 删玩家权限组(指定ID) 返回值类型：bool </summary> public static bool DeletePlayerPermissionGroup(string playerXuid,string permissionGroupId) { return Lands_DeletePlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId); } private static Lazy<Func<string,string,string,bool>> Lands_EditPlayerPermissionGroup_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\")); /// <summary> 修改家权限组内容(指定ID) 返回值类型：bool </summary> public static bool EditPlayerPermissionGroup(string playerXuid,string permissionGroupId,string jsonString) { return Lands_EditPlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId,jsonString); } private static Lazy<Func<string,string,string,bool>> Lands_AddPlayerPermissionGroup_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\")); /// <summary> 添加权限组 返回值类型：bool </summary> public static bool AddPlayerPermissionGroup(string playerXuid,string permissionGroupId,string jsonString) { return Lands_AddPlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId,jsonString); } private static Lazy<Func<string,string>> Lands_GetLandsOwnedByPlayer_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\")); /// <summary> 取玩家拥有的领地 返回值类型：string </summary> public static string GetLandsOwnedByPlayer(string playerXuid) { return Lands_GetLandsOwnedByPlayer_instance.Value(playerXuid); } private static Lazy<Func<string,string>> Lands_GetLandsSharedToPlayer_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\")); /// <summary> 取共享给玩家的领地 返回值类型：string </summary> public static string GetLandsSharedToPlayer(string playerXuid) { return Lands_GetLandsSharedToPlayer_instance.Value(playerXuid); } } public static class FloatText { private static Lazy<Func<string,float,float,float,string,int>> FloatText_Add_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,float,float,float,string,int>>(\\\"PFLP\\\", \\\"FloatText::Add\\\")); /// <summary> 创建浮空字(给玩家发包) 返回值类型：int </summary> public static int Add(string playerXuid,float x,float y,float z,string text) { return FloatText_Add_instance.Value(playerXuid,x,y,z,text); } private static Lazy<Action<string,int>> FloatText_Remove_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,int>>(\\\"PFLP\\\", \\\"FloatText::Remove\\\")); /// <summary> 移除浮空字(给玩家发包) </summary> public static void Remove(string playerXuid,int id) { FloatText_Remove_instance.Value(playerXuid,id); } } public static class Money { private static Lazy<Func<string,long>> Money_Get_instance = new(()=> RemoteCallAPI.ImportAs<Func<string,long>>(\\\"PFLP\\\", \\\"Money::Get\\\")); /// <summary> 获取玩家(指定玩家名)金钱 返回值类型：long </summary> public static long Get(string playerXuid) { return Money_Get_instance.Value(playerXuid); } private static Lazy<Action<string,long,string>> Money_Add_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,long,string>>(\\\"PFLP\\\", \\\"Money::Add\\\")); /// <summary> 给玩家(指定玩家名)加钱 </summary> public static void Add(string playerXuid,long count,string info) { Money_Add_instance.Value(playerXuid,count,info); } private static Lazy<Action<string,long,string>> Money_Remove_instance = new(()=> RemoteCallAPI.ImportAs<Action<string,long,string>>(\\\"PFLP\\\", \\\"Money::Remove\\\")); /// <summary> 给玩家(指定玩家名)减钱 </summary> public static void Remove(string playerXuid,long count,string info) { Money_Remove_instance.Value(playerXuid,count,info); } } public static class Internal { } } \"},\"2392\":{\"h\":\"汇总 F# SDK\"},\"2393\":{\"t\":\"F# imports / 直接导入\"},\"2394\":{\"t\":\"#r \\\"LiteLoader.NET\\\" open LiteLoader.RemoteCall // 设置全局配置文件（要求JSON字符串） 返回值类型：bool let General_SetConfig = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"General::SetConfig\\\") // 获取全局配置文件（JSON字符串） 返回值类型：string let General_GetConfig = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"General::GetConfig\\\") // 重新加载所有功能的配置文件 let General_Reload = RemoteCallAPI.ImportAs<Action>(\\\"PFLP\\\", \\\"General::Reload\\\") // 获取全部IP归属地缓存（JSON字符串） 返回值类型：string let Location_GetAllCacheData = RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\") // 设置IP归属地缓存 let Location_SetIpLocation = RemoteCallAPI.ImportAs<Action<string,string,string,string,string,string,string>>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\") // 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string let Tpa_GetTemp = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\") // 获取指定玩家的统计数据（JSON字符串） 返回值类型：string let Statistics_GetPlayerStatistics = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\") // 设定指定玩家的统计数据（JSON字符串） let Statistics_SetPlayerStatistics = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\") // 获取变量 返回值类型：string let Format_GetVariableString = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\") // 获取变量，但是强制返回int类型 返回值类型：int let Format_GetVariableInt = RemoteCallAPI.ImportAs<Func<string,string,int>>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\") // 获取变量，但是强制返回float类型 返回值类型：float let Format_GetVariableFloat = RemoteCallAPI.ImportAs<Func<string,string,float>>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\") // 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string let Format_FormatRawString = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\") // 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool let Format_DefineFormat = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\") // 移除格式化定义（返回true为存在并移除） 返回值类型：bool let Format_RemoveFormat = RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\") // 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string let Format_GetFormatWithPlayer = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\") // 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string let Format_GetFormatWithPlayerLang = RemoteCallAPI.ImportAs<Func<string,string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\") // 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string let Format_GetFormat = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormat\\\") // 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) let Command_RenameCommand = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\") // 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool let Command_ExecuteInternalCommand = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\") // 设置命令禁用(可设置提示)(支持任意命令) let Command_SetCommandDisabled = RemoteCallAPI.ImportAs<Action<string,string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\") // 设置命令启用 let Command_SetCommandEnabled = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\") // 翻译 返回值类型：string let Language_Translate = RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Language::Translate\\\") // 设置玩家昵称 let ChatEx_SetNickName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\") // 设置玩家聊天时的名字 let ChatEx_SetFakeName = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\") // 设置玩家聊天消息后缀 let ChatEx_SetEnd = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\") // 设置玩家聊天消息前缀 let ChatEx_SetStart = RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\") // 获取玩家昵称 返回值类型：string let ChatEx_GetNickName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\") // 获取玩家聊天时的名字 返回值类型：string let ChatEx_GetFakeName = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\") // 获取玩家聊天消息后缀 返回值类型：string let ChatEx_GetEnd = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\") // 获取玩家聊天消息前缀 返回值类型：string let ChatEx_GetStart = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\") // 给指定方块描框 let ParticlesGraphics_DrawBlock = RemoteCallAPI.ImportAs<Action<string,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\") // 给指定区域描框 let ParticlesGraphics_DrawBorder = RemoteCallAPI.ImportAs<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\") // 检查指定立方体区域(float)是否有领地 返回值类型：bool let Lands_CheckCubeHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\") // 检查指定立方体区域(int)是否有领地 返回值类型：bool let Lands_CheckCubeHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\") // 检查指定坐标(float)是否有领地 返回值类型：bool let Lands_CheckPosHasLand = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\") // 检查指定坐标(int)是否有领地 返回值类型：bool let Lands_CheckPosHasLandInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\") // 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\") // 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\") // 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\") // 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string let Lands_GetLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\") // 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByCube = RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\") // 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByCubeInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\") // 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\") // 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string let Lands_GetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\") // 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool let Lands_SetLandInfoByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\") // 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool let Lands_SetLandInfoByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\") // 新建领地 返回值类型：bool let Lands_CreateLand2D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\") // 新建领地 返回值类型：bool let Lands_CreateLand3D = RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\") // 删除指定坐标(float)的领地 返回值类型：bool let Lands_DeleteLandByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\") // 删除指定坐标(int)的领地 返回值类型：bool let Lands_DeleteLandByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\") // 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string let Lands_GetLandPermissionByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\") // 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string let Lands_GetLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\") // 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool let Lands_CheckLandPermissionByPos = RemoteCallAPI.ImportAs<Func<string,float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\") // 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool let Lands_CheckLandPermissionByPosInt = RemoteCallAPI.ImportAs<Func<string,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\") // 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool let Lands_CheckPlayerIsLandOwnerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\") // 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool let Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\") // 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool let Lands_CheckIsLandSharedToPlayerByPos = RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\") // 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool let Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\") // (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool let Lands_CheckPlayerHasCreateChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\") // (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool let Lands_CheckPlayerHasOpenChestPermission = RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\") // 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string let Lands_GetPlayerAllPermissionGroupId = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\") // 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string let Lands_GetPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\") // 删玩家权限组(指定ID) 返回值类型：bool let Lands_DeletePlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\") // 修改家权限组内容(指定ID) 返回值类型：bool let Lands_EditPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\") // 添加权限组 返回值类型：bool let Lands_AddPlayerPermissionGroup = RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\") // 取玩家拥有的领地 返回值类型：string let Lands_GetLandsOwnedByPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\") // 取共享给玩家的领地 返回值类型：string let Lands_GetLandsSharedToPlayer = RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\") // 创建浮空字(给玩家发包) 返回值类型：int let FloatText_Add = RemoteCallAPI.ImportAs<Func<string,float,float,float,string,int>>(\\\"PFLP\\\", \\\"FloatText::Add\\\") // 移除浮空字(给玩家发包) let FloatText_Remove = RemoteCallAPI.ImportAs<Action<string,int>>(\\\"PFLP\\\", \\\"FloatText::Remove\\\") // 获取玩家(指定玩家名)金钱 返回值类型：long let Money_Get = RemoteCallAPI.ImportAs<Func<string,int64>>(\\\"PFLP\\\", \\\"Money::Get\\\") // 给玩家(指定玩家名)加钱 let Money_Add = RemoteCallAPI.ImportAs<Action<string,int64,string>>(\\\"PFLP\\\", \\\"Money::Add\\\") // 给玩家(指定玩家名)减钱 let Money_Remove = RemoteCallAPI.ImportAs<Action<string,int64,string>>(\\\"PFLP\\\", \\\"Money::Remove\\\") \"},\"2395\":{\"t\":\"F# module / F# 模块类（推荐）\"},\"2396\":{\"t\":\"#r \\\"LiteLoader.NET\\\" open LiteLoader.RemoteCall module public PFLP = module public General = let private General_SetConfig_instance = lazy RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"General::SetConfig\\\") /// <summary> 设置全局配置文件（要求JSON字符串） 返回值类型：bool </summary> let public SetConfig(jsonStr:string):bool = General_SetConfig_instance.Value.Invoke(jsonStr) let private General_GetConfig_instance = lazy RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"General::GetConfig\\\") /// <summary> 获取全局配置文件（JSON字符串） 返回值类型：string </summary> let public GetConfig():string = General_GetConfig_instance.Value.Invoke() let private General_Reload_instance = lazy RemoteCallAPI.ImportAs<Action>(\\\"PFLP\\\", \\\"General::Reload\\\") /// <summary> 重新加载所有功能的配置文件 </summary> let public Reload():unit = General_Reload_instance.Value.Invoke() module public Location = let private Location_GetAllCacheData_instance = lazy RemoteCallAPI.ImportAs<Func<string>>(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\") /// <summary> 获取全部IP归属地缓存（JSON字符串） 返回值类型：string </summary> let public GetAllCacheData():string = Location_GetAllCacheData_instance.Value.Invoke() let private Location_SetIpLocation_instance = lazy RemoteCallAPI.ImportAs<Action<string,string,string,string,string,string,string>>(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\") /// <summary> 设置IP归属地缓存 </summary> let public SetIpLocation(ip:string)(country:string)(province:string)(city:string)(area:string)(isp:string)(language:string):unit = Location_SetIpLocation_instance.Value.Invoke(ip,country,province,city,area,isp,language) module public Tpa = let private Tpa_GetTemp_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\") /// <summary> 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string </summary> let public GetTemp(playerXuid:string):string = Tpa_GetTemp_instance.Value.Invoke(playerXuid) module public Statistics = let private Statistics_GetPlayerStatistics_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\") /// <summary> 获取指定玩家的统计数据（JSON字符串） 返回值类型：string </summary> let public GetPlayerStatistics(playerXuid:string):string = Statistics_GetPlayerStatistics_instance.Value.Invoke(playerXuid) let private Statistics_SetPlayerStatistics_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\") /// <summary> 设定指定玩家的统计数据（JSON字符串） </summary> let public SetPlayerStatistics(playerXuid:string)(newData:string):unit = Statistics_SetPlayerStatistics_instance.Value.Invoke(playerXuid,newData) module public Format = let private Format_GetVariableString_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetVariableString\\\") /// <summary> 获取变量 返回值类型：string </summary> let public GetVariableString(playerXuid:string)(name:string)(format:string):string = Format_GetVariableString_instance.Value.Invoke(playerXuid,name,format) let private Format_GetVariableInt_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,int>>(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\") /// <summary> 获取变量，但是强制返回int类型 返回值类型：int </summary> let public GetVariableInt(playerXuid:string)(name:string):int = Format_GetVariableInt_instance.Value.Invoke(playerXuid,name) let private Format_GetVariableFloat_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,float>>(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\") /// <summary> 获取变量，但是强制返回float类型 返回值类型：float </summary> let public GetVariableFloat(playerXuid:string)(name:string):float = Format_GetVariableFloat_instance.Value.Invoke(playerXuid,name) let private Format_FormatRawString_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::FormatRawString\\\") /// <summary> 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string </summary> let public FormatRawString(playerXuid:string)(rawFormat:string):string = Format_FormatRawString_instance.Value.Invoke(playerXuid,rawFormat) let private Format_DefineFormat_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Format::DefineFormat\\\") /// <summary> 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool </summary> let public DefineFormat(id:string)(rawFormat:string):bool = Format_DefineFormat_instance.Value.Invoke(id,rawFormat) let private Format_RemoveFormat_instance = lazy RemoteCallAPI.ImportAs<Func<string,bool>>(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\") /// <summary> 移除格式化定义（返回true为存在并移除） 返回值类型：bool </summary> let public RemoveFormat(id:string):bool = Format_RemoveFormat_instance.Value.Invoke(id) let private Format_GetFormatWithPlayer_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\") /// <summary> 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string </summary> let public GetFormatWithPlayer(id:string)(playerXuid:string)(extra:string):string = Format_GetFormatWithPlayer_instance.Value.Invoke(id,playerXuid,extra) let private Format_GetFormatWithPlayerLang_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\") /// <summary> 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string </summary> let public GetFormatWithPlayerLang(id:string)(playerXuid:string)(playerLangXuid:string)(extra:string):string = Format_GetFormatWithPlayerLang_instance.Value.Invoke(id,playerXuid,playerLangXuid,extra) let private Format_GetFormat_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Format::GetFormat\\\") /// <summary> 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string </summary> let public GetFormat(id:string)(extra:string):string = Format_GetFormat_instance.Value.Invoke(id,extra) module public Command = let private Command_RenameCommand_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::RenameCommand\\\") /// <summary> 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) </summary> let public RenameCommand(cmd:string)(newCmd:string):unit = Command_RenameCommand_instance.Value.Invoke(cmd,newCmd) let private Command_ExecuteInternalCommand_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\") /// <summary> 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool </summary> let public ExecuteInternalCommand(playerXuid:string)(cmd:string):bool = Command_ExecuteInternalCommand_instance.Value.Invoke(playerXuid,cmd) let private Command_SetCommandDisabled_instance = lazy RemoteCallAPI.ImportAs<Action<string,string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\") /// <summary> 设置命令禁用(可设置提示)(支持任意命令) </summary> let public SetCommandDisabled(playerXuid:string)(cmd:string)(feedback:string):unit = Command_SetCommandDisabled_instance.Value.Invoke(playerXuid,cmd,feedback) let private Command_SetCommandEnabled_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\") /// <summary> 设置命令启用 </summary> let public SetCommandEnabled(playerXuid:string)(cmd:string):unit = Command_SetCommandEnabled_instance.Value.Invoke(playerXuid,cmd) module public Language = let private Language_Translate_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string,string>>(\\\"PFLP\\\", \\\"Language::Translate\\\") /// <summary> 翻译 返回值类型：string </summary> let public Translate(fromLanguage:string)(toLanguage:string)(text:string):string = Language_Translate_instance.Value.Invoke(fromLanguage,toLanguage,text) module public ChatEx = let private ChatEx_SetNickName_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\") /// <summary> 设置玩家昵称 </summary> let public SetNickName(playerXuid:string)(nickName:string):unit = ChatEx_SetNickName_instance.Value.Invoke(playerXuid,nickName) let private ChatEx_SetFakeName_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\") /// <summary> 设置玩家聊天时的名字 </summary> let public SetFakeName(playerXuid:string)(fakeName:string):unit = ChatEx_SetFakeName_instance.Value.Invoke(playerXuid,fakeName) let private ChatEx_SetEnd_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\") /// <summary> 设置玩家聊天消息后缀 </summary> let public SetEnd(playerXuid:string)(endStr:string):unit = ChatEx_SetEnd_instance.Value.Invoke(playerXuid,endStr) let private ChatEx_SetStart_instance = lazy RemoteCallAPI.ImportAs<Action<string,string>>(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\") /// <summary> 设置玩家聊天消息前缀 </summary> let public SetStart(playerXuid:string)(startStr:string):unit = ChatEx_SetStart_instance.Value.Invoke(playerXuid,startStr) let private ChatEx_GetNickName_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\") /// <summary> 获取玩家昵称 返回值类型：string </summary> let public GetNickName(playerXuid:string):string = ChatEx_GetNickName_instance.Value.Invoke(playerXuid) let private ChatEx_GetFakeName_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\") /// <summary> 获取玩家聊天时的名字 返回值类型：string </summary> let public GetFakeName(playerXuid:string):string = ChatEx_GetFakeName_instance.Value.Invoke(playerXuid) let private ChatEx_GetEnd_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\") /// <summary> 获取玩家聊天消息后缀 返回值类型：string </summary> let public GetEnd(playerXuid:string):string = ChatEx_GetEnd_instance.Value.Invoke(playerXuid) let private ChatEx_GetStart_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\") /// <summary> 获取玩家聊天消息前缀 返回值类型：string </summary> let public GetStart(playerXuid:string):string = ChatEx_GetStart_instance.Value.Invoke(playerXuid) module public ParticlesGraphics = let private ParticlesGraphics_DrawBlock_instance = lazy RemoteCallAPI.ImportAs<Action<string,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\") /// <summary> 给指定方块描框 </summary> let public DrawBlock(playerXuid:string)(x:int)(y:int)(z:int)(r:float)(g:float)(b:float)(thickness:float)(time:float)(alpha:float):unit = ParticlesGraphics_DrawBlock_instance.Value.Invoke(playerXuid,x,y,z,r,g,b,thickness,time,alpha) let private ParticlesGraphics_DrawBorder_instance = lazy RemoteCallAPI.ImportAs<Action<string,int,int,int,int,int,int,float,float,float,float,float,float>>(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\") /// <summary> 给指定区域描框 </summary> let public DrawBorder(playerXuid:string)(x1:int)(y1:int)(z1:int)(x2:int)(y2:int)(z2:int)(r:float)(g:float)(b:float)(thickness:float)(time:float)(alpha:float):unit = ParticlesGraphics_DrawBorder_instance.Value.Invoke(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha) module public Lands = let private Lands_CheckCubeHasLand_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\") /// <summary> 检查指定立方体区域(float)是否有领地 返回值类型：bool </summary> let public CheckCubeHasLand(x1:float)(y1:float)(z1:float)(x2:float)(y2:float)(z2:float)(dimensionId:int):bool = Lands_CheckCubeHasLand_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId) let private Lands_CheckCubeHasLandInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\") /// <summary> 检查指定立方体区域(int)是否有领地 返回值类型：bool </summary> let public CheckCubeHasLandInt(x1:int)(y1:int)(z1:int)(x2:int)(y2:int)(z2:int)(dimensionId:int):bool = Lands_CheckCubeHasLandInt_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId) let private Lands_CheckPosHasLand_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\") /// <summary> 检查指定坐标(float)是否有领地 返回值类型：bool </summary> let public CheckPosHasLand(x:float)(y:float)(z:float)(dimensionId:int):bool = Lands_CheckPosHasLand_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_CheckPosHasLandInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\") /// <summary> 检查指定坐标(int)是否有领地 返回值类型：bool </summary> let public CheckPosHasLandInt(x:int)(y:int)(z:int)(dimensionId:int):bool = Lands_CheckPosHasLandInt_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_GetLandByCube_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\") /// <summary> 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandByCube(x1:float)(y1:float)(z1:float)(x2:float)(y2:float)(z2:float)(dimensionId:int):string = Lands_GetLandByCube_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId) let private Lands_GetLandByCubeInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\") /// <summary> 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandByCubeInt(x1:int)(y1:int)(z1:int)(x2:int)(y2:int)(z2:int)(dimensionId:int):string = Lands_GetLandByCubeInt_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId) let private Lands_GetLandByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\") /// <summary> 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandByPos(x:float)(y:float)(z:float)(dimensionId:int):string = Lands_GetLandByPos_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_GetLandByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\") /// <summary> 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandByPosInt(x:int)(y:int)(z:int)(dimensionId:int):string = Lands_GetLandByPosInt_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_GetLandInfoByCube_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\") /// <summary> 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandInfoByCube(x1:float)(y1:float)(z1:float)(x2:float)(y2:float)(z2:float)(dimensionId:int):string = Lands_GetLandInfoByCube_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId) let private Lands_GetLandInfoByCubeInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\") /// <summary> 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandInfoByCubeInt(x1:int)(y1:int)(z1:int)(x2:int)(y2:int)(z2:int)(dimensionId:int):string = Lands_GetLandInfoByCubeInt_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId) let private Lands_GetLandInfoByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\") /// <summary> 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandInfoByPos(x:float)(y:float)(z:float)(dimensionId:int):string = Lands_GetLandInfoByPos_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_GetLandInfoByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string>>(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\") /// <summary> 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> let public GetLandInfoByPosInt(x:int)(y:int)(z:int)(dimensionId:int):string = Lands_GetLandInfoByPosInt_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_SetLandInfoByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\") /// <summary> 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool </summary> let public SetLandInfoByPos(x:float)(y:float)(z:float)(dimensionId:int)(landinfo:string):bool = Lands_SetLandInfoByPos_instance.Value.Invoke(x,y,z,dimensionId,landinfo) let private Lands_SetLandInfoByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\") /// <summary> 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool </summary> let public SetLandInfoByPosInt(x:int)(y:int)(z:int)(dimensionId:int)(landinfo:string):bool = Lands_SetLandInfoByPosInt_instance.Value.Invoke(x,y,z,dimensionId,landinfo) let private Lands_CreateLand2D_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\") /// <summary> 新建领地 返回值类型：bool </summary> let public CreateLand2D(x1:int)(z1:int)(x2:int)(z2:int)(dimensionId:int)(playerXuid:string):bool = Lands_CreateLand2D_instance.Value.Invoke(x1,z1,x2,z2,dimensionId,playerXuid) let private Lands_CreateLand3D_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\") /// <summary> 新建领地 返回值类型：bool </summary> let public CreateLand3D(x1:int)(y1:int)(z1:int)(x2:int)(y2:int)(z2:int)(dimensionId:int)(playerXuid:string):bool = Lands_CreateLand3D_instance.Value.Invoke(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid) let private Lands_DeleteLandByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\") /// <summary> 删除指定坐标(float)的领地 返回值类型：bool </summary> let public DeleteLandByPos(x:float)(y:float)(z:float)(dimensionId:int):bool = Lands_DeleteLandByPos_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_DeleteLandByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,bool>>(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\") /// <summary> 删除指定坐标(int)的领地 返回值类型：bool </summary> let public DeleteLandByPosInt(x:int)(y:int)(z:int)(dimensionId:int):bool = Lands_DeleteLandByPosInt_instance.Value.Invoke(x,y,z,dimensionId) let private Lands_GetLandPermissionByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\") /// <summary> 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string </summary> let public GetLandPermissionByPos(x:float)(y:float)(z:float)(dimensionId:int)(playerXuid:string):string = Lands_GetLandPermissionByPos_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_GetLandPermissionByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\") /// <summary> 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string </summary> let public GetLandPermissionByPosInt(x:int)(y:int)(z:int)(dimensionId:int)(playerXuid:string):string = Lands_GetLandPermissionByPosInt_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_CheckLandPermissionByPos_instance = lazy RemoteCallAPI.ImportAs<Func<string,float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\") /// <summary> 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool </summary> let public CheckLandPermissionByPos(permissionId:string)(x:float)(y:float)(z:float)(dimensionId:int)(playerXuid:string):bool = Lands_CheckLandPermissionByPos_instance.Value.Invoke(permissionId,x,y,z,dimensionId,playerXuid) let private Lands_CheckLandPermissionByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<string,int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\") /// <summary> 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool </summary> let public CheckLandPermissionByPosInt(permissionId:string)(x:int)(y:int)(z:int)(dimensionId:int)(playerXuid:string):bool = Lands_CheckLandPermissionByPosInt_instance.Value.Invoke(permissionId,x,y,z,dimensionId,playerXuid) let private Lands_CheckPlayerIsLandOwnerByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\") /// <summary> 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool </summary> let public CheckPlayerIsLandOwnerByPos(x:float)(y:float)(z:float)(dimensionId:int)(playerXuid:string):bool = Lands_CheckPlayerIsLandOwnerByPos_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_CheckPlayerIsLandOwnerByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\") /// <summary> 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool </summary> let public CheckPlayerIsLandOwnerByPosInt(x:int)(y:int)(z:int)(dimensionId:int)(playerXuid:string):bool = Lands_CheckPlayerIsLandOwnerByPosInt_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_CheckIsLandSharedToPlayerByPos_instance = lazy RemoteCallAPI.ImportAs<Func<float,float,float,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\") /// <summary> 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool </summary> let public CheckIsLandSharedToPlayerByPos(x:float)(y:float)(z:float)(dimensionId:int)(playerXuid:string):bool = Lands_CheckIsLandSharedToPlayerByPos_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_CheckIsLandSharedToPlayerByPosInt_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\") /// <summary> 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool </summary> let public CheckIsLandSharedToPlayerByPosInt(x:int)(y:int)(z:int)(dimensionId:int)(playerXuid:string):bool = Lands_CheckIsLandSharedToPlayerByPosInt_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_CheckPlayerHasCreateChestPermission_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\") /// <summary> (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool </summary> let public CheckPlayerHasCreateChestPermission(x:int)(y:int)(z:int)(dimensionId:int)(playerXuid:string):bool = Lands_CheckPlayerHasCreateChestPermission_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_CheckPlayerHasOpenChestPermission_instance = lazy RemoteCallAPI.ImportAs<Func<int,int,int,int,string,bool>>(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\") /// <summary> (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool </summary> let public CheckPlayerHasOpenChestPermission(x:int)(y:int)(z:int)(dimensionId:int)(playerXuid:string):bool = Lands_CheckPlayerHasOpenChestPermission_instance.Value.Invoke(x,y,z,dimensionId,playerXuid) let private Lands_GetPlayerAllPermissionGroupId_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\") /// <summary> 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string </summary> let public GetPlayerAllPermissionGroupId(playerXuid:string):string = Lands_GetPlayerAllPermissionGroupId_instance.Value.Invoke(playerXuid) let private Lands_GetPlayerPermissionGroup_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string>>(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\") /// <summary> 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string </summary> let public GetPlayerPermissionGroup(playerXuid:string)(permissionGroupId:string):string = Lands_GetPlayerPermissionGroup_instance.Value.Invoke(playerXuid,permissionGroupId) let private Lands_DeletePlayerPermissionGroup_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,bool>>(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\") /// <summary> 删玩家权限组(指定ID) 返回值类型：bool </summary> let public DeletePlayerPermissionGroup(playerXuid:string)(permissionGroupId:string):bool = Lands_DeletePlayerPermissionGroup_instance.Value.Invoke(playerXuid,permissionGroupId) let private Lands_EditPlayerPermissionGroup_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\") /// <summary> 修改家权限组内容(指定ID) 返回值类型：bool </summary> let public EditPlayerPermissionGroup(playerXuid:string)(permissionGroupId:string)(jsonString:string):bool = Lands_EditPlayerPermissionGroup_instance.Value.Invoke(playerXuid,permissionGroupId,jsonString) let private Lands_AddPlayerPermissionGroup_instance = lazy RemoteCallAPI.ImportAs<Func<string,string,string,bool>>(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\") /// <summary> 添加权限组 返回值类型：bool </summary> let public AddPlayerPermissionGroup(playerXuid:string)(permissionGroupId:string)(jsonString:string):bool = Lands_AddPlayerPermissionGroup_instance.Value.Invoke(playerXuid,permissionGroupId,jsonString) let private Lands_GetLandsOwnedByPlayer_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\") /// <summary> 取玩家拥有的领地 返回值类型：string </summary> let public GetLandsOwnedByPlayer(playerXuid:string):string = Lands_GetLandsOwnedByPlayer_instance.Value.Invoke(playerXuid) let private Lands_GetLandsSharedToPlayer_instance = lazy RemoteCallAPI.ImportAs<Func<string,string>>(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\") /// <summary> 取共享给玩家的领地 返回值类型：string </summary> let public GetLandsSharedToPlayer(playerXuid:string):string = Lands_GetLandsSharedToPlayer_instance.Value.Invoke(playerXuid) module public FloatText = let private FloatText_Add_instance = lazy RemoteCallAPI.ImportAs<Func<string,float,float,float,string,int>>(\\\"PFLP\\\", \\\"FloatText::Add\\\") /// <summary> 创建浮空字(给玩家发包) 返回值类型：int </summary> let public Add(playerXuid:string)(x:float)(y:float)(z:float)(text:string):int = FloatText_Add_instance.Value.Invoke(playerXuid,x,y,z,text) let private FloatText_Remove_instance = lazy RemoteCallAPI.ImportAs<Action<string,int>>(\\\"PFLP\\\", \\\"FloatText::Remove\\\") /// <summary> 移除浮空字(给玩家发包) </summary> let public Remove(playerXuid:string)(id:int):unit = FloatText_Remove_instance.Value.Invoke(playerXuid,id) module public Money = let private Money_Get_instance = lazy RemoteCallAPI.ImportAs<Func<string,int64>>(\\\"PFLP\\\", \\\"Money::Get\\\") /// <summary> 获取玩家(指定玩家名)金钱 返回值类型：long </summary> let public Get(playerXuid:string):int64 = Money_Get_instance.Value.Invoke(playerXuid) let private Money_Add_instance = lazy RemoteCallAPI.ImportAs<Action<string,int64,string>>(\\\"PFLP\\\", \\\"Money::Add\\\") /// <summary> 给玩家(指定玩家名)加钱 </summary> let public Add(playerXuid:string)(count:int64)(info:string):unit = Money_Add_instance.Value.Invoke(playerXuid,count,info) let private Money_Remove_instance = lazy RemoteCallAPI.ImportAs<Action<string,int64,string>>(\\\"PFLP\\\", \\\"Money::Remove\\\") /// <summary> 给玩家(指定玩家名)减钱 </summary> let public Remove(playerXuid:string)(count:int64)(info:string):unit = Money_Remove_instance.Value.Invoke(playerXuid,count,info) module public Internal = \"},\"2397\":{\"h\":\"汇总 JavaScript SDK\"},\"2398\":{\"t\":\"JavaScript imports / 逐个导入\"},\"2399\":{\"t\":\"/** 设置全局配置文件（要求JSON字符串） 返回值类型：bool */ const General_SetConfig = ll.import(\\\"PFLP\\\", \\\"General::SetConfig\\\"); /** 获取全局配置文件（JSON字符串） 返回值类型：string */ const General_GetConfig = ll.import(\\\"PFLP\\\", \\\"General::GetConfig\\\"); /** 重新加载所有功能的配置文件 */ const General_Reload = ll.import(\\\"PFLP\\\", \\\"General::Reload\\\"); /** 获取全部IP归属地缓存（JSON字符串） 返回值类型：string */ const Location_GetAllCacheData = ll.import(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"); /** 设置IP归属地缓存 */ const Location_SetIpLocation = ll.import(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"); /** 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string */ const Tpa_GetTemp = ll.import(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"); /** 获取指定玩家的统计数据（JSON字符串） 返回值类型：string */ const Statistics_GetPlayerStatistics = ll.import(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"); /** 设定指定玩家的统计数据（JSON字符串） */ const Statistics_SetPlayerStatistics = ll.import(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"); /** 获取变量 返回值类型：string */ const Format_GetVariableString = ll.import(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"); /** 获取变量，但是强制返回int类型 返回值类型：int */ const Format_GetVariableInt = ll.import(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"); /** 获取变量，但是强制返回float类型 返回值类型：float */ const Format_GetVariableFloat = ll.import(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"); /** 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string */ const Format_FormatRawString = ll.import(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"); /** 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool */ const Format_DefineFormat = ll.import(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"); /** 移除格式化定义（返回true为存在并移除） 返回值类型：bool */ const Format_RemoveFormat = ll.import(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"); /** 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string */ const Format_GetFormatWithPlayer = ll.import(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"); /** 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string */ const Format_GetFormatWithPlayerLang = ll.import(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"); /** 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string */ const Format_GetFormat = ll.import(\\\"PFLP\\\", \\\"Format::GetFormat\\\"); /** 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) */ const Command_RenameCommand = ll.import(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"); /** 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool */ const Command_ExecuteInternalCommand = ll.import(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"); /** 设置命令禁用(可设置提示)(支持任意命令) */ const Command_SetCommandDisabled = ll.import(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"); /** 设置命令启用 */ const Command_SetCommandEnabled = ll.import(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"); /** 翻译 返回值类型：string */ const Language_Translate = ll.import(\\\"PFLP\\\", \\\"Language::Translate\\\"); /** 设置玩家昵称 */ const ChatEx_SetNickName = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"); /** 设置玩家聊天时的名字 */ const ChatEx_SetFakeName = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"); /** 设置玩家聊天消息后缀 */ const ChatEx_SetEnd = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"); /** 设置玩家聊天消息前缀 */ const ChatEx_SetStart = ll.import(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"); /** 获取玩家昵称 返回值类型：string */ const ChatEx_GetNickName = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"); /** 获取玩家聊天时的名字 返回值类型：string */ const ChatEx_GetFakeName = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"); /** 获取玩家聊天消息后缀 返回值类型：string */ const ChatEx_GetEnd = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"); /** 获取玩家聊天消息前缀 返回值类型：string */ const ChatEx_GetStart = ll.import(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"); /** 给指定方块描框 */ const ParticlesGraphics_DrawBlock = ll.import(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"); /** 给指定区域描框 */ const ParticlesGraphics_DrawBorder = ll.import(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"); /** 检查指定立方体区域(float)是否有领地 返回值类型：bool */ const Lands_CheckCubeHasLand = ll.import(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"); /** 检查指定立方体区域(int)是否有领地 返回值类型：bool */ const Lands_CheckCubeHasLandInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"); /** 检查指定坐标(float)是否有领地 返回值类型：bool */ const Lands_CheckPosHasLand = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"); /** 检查指定坐标(int)是否有领地 返回值类型：bool */ const Lands_CheckPosHasLandInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"); /** 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByCube = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"); /** 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByCubeInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"); /** 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByPos = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"); /** 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"); /** 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByCube = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"); /** 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByCubeInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"); /** 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByPos = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"); /** 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string */ const Lands_GetLandInfoByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"); /** 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool */ const Lands_SetLandInfoByPos = ll.import(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"); /** 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool */ const Lands_SetLandInfoByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"); /** 新建领地 返回值类型：bool */ const Lands_CreateLand2D = ll.import(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"); /** 新建领地 返回值类型：bool */ const Lands_CreateLand3D = ll.import(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"); /** 删除指定坐标(float)的领地 返回值类型：bool */ const Lands_DeleteLandByPos = ll.import(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"); /** 删除指定坐标(int)的领地 返回值类型：bool */ const Lands_DeleteLandByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"); /** 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string */ const Lands_GetLandPermissionByPos = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"); /** 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string */ const Lands_GetLandPermissionByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"); /** 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool */ const Lands_CheckLandPermissionByPos = ll.import(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"); /** 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool */ const Lands_CheckLandPermissionByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"); /** 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool */ const Lands_CheckPlayerIsLandOwnerByPos = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"); /** 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool */ const Lands_CheckPlayerIsLandOwnerByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"); /** 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool */ const Lands_CheckIsLandSharedToPlayerByPos = ll.import(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"); /** 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool */ const Lands_CheckIsLandSharedToPlayerByPosInt = ll.import(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"); /** (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool */ const Lands_CheckPlayerHasCreateChestPermission = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"); /** (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool */ const Lands_CheckPlayerHasOpenChestPermission = ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"); /** 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string */ const Lands_GetPlayerAllPermissionGroupId = ll.import(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"); /** 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string */ const Lands_GetPlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"); /** 删玩家权限组(指定ID) 返回值类型：bool */ const Lands_DeletePlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"); /** 修改家权限组内容(指定ID) 返回值类型：bool */ const Lands_EditPlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"); /** 添加权限组 返回值类型：bool */ const Lands_AddPlayerPermissionGroup = ll.import(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"); /** 取玩家拥有的领地 返回值类型：string */ const Lands_GetLandsOwnedByPlayer = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"); /** 取共享给玩家的领地 返回值类型：string */ const Lands_GetLandsSharedToPlayer = ll.import(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"); /** 创建浮空字(给玩家发包) 返回值类型：int */ const FloatText_Add = ll.import(\\\"PFLP\\\", \\\"FloatText::Add\\\"); /** 移除浮空字(给玩家发包) */ const FloatText_Remove = ll.import(\\\"PFLP\\\", \\\"FloatText::Remove\\\"); /** 获取玩家(指定玩家名)金钱 返回值类型：long */ const Money_Get = ll.import(\\\"PFLP\\\", \\\"Money::Get\\\"); /** 给玩家(指定玩家名)加钱 */ const Money_Add = ll.import(\\\"PFLP\\\", \\\"Money::Add\\\"); /** 给玩家(指定玩家名)减钱 */ const Money_Remove = ll.import(\\\"PFLP\\\", \\\"Money::Remove\\\"); /** 作弊反馈（LLAntiCheat用） 返回值类型：bool */ const Internal_CheatPunish = ll.import(\\\"PFLP\\\", \\\"Internal::CheatPunish\\\"); \"},\"2400\":{\"t\":\"JavaScript object / JS对象 （推荐）\"},\"2401\":{\"t\":\"const PFLP = { General : { /** 设置全局配置文件（要求JSON字符串） 返回值类型：bool * @param {string} jsonStr * @returns {boolean} */ SetConfig(jsonStr) { return (this.General_SetConfig??=ll.import(\\\"PFLP\\\", \\\"General::SetConfig\\\"))(jsonStr)}, /** 获取全局配置文件（JSON字符串） 返回值类型：string * @returns {string} */ GetConfig() { return (this.General_GetConfig??=ll.import(\\\"PFLP\\\", \\\"General::GetConfig\\\"))()}, /** 重新加载所有功能的配置文件 */ Reload() { (this.General_Reload??=ll.import(\\\"PFLP\\\", \\\"General::Reload\\\"))()}, }, Location : { /** 获取全部IP归属地缓存（JSON字符串） 返回值类型：string * @returns {string} */ GetAllCacheData() { return (this.Location_GetAllCacheData??=ll.import(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\"))()}, /** 设置IP归属地缓存 * @param {string} ip * @param {string} country * @param {string} province * @param {string} city * @param {string} area * @param {string} isp * @param {string} language */ SetIpLocation(ip,country,province,city,area,isp,language) { (this.Location_SetIpLocation??=ll.import(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\"))(ip,country,province,city,area,isp,language)}, }, Tpa : { /** 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetTemp(playerXuid) { return (this.Tpa_GetTemp??=ll.import(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\"))(playerXuid)}, }, Statistics : { /** 获取指定玩家的统计数据（JSON字符串） 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetPlayerStatistics(playerXuid) { return (this.Statistics_GetPlayerStatistics??=ll.import(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\"))(playerXuid)}, /** 设定指定玩家的统计数据（JSON字符串） * @param {string} playerXuid * @param {string} newData */ SetPlayerStatistics(playerXuid,newData) { (this.Statistics_SetPlayerStatistics??=ll.import(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\"))(playerXuid,newData)}, }, Format : { /** 获取变量 返回值类型：string * @param {string} playerXuid * @param {string} name * @param {string} format * @returns {string} */ GetVariableString(playerXuid,name,format) { return (this.Format_GetVariableString??=ll.import(\\\"PFLP\\\", \\\"Format::GetVariableString\\\"))(playerXuid,name,format)}, /** 获取变量，但是强制返回int类型 返回值类型：int * @param {string} playerXuid * @param {string} name * @returns {number} */ GetVariableInt(playerXuid,name) { return (this.Format_GetVariableInt??=ll.import(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\"))(playerXuid,name)}, /** 获取变量，但是强制返回float类型 返回值类型：float * @param {string} playerXuid * @param {string} name * @returns {number} */ GetVariableFloat(playerXuid,name) { return (this.Format_GetVariableFloat??=ll.import(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\"))(playerXuid,name)}, /** 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string * @param {string} playerXuid * @param {string} rawFormat * @returns {string} */ FormatRawString(playerXuid,rawFormat) { return (this.Format_FormatRawString??=ll.import(\\\"PFLP\\\", \\\"Format::FormatRawString\\\"))(playerXuid,rawFormat)}, /** 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool * @param {string} id * @param {string} rawFormat * @returns {boolean} */ DefineFormat(id,rawFormat) { return (this.Format_DefineFormat??=ll.import(\\\"PFLP\\\", \\\"Format::DefineFormat\\\"))(id,rawFormat)}, /** 移除格式化定义（返回true为存在并移除） 返回值类型：bool * @param {string} id * @returns {boolean} */ RemoveFormat(id) { return (this.Format_RemoveFormat??=ll.import(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\"))(id)}, /** 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string * @param {string} id * @param {string} playerXuid * @param {string} extra * @returns {string} */ GetFormatWithPlayer(id,playerXuid,extra) { return (this.Format_GetFormatWithPlayer??=ll.import(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\"))(id,playerXuid,extra)}, /** 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string * @param {string} id * @param {string} playerXuid * @param {string} playerLangXuid * @param {string} extra * @returns {string} */ GetFormatWithPlayerLang(id,playerXuid,playerLangXuid,extra) { return (this.Format_GetFormatWithPlayerLang??=ll.import(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\"))(id,playerXuid,playerLangXuid,extra)}, /** 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string * @param {string} id * @param {string} extra * @returns {string} */ GetFormat(id,extra) { return (this.Format_GetFormat??=ll.import(\\\"PFLP\\\", \\\"Format::GetFormat\\\"))(id,extra)}, }, Command : { /** 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) * @param {string} cmd * @param {string} newCmd */ RenameCommand(cmd,newCmd) { (this.Command_RenameCommand??=ll.import(\\\"PFLP\\\", \\\"Command::RenameCommand\\\"))(cmd,newCmd)}, /** 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool * @param {string} playerXuid * @param {string} cmd * @returns {boolean} */ ExecuteInternalCommand(playerXuid,cmd) { return (this.Command_ExecuteInternalCommand??=ll.import(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\"))(playerXuid,cmd)}, /** 设置命令禁用(可设置提示)(支持任意命令) * @param {string} playerXuid * @param {string} cmd * @param {string} feedback */ SetCommandDisabled(playerXuid,cmd,feedback) { (this.Command_SetCommandDisabled??=ll.import(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\"))(playerXuid,cmd,feedback)}, /** 设置命令启用 * @param {string} playerXuid * @param {string} cmd */ SetCommandEnabled(playerXuid,cmd) { (this.Command_SetCommandEnabled??=ll.import(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\"))(playerXuid,cmd)}, }, Language : { /** 翻译 返回值类型：string * @param {string} fromLanguage * @param {string} toLanguage * @param {string} text * @returns {string} */ Translate(fromLanguage,toLanguage,text) { return (this.Language_Translate??=ll.import(\\\"PFLP\\\", \\\"Language::Translate\\\"))(fromLanguage,toLanguage,text)}, }, ChatEx : { /** 设置玩家昵称 * @param {string} playerXuid * @param {string} nickName */ SetNickName(playerXuid,nickName) { (this.ChatEx_SetNickName??=ll.import(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\"))(playerXuid,nickName)}, /** 设置玩家聊天时的名字 * @param {string} playerXuid * @param {string} fakeName */ SetFakeName(playerXuid,fakeName) { (this.ChatEx_SetFakeName??=ll.import(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\"))(playerXuid,fakeName)}, /** 设置玩家聊天消息后缀 * @param {string} playerXuid * @param {string} endStr */ SetEnd(playerXuid,endStr) { (this.ChatEx_SetEnd??=ll.import(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\"))(playerXuid,endStr)}, /** 设置玩家聊天消息前缀 * @param {string} playerXuid * @param {string} startStr */ SetStart(playerXuid,startStr) { (this.ChatEx_SetStart??=ll.import(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\"))(playerXuid,startStr)}, /** 获取玩家昵称 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetNickName(playerXuid) { return (this.ChatEx_GetNickName??=ll.import(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\"))(playerXuid)}, /** 获取玩家聊天时的名字 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetFakeName(playerXuid) { return (this.ChatEx_GetFakeName??=ll.import(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\"))(playerXuid)}, /** 获取玩家聊天消息后缀 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetEnd(playerXuid) { return (this.ChatEx_GetEnd??=ll.import(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\"))(playerXuid)}, /** 获取玩家聊天消息前缀 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetStart(playerXuid) { return (this.ChatEx_GetStart??=ll.import(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\"))(playerXuid)}, }, ParticlesGraphics : { /** 给指定方块描框 * @param {string} playerXuid * @param {number} x * @param {number} y * @param {number} z * @param {number} r * @param {number} g * @param {number} b * @param {number} thickness * @param {number} time * @param {number} alpha */ DrawBlock(playerXuid,x,y,z,r,g,b,thickness,time,alpha) { (this.ParticlesGraphics_DrawBlock??=ll.import(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\"))(playerXuid,x,y,z,r,g,b,thickness,time,alpha)}, /** 给指定区域描框 * @param {string} playerXuid * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} r * @param {number} g * @param {number} b * @param {number} thickness * @param {number} time * @param {number} alpha */ DrawBorder(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha) { (this.ParticlesGraphics_DrawBorder??=ll.import(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\"))(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha)}, }, Lands : { /** 检查指定立方体区域(float)是否有领地 返回值类型：bool * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @returns {boolean} */ CheckCubeHasLand(x1,y1,z1,x2,y2,z2,dimensionId) { return (this.Lands_CheckCubeHasLand??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\"))(x1,y1,z1,x2,y2,z2,dimensionId)}, /** 检查指定立方体区域(int)是否有领地 返回值类型：bool * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @returns {boolean} */ CheckCubeHasLandInt(x1,y1,z1,x2,y2,z2,dimensionId) { return (this.Lands_CheckCubeHasLandInt??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\"))(x1,y1,z1,x2,y2,z2,dimensionId)}, /** 检查指定坐标(float)是否有领地 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {boolean} */ CheckPosHasLand(x,y,z,dimensionId) { return (this.Lands_CheckPosHasLand??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\"))(x,y,z,dimensionId)}, /** 检查指定坐标(int)是否有领地 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {boolean} */ CheckPosHasLandInt(x,y,z,dimensionId) { return (this.Lands_CheckPosHasLandInt??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\"))(x,y,z,dimensionId)}, /** 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @returns {string} */ GetLandByCube(x1,y1,z1,x2,y2,z2,dimensionId) { return (this.Lands_GetLandByCube??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\"))(x1,y1,z1,x2,y2,z2,dimensionId)}, /** 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @returns {string} */ GetLandByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId) { return (this.Lands_GetLandByCubeInt??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\"))(x1,y1,z1,x2,y2,z2,dimensionId)}, /** 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {string} */ GetLandByPos(x,y,z,dimensionId) { return (this.Lands_GetLandByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\"))(x,y,z,dimensionId)}, /** 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {string} */ GetLandByPosInt(x,y,z,dimensionId) { return (this.Lands_GetLandByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\"))(x,y,z,dimensionId)}, /** 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @returns {string} */ GetLandInfoByCube(x1,y1,z1,x2,y2,z2,dimensionId) { return (this.Lands_GetLandInfoByCube??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\"))(x1,y1,z1,x2,y2,z2,dimensionId)}, /** 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @returns {string} */ GetLandInfoByCubeInt(x1,y1,z1,x2,y2,z2,dimensionId) { return (this.Lands_GetLandInfoByCubeInt??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\"))(x1,y1,z1,x2,y2,z2,dimensionId)}, /** 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {string} */ GetLandInfoByPos(x,y,z,dimensionId) { return (this.Lands_GetLandInfoByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\"))(x,y,z,dimensionId)}, /** 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {string} */ GetLandInfoByPosInt(x,y,z,dimensionId) { return (this.Lands_GetLandInfoByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\"))(x,y,z,dimensionId)}, /** 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} landinfo * @returns {boolean} */ SetLandInfoByPos(x,y,z,dimensionId,landinfo) { return (this.Lands_SetLandInfoByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\"))(x,y,z,dimensionId,landinfo)}, /** 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} landinfo * @returns {boolean} */ SetLandInfoByPosInt(x,y,z,dimensionId,landinfo) { return (this.Lands_SetLandInfoByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\"))(x,y,z,dimensionId,landinfo)}, /** 新建领地 返回值类型：bool * @param {number} x1 * @param {number} z1 * @param {number} x2 * @param {number} z2 * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CreateLand2D(x1,z1,x2,z2,dimensionId,playerXuid) { return (this.Lands_CreateLand2D??=ll.import(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\"))(x1,z1,x2,z2,dimensionId,playerXuid)}, /** 新建领地 返回值类型：bool * @param {number} x1 * @param {number} y1 * @param {number} z1 * @param {number} x2 * @param {number} y2 * @param {number} z2 * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CreateLand3D(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid) { return (this.Lands_CreateLand3D??=ll.import(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\"))(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid)}, /** 删除指定坐标(float)的领地 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {boolean} */ DeleteLandByPos(x,y,z,dimensionId) { return (this.Lands_DeleteLandByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\"))(x,y,z,dimensionId)}, /** 删除指定坐标(int)的领地 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @returns {boolean} */ DeleteLandByPosInt(x,y,z,dimensionId) { return (this.Lands_DeleteLandByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\"))(x,y,z,dimensionId)}, /** 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {string} */ GetLandPermissionByPos(x,y,z,dimensionId,playerXuid) { return (this.Lands_GetLandPermissionByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\"))(x,y,z,dimensionId,playerXuid)}, /** 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {string} */ GetLandPermissionByPosInt(x,y,z,dimensionId,playerXuid) { return (this.Lands_GetLandPermissionByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\"))(x,y,z,dimensionId,playerXuid)}, /** 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool * @param {string} permissionId * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckLandPermissionByPos(permissionId,x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckLandPermissionByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\"))(permissionId,x,y,z,dimensionId,playerXuid)}, /** 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool * @param {string} permissionId * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckLandPermissionByPosInt(permissionId,x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckLandPermissionByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\"))(permissionId,x,y,z,dimensionId,playerXuid)}, /** 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckPlayerIsLandOwnerByPos(x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckPlayerIsLandOwnerByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\"))(x,y,z,dimensionId,playerXuid)}, /** 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckPlayerIsLandOwnerByPosInt(x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckPlayerIsLandOwnerByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\"))(x,y,z,dimensionId,playerXuid)}, /** 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckIsLandSharedToPlayerByPos(x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckIsLandSharedToPlayerByPos??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\"))(x,y,z,dimensionId,playerXuid)}, /** 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckIsLandSharedToPlayerByPosInt(x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckIsLandSharedToPlayerByPosInt??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\"))(x,y,z,dimensionId,playerXuid)}, /** (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckPlayerHasCreateChestPermission(x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckPlayerHasCreateChestPermission??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\"))(x,y,z,dimensionId,playerXuid)}, /** (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool * @param {number} x * @param {number} y * @param {number} z * @param {number} dimensionId * @param {string} playerXuid * @returns {boolean} */ CheckPlayerHasOpenChestPermission(x,y,z,dimensionId,playerXuid) { return (this.Lands_CheckPlayerHasOpenChestPermission??=ll.import(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\"))(x,y,z,dimensionId,playerXuid)}, /** 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetPlayerAllPermissionGroupId(playerXuid) { return (this.Lands_GetPlayerAllPermissionGroupId??=ll.import(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\"))(playerXuid)}, /** 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string * @param {string} playerXuid * @param {string} permissionGroupId * @returns {string} */ GetPlayerPermissionGroup(playerXuid,permissionGroupId) { return (this.Lands_GetPlayerPermissionGroup??=ll.import(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\"))(playerXuid,permissionGroupId)}, /** 删玩家权限组(指定ID) 返回值类型：bool * @param {string} playerXuid * @param {string} permissionGroupId * @returns {boolean} */ DeletePlayerPermissionGroup(playerXuid,permissionGroupId) { return (this.Lands_DeletePlayerPermissionGroup??=ll.import(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\"))(playerXuid,permissionGroupId)}, /** 修改家权限组内容(指定ID) 返回值类型：bool * @param {string} playerXuid * @param {string} permissionGroupId * @param {string} jsonString * @returns {boolean} */ EditPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString) { return (this.Lands_EditPlayerPermissionGroup??=ll.import(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\"))(playerXuid,permissionGroupId,jsonString)}, /** 添加权限组 返回值类型：bool * @param {string} playerXuid * @param {string} permissionGroupId * @param {string} jsonString * @returns {boolean} */ AddPlayerPermissionGroup(playerXuid,permissionGroupId,jsonString) { return (this.Lands_AddPlayerPermissionGroup??=ll.import(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\"))(playerXuid,permissionGroupId,jsonString)}, /** 取玩家拥有的领地 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetLandsOwnedByPlayer(playerXuid) { return (this.Lands_GetLandsOwnedByPlayer??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\"))(playerXuid)}, /** 取共享给玩家的领地 返回值类型：string * @param {string} playerXuid * @returns {string} */ GetLandsSharedToPlayer(playerXuid) { return (this.Lands_GetLandsSharedToPlayer??=ll.import(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\"))(playerXuid)}, }, FloatText : { /** 创建浮空字(给玩家发包) 返回值类型：int * @param {string} playerXuid * @param {number} x * @param {number} y * @param {number} z * @param {string} text * @returns {number} */ Add(playerXuid,x,y,z,text) { return (this.FloatText_Add??=ll.import(\\\"PFLP\\\", \\\"FloatText::Add\\\"))(playerXuid,x,y,z,text)}, /** 移除浮空字(给玩家发包) * @param {string} playerXuid * @param {number} id */ Remove(playerXuid,id) { (this.FloatText_Remove??=ll.import(\\\"PFLP\\\", \\\"FloatText::Remove\\\"))(playerXuid,id)}, }, Money : { /** 获取玩家(指定玩家名)金钱 返回值类型：long * @param {string} playerXuid * @returns {number} */ Get(playerXuid) { return (this.Money_Get??=ll.import(\\\"PFLP\\\", \\\"Money::Get\\\"))(playerXuid)}, /** 给玩家(指定玩家名)加钱 * @param {string} playerXuid * @param {number} count * @param {string} info */ Add(playerXuid,count,info) { (this.Money_Add??=ll.import(\\\"PFLP\\\", \\\"Money::Add\\\"))(playerXuid,count,info)}, /** 给玩家(指定玩家名)减钱 * @param {string} playerXuid * @param {number} count * @param {string} info */ Remove(playerXuid,count,info) { (this.Money_Remove??=ll.import(\\\"PFLP\\\", \\\"Money::Remove\\\"))(playerXuid,count,info)}, }, Internal : { /** 作弊反馈（LLAntiCheat用） 返回值类型：bool * @param {number} PunishLevel * @param {number} PunishReason * @param {any} playerXuid * @param {number} CheatCount * @returns {boolean} */ CheatPunish(PunishLevel,PunishReason,playerXuid,CheatCount) { return (this.Internal_CheatPunish??=ll.import(\\\"PFLP\\\", \\\"Internal::CheatPunish\\\"))(PunishLevel,PunishReason,playerXuid,CheatCount)}, }, }; \"},\"2402\":{\"h\":\"汇总 VB SDK\"},\"2403\":{\"t\":\"VB imports / 直接导入\"},\"2404\":{\"t\":\"Imports RemoteCallAPI = LiteLoader.RemoteCall.RemoteCallAPI; ' 设置全局配置文件（要求JSON字符串） 返回值类型：bool Dim General_SetConfig = RemoteCallAPI.ImportAs(Of Func(Of String,Boolean))(\\\"PFLP\\\", \\\"General::SetConfig\\\") ' 获取全局配置文件（JSON字符串） 返回值类型：string Dim General_GetConfig = RemoteCallAPI.ImportAs(Of Func(Of String))(\\\"PFLP\\\", \\\"General::GetConfig\\\") ' 重新加载所有功能的配置文件 Dim General_Reload = RemoteCallAPI.ImportAs(Of Action)(\\\"PFLP\\\", \\\"General::Reload\\\") ' 获取全部IP归属地缓存（JSON字符串） 返回值类型：string Dim Location_GetAllCacheData = RemoteCallAPI.ImportAs(Of Func(Of String))(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\") ' 设置IP归属地缓存 Dim Location_SetIpLocation = RemoteCallAPI.ImportAs(Of Action(Of String,String,String,String,String,String,String))(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\") ' 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string Dim Tpa_GetTemp = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\") ' 获取指定玩家的统计数据（JSON字符串） 返回值类型：string Dim Statistics_GetPlayerStatistics = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\") ' 设定指定玩家的统计数据（JSON字符串） Dim Statistics_SetPlayerStatistics = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\") ' 获取变量 返回值类型：string Dim Format_GetVariableString = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetVariableString\\\") ' 获取变量，但是强制返回int类型 返回值类型：int Dim Format_GetVariableInt = RemoteCallAPI.ImportAs(Of Func(Of String,String,Integer))(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\") ' 获取变量，但是强制返回float类型 返回值类型：float Dim Format_GetVariableFloat = RemoteCallAPI.ImportAs(Of Func(Of String,String,Single))(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\") ' 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string Dim Format_FormatRawString = RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Format::FormatRawString\\\") ' 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool Dim Format_DefineFormat = RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Format::DefineFormat\\\") ' 移除格式化定义（返回true为存在并移除） 返回值类型：bool Dim Format_RemoveFormat = RemoteCallAPI.ImportAs(Of Func(Of String,Boolean))(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\") ' 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string Dim Format_GetFormatWithPlayer = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\") ' 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string Dim Format_GetFormatWithPlayerLang = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\") ' 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string Dim Format_GetFormat = RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormat\\\") ' 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) Dim Command_RenameCommand = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Command::RenameCommand\\\") ' 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool Dim Command_ExecuteInternalCommand = RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\") ' 设置命令禁用(可设置提示)(支持任意命令) Dim Command_SetCommandDisabled = RemoteCallAPI.ImportAs(Of Action(Of String,String,String))(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\") ' 设置命令启用 Dim Command_SetCommandEnabled = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\") ' 翻译 返回值类型：string Dim Language_Translate = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Language::Translate\\\") ' 设置玩家昵称 Dim ChatEx_SetNickName = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\") ' 设置玩家聊天时的名字 Dim ChatEx_SetFakeName = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\") ' 设置玩家聊天消息后缀 Dim ChatEx_SetEnd = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\") ' 设置玩家聊天消息前缀 Dim ChatEx_SetStart = RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\") ' 获取玩家昵称 返回值类型：string Dim ChatEx_GetNickName = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\") ' 获取玩家聊天时的名字 返回值类型：string Dim ChatEx_GetFakeName = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\") ' 获取玩家聊天消息后缀 返回值类型：string Dim ChatEx_GetEnd = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\") ' 获取玩家聊天消息前缀 返回值类型：string Dim ChatEx_GetStart = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\") ' 给指定方块描框 Dim ParticlesGraphics_DrawBlock = RemoteCallAPI.ImportAs(Of Action(Of String,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\") ' 给指定区域描框 Dim ParticlesGraphics_DrawBorder = RemoteCallAPI.ImportAs(Of Action(Of String,Integer,Integer,Integer,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\") ' 检查指定立方体区域(float)是否有领地 返回值类型：bool Dim Lands_CheckCubeHasLand = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\") ' 检查指定立方体区域(int)是否有领地 返回值类型：bool Dim Lands_CheckCubeHasLandInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\") ' 检查指定坐标(float)是否有领地 返回值类型：bool Dim Lands_CheckPosHasLand = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\") ' 检查指定坐标(int)是否有领地 返回值类型：bool Dim Lands_CheckPosHasLandInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\") ' 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByCube = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\") ' 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByCubeInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\") ' 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\") ' 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\") ' 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByCube = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\") ' 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByCubeInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\") ' 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\") ' 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string Dim Lands_GetLandInfoByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\") ' 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool Dim Lands_SetLandInfoByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\") ' 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool Dim Lands_SetLandInfoByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\") ' 新建领地 返回值类型：bool Dim Lands_CreateLand2D = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\") ' 新建领地 返回值类型：bool Dim Lands_CreateLand3D = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\") ' 删除指定坐标(float)的领地 返回值类型：bool Dim Lands_DeleteLandByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\") ' 删除指定坐标(int)的领地 返回值类型：bool Dim Lands_DeleteLandByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\") ' 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string Dim Lands_GetLandPermissionByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,String))(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\") ' 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string Dim Lands_GetLandPermissionByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,String))(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\") ' 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool Dim Lands_CheckLandPermissionByPos = RemoteCallAPI.ImportAs(Of Func(Of String,Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\") ' 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool Dim Lands_CheckLandPermissionByPosInt = RemoteCallAPI.ImportAs(Of Func(Of String,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\") ' 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool Dim Lands_CheckPlayerIsLandOwnerByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\") ' 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool Dim Lands_CheckPlayerIsLandOwnerByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\") ' 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool Dim Lands_CheckIsLandSharedToPlayerByPos = RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\") ' 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool Dim Lands_CheckIsLandSharedToPlayerByPosInt = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\") ' (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool Dim Lands_CheckPlayerHasCreateChestPermission = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\") ' (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool Dim Lands_CheckPlayerHasOpenChestPermission = RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\") ' 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string Dim Lands_GetPlayerAllPermissionGroupId = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\") ' 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string Dim Lands_GetPlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\") ' 删玩家权限组(指定ID) 返回值类型：bool Dim Lands_DeletePlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\") ' 修改家权限组内容(指定ID) 返回值类型：bool Dim Lands_EditPlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\") ' 添加权限组 返回值类型：bool Dim Lands_AddPlayerPermissionGroup = RemoteCallAPI.ImportAs(Of Func(Of String,String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\") ' 取玩家拥有的领地 返回值类型：string Dim Lands_GetLandsOwnedByPlayer = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\") ' 取共享给玩家的领地 返回值类型：string Dim Lands_GetLandsSharedToPlayer = RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\") ' 创建浮空字(给玩家发包) 返回值类型：int Dim FloatText_Add = RemoteCallAPI.ImportAs(Of Func(Of String,Single,Single,Single,String,Integer))(\\\"PFLP\\\", \\\"FloatText::Add\\\") ' 移除浮空字(给玩家发包) Dim FloatText_Remove = RemoteCallAPI.ImportAs(Of Action(Of String,Integer))(\\\"PFLP\\\", \\\"FloatText::Remove\\\") ' 获取玩家(指定玩家名)金钱 返回值类型：long Dim Money_Get = RemoteCallAPI.ImportAs(Of Func(Of String,Long))(\\\"PFLP\\\", \\\"Money::Get\\\") ' 给玩家(指定玩家名)加钱 Dim Money_Add = RemoteCallAPI.ImportAs(Of Action(Of String,Long,String))(\\\"PFLP\\\", \\\"Money::Add\\\") ' 给玩家(指定玩家名)减钱 Dim Money_Remove = RemoteCallAPI.ImportAs(Of Action(Of String,Long,String))(\\\"PFLP\\\", \\\"Money::Remove\\\") \"},\"2405\":{\"t\":\"VB Module / 模块类定义（推荐）\"},\"2406\":{\"t\":\"Imports RemoteCallAPI = LiteLoader.RemoteCall.RemoteCallAPI; Friend Module PFLP Public NotInheritable Class General Private Shared General_SetConfig_instance As Lazy(Of Func(Of String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,Boolean))(\\\"PFLP\\\", \\\"General::SetConfig\\\")) ''' <summary> 设置全局配置文件（要求JSON字符串） 返回值类型：bool </summary> Public Shared Function SetConfig(jsonStr As String) As bool Return General_SetConfig_instance.Value(jsonStr) End Function Private Shared General_GetConfig_instance As Lazy(Of Func(Of String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String))(\\\"PFLP\\\", \\\"General::GetConfig\\\")) ''' <summary> 获取全局配置文件（JSON字符串） 返回值类型：string </summary> Public Shared Function GetConfig() As string Return General_GetConfig_instance.Value() End Function Private Shared General_Reload_instance As Lazy(Of Action)(Function() RemoteCallAPI.ImportAs(Of Action)(\\\"PFLP\\\", \\\"General::Reload\\\")) ''' <summary> 重新加载所有功能的配置文件 </summary> Public Shared Sub Reload() General_Reload_instance.Value() End Sub End Class Public NotInheritable Class Location Private Shared Location_GetAllCacheData_instance As Lazy(Of Func(Of String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String))(\\\"PFLP\\\", \\\"Location::GetAllCacheData\\\")) ''' <summary> 获取全部IP归属地缓存（JSON字符串） 返回值类型：string </summary> Public Shared Function GetAllCacheData() As string Return Location_GetAllCacheData_instance.Value() End Function Private Shared Location_SetIpLocation_instance As Lazy(Of Action(Of String,String,String,String,String,String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String,String,String,String,String,String))(\\\"PFLP\\\", \\\"Location::SetIpLocation\\\")) ''' <summary> 设置IP归属地缓存 </summary> Public Shared Sub SetIpLocation(ip As String,country As String,province As String,city As String,area As String,isp As String,language As String) Location_SetIpLocation_instance.Value(ip,country,province,city,area,isp,language) End Sub End Class Public NotInheritable Class Tpa Private Shared Tpa_GetTemp_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Tpa::GetTemp\\\")) ''' <summary> 获取指定玩家的Tpa缓存（JSON字符串） 返回值类型：string </summary> Public Shared Function GetTemp(playerXuid As String) As string Return Tpa_GetTemp_instance.Value(playerXuid) End Function End Class Public NotInheritable Class Statistics Private Shared Statistics_GetPlayerStatistics_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Statistics::GetPlayerStatistics\\\")) ''' <summary> 获取指定玩家的统计数据（JSON字符串） 返回值类型：string </summary> Public Shared Function GetPlayerStatistics(playerXuid As String) As string Return Statistics_GetPlayerStatistics_instance.Value(playerXuid) End Function Private Shared Statistics_SetPlayerStatistics_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Statistics::SetPlayerStatistics\\\")) ''' <summary> 设定指定玩家的统计数据（JSON字符串） </summary> Public Shared Sub SetPlayerStatistics(playerXuid As String,newData As String) Statistics_SetPlayerStatistics_instance.Value(playerXuid,newData) End Sub End Class Public NotInheritable Class Format Private Shared Format_GetVariableString_instance As Lazy(Of Func(Of String,String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetVariableString\\\")) ''' <summary> 获取变量 返回值类型：string </summary> Public Shared Function GetVariableString(playerXuid As String,name As String,format As String) As string Return Format_GetVariableString_instance.Value(playerXuid,name,format) End Function Private Shared Format_GetVariableInt_instance As Lazy(Of Func(Of String,String,Integer))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,Integer))(\\\"PFLP\\\", \\\"Format::GetVariableInt\\\")) ''' <summary> 获取变量，但是强制返回int类型 返回值类型：int </summary> Public Shared Function GetVariableInt(playerXuid As String,name As String) As int Return Format_GetVariableInt_instance.Value(playerXuid,name) End Function Private Shared Format_GetVariableFloat_instance As Lazy(Of Func(Of String,String,Single))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,Single))(\\\"PFLP\\\", \\\"Format::GetVariableFloat\\\")) ''' <summary> 获取变量，但是强制返回float类型 返回值类型：float </summary> Public Shared Function GetVariableFloat(playerXuid As String,name As String) As float Return Format_GetVariableFloat_instance.Value(playerXuid,name) End Function Private Shared Format_FormatRawString_instance As Lazy(Of Func(Of String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Format::FormatRawString\\\")) ''' <summary> 格式化字符串(反复调用会导致反复解析，推荐使用DefineFormat和GetFormat) 返回值类型：string </summary> Public Shared Function FormatRawString(playerXuid As String,rawFormat As String) As string Return Format_FormatRawString_instance.Value(playerXuid,rawFormat) End Function Private Shared Format_DefineFormat_instance As Lazy(Of Func(Of String,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Format::DefineFormat\\\")) ''' <summary> 定义格式化内容（返回true为创建成功，false为覆盖） 返回值类型：bool </summary> Public Shared Function DefineFormat(id As String,rawFormat As String) As bool Return Format_DefineFormat_instance.Value(id,rawFormat) End Function Private Shared Format_RemoveFormat_instance As Lazy(Of Func(Of String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,Boolean))(\\\"PFLP\\\", \\\"Format::RemoveFormat\\\")) ''' <summary> 移除格式化定义（返回true为存在并移除） 返回值类型：bool </summary> Public Shared Function RemoveFormat(id As String) As bool Return Format_RemoveFormat_instance.Value(id) End Function Private Shared Format_GetFormatWithPlayer_instance As Lazy(Of Func(Of String,String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayer\\\")) ''' <summary> 通过已定义的ID获取格式化内容（性能更优） 返回值类型：string </summary> Public Shared Function GetFormatWithPlayer(id As String,playerXuid As String,extra As String) As string Return Format_GetFormatWithPlayer_instance.Value(id,playerXuid,extra) End Function Private Shared Format_GetFormatWithPlayerLang_instance As Lazy(Of Func(Of String,String,String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormatWithPlayerLang\\\")) ''' <summary> 通过已定义的ID获取格式化内容（其中playerXuid为玩家上下文，playerLangXuid用于格式化的语言获取） 返回值类型：string </summary> Public Shared Function GetFormatWithPlayerLang(id As String,playerXuid As String,playerLangXuid As String,extra As String) As string Return Format_GetFormatWithPlayerLang_instance.Value(id,playerXuid,playerLangXuid,extra) End Function Private Shared Format_GetFormat_instance As Lazy(Of Func(Of String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Format::GetFormat\\\")) ''' <summary> 通过已定义的ID获取格式化内容（不包含玩家上下文） 返回值类型：string </summary> Public Shared Function GetFormat(id As String,extra As String) As string Return Format_GetFormat_instance.Value(id,extra) End Function End Class Public NotInheritable Class Command Private Shared Command_RenameCommand_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Command::RenameCommand\\\")) ''' <summary> 重命名命令(仅pflp插件的命令，暂不支持其他插件的命令)(newCmd为空字符串则表示隐藏该cmd命令) </summary> Public Shared Sub RenameCommand(cmd As String,newCmd As String) Command_RenameCommand_instance.Value(cmd,newCmd) End Sub Private Shared Command_ExecuteInternalCommand_instance As Lazy(Of Func(Of String,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Command::ExecuteInternalCommand\\\")) ''' <summary> 执行pflp内部命令(无视重命名,执行的是原始命令) 返回值类型：bool </summary> Public Shared Function ExecuteInternalCommand(playerXuid As String,cmd As String) As bool Return Command_ExecuteInternalCommand_instance.Value(playerXuid,cmd) End Function Private Shared Command_SetCommandDisabled_instance As Lazy(Of Action(Of String,String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String,String))(\\\"PFLP\\\", \\\"Command::SetCommandDisabled\\\")) ''' <summary> 设置命令禁用(可设置提示)(支持任意命令) </summary> Public Shared Sub SetCommandDisabled(playerXuid As String,cmd As String,feedback As String) Command_SetCommandDisabled_instance.Value(playerXuid,cmd,feedback) End Sub Private Shared Command_SetCommandEnabled_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"Command::SetCommandEnabled\\\")) ''' <summary> 设置命令启用 </summary> Public Shared Sub SetCommandEnabled(playerXuid As String,cmd As String) Command_SetCommandEnabled_instance.Value(playerXuid,cmd) End Sub End Class Public NotInheritable Class Language Private Shared Language_Translate_instance As Lazy(Of Func(Of String,String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String,String))(\\\"PFLP\\\", \\\"Language::Translate\\\")) ''' <summary> 翻译 返回值类型：string </summary> Public Shared Function Translate(fromLanguage As String,toLanguage As String,text As String) As string Return Language_Translate_instance.Value(fromLanguage,toLanguage,text) End Function End Class Public NotInheritable Class ChatEx Private Shared ChatEx_SetNickName_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetNickName\\\")) ''' <summary> 设置玩家昵称 </summary> Public Shared Sub SetNickName(playerXuid As String,nickName As String) ChatEx_SetNickName_instance.Value(playerXuid,nickName) End Sub Private Shared ChatEx_SetFakeName_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetFakeName\\\")) ''' <summary> 设置玩家聊天时的名字 </summary> Public Shared Sub SetFakeName(playerXuid As String,fakeName As String) ChatEx_SetFakeName_instance.Value(playerXuid,fakeName) End Sub Private Shared ChatEx_SetEnd_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetEnd\\\")) ''' <summary> 设置玩家聊天消息后缀 </summary> Public Shared Sub SetEnd(playerXuid As String,endStr As String) ChatEx_SetEnd_instance.Value(playerXuid,endStr) End Sub Private Shared ChatEx_SetStart_instance As Lazy(Of Action(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::SetStart\\\")) ''' <summary> 设置玩家聊天消息前缀 </summary> Public Shared Sub SetStart(playerXuid As String,startStr As String) ChatEx_SetStart_instance.Value(playerXuid,startStr) End Sub Private Shared ChatEx_GetNickName_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetNickName\\\")) ''' <summary> 获取玩家昵称 返回值类型：string </summary> Public Shared Function GetNickName(playerXuid As String) As string Return ChatEx_GetNickName_instance.Value(playerXuid) End Function Private Shared ChatEx_GetFakeName_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetFakeName\\\")) ''' <summary> 获取玩家聊天时的名字 返回值类型：string </summary> Public Shared Function GetFakeName(playerXuid As String) As string Return ChatEx_GetFakeName_instance.Value(playerXuid) End Function Private Shared ChatEx_GetEnd_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetEnd\\\")) ''' <summary> 获取玩家聊天消息后缀 返回值类型：string </summary> Public Shared Function GetEnd(playerXuid As String) As string Return ChatEx_GetEnd_instance.Value(playerXuid) End Function Private Shared ChatEx_GetStart_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"ChatEx::GetStart\\\")) ''' <summary> 获取玩家聊天消息前缀 返回值类型：string </summary> Public Shared Function GetStart(playerXuid As String) As string Return ChatEx_GetStart_instance.Value(playerXuid) End Function End Class Public NotInheritable Class ParticlesGraphics Private Shared ParticlesGraphics_DrawBlock_instance As Lazy(Of Action(Of String,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBlock\\\")) ''' <summary> 给指定方块描框 </summary> Public Shared Sub DrawBlock(playerXuid As String,x As Integer,y As Integer,z As Integer,r As Single,g As Single,b As Single,thickness As Single,time As Single,alpha As Single) ParticlesGraphics_DrawBlock_instance.Value(playerXuid,x,y,z,r,g,b,thickness,time,alpha) End Sub Private Shared ParticlesGraphics_DrawBorder_instance As Lazy(Of Action(Of String,Integer,Integer,Integer,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,Integer,Integer,Integer,Integer,Integer,Integer,Single,Single,Single,Single,Single,Single))(\\\"PFLP\\\", \\\"ParticlesGraphics::DrawBorder\\\")) ''' <summary> 给指定区域描框 </summary> Public Shared Sub DrawBorder(playerXuid As String,x1 As Integer,y1 As Integer,z1 As Integer,x2 As Integer,y2 As Integer,z2 As Integer,r As Single,g As Single,b As Single,thickness As Single,time As Single,alpha As Single) ParticlesGraphics_DrawBorder_instance.Value(playerXuid,x1,y1,z1,x2,y2,z2,r,g,b,thickness,time,alpha) End Sub End Class Public NotInheritable Class Lands Private Shared Lands_CheckCubeHasLand_instance As Lazy(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLand\\\")) ''' <summary> 检查指定立方体区域(float)是否有领地 返回值类型：bool </summary> Public Shared Function CheckCubeHasLand(x1 As Single,y1 As Single,z1 As Single,x2 As Single,y2 As Single,z2 As Single,dimensionId As Integer) As bool Return Lands_CheckCubeHasLand_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId) End Function Private Shared Lands_CheckCubeHasLandInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckCubeHasLandInt\\\")) ''' <summary> 检查指定立方体区域(int)是否有领地 返回值类型：bool </summary> Public Shared Function CheckCubeHasLandInt(x1 As Integer,y1 As Integer,z1 As Integer,x2 As Integer,y2 As Integer,z2 As Integer,dimensionId As Integer) As bool Return Lands_CheckCubeHasLandInt_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId) End Function Private Shared Lands_CheckPosHasLand_instance As Lazy(Of Func(Of Single,Single,Single,Integer,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPosHasLand\\\")) ''' <summary> 检查指定坐标(float)是否有领地 返回值类型：bool </summary> Public Shared Function CheckPosHasLand(x As Single,y As Single,z As Single,dimensionId As Integer) As bool Return Lands_CheckPosHasLand_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_CheckPosHasLandInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPosHasLandInt\\\")) ''' <summary> 检查指定坐标(int)是否有领地 返回值类型：bool </summary> Public Shared Function CheckPosHasLandInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer) As bool Return Lands_CheckPosHasLandInt_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_GetLandByCube_instance As Lazy(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByCube\\\")) ''' <summary> 获取立方体区域(float)领地信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandByCube(x1 As Single,y1 As Single,z1 As Single,x2 As Single,y2 As Single,z2 As Single,dimensionId As Integer) As string Return Lands_GetLandByCube_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId) End Function Private Shared Lands_GetLandByCubeInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByCubeInt\\\")) ''' <summary> 获取立方体区域(int)领地信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandByCubeInt(x1 As Integer,y1 As Integer,z1 As Integer,x2 As Integer,y2 As Integer,z2 As Integer,dimensionId As Integer) As string Return Lands_GetLandByCubeInt_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId) End Function Private Shared Lands_GetLandByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByPos\\\")) ''' <summary> 获取指定坐标(float)领地信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandByPos(x As Single,y As Single,z As Single,dimensionId As Integer) As string Return Lands_GetLandByPos_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_GetLandByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandByPosInt\\\")) ''' <summary> 获取指定坐标(int)领地信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer) As string Return Lands_GetLandByPosInt_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_GetLandInfoByCube_instance As Lazy(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCube\\\")) ''' <summary> 获取立方体区域(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandInfoByCube(x1 As Single,y1 As Single,z1 As Single,x2 As Single,y2 As Single,z2 As Single,dimensionId As Integer) As string Return Lands_GetLandInfoByCube_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId) End Function Private Shared Lands_GetLandInfoByCubeInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByCubeInt\\\")) ''' <summary> 获取立方体区域(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandInfoByCubeInt(x1 As Integer,y1 As Integer,z1 As Integer,x2 As Integer,y2 As Integer,z2 As Integer,dimensionId As Integer) As string Return Lands_GetLandInfoByCubeInt_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId) End Function Private Shared Lands_GetLandInfoByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPos\\\")) ''' <summary> 获取指定坐标(float)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandInfoByPos(x As Single,y As Single,z As Single,dimensionId As Integer) As string Return Lands_GetLandInfoByPos_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_GetLandInfoByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String))(\\\"PFLP\\\", \\\"Lands::GetLandInfoByPosInt\\\")) ''' <summary> 获取指定坐标(int)领地数据源详细信息（返回JSON字符串） 返回值类型：string </summary> Public Shared Function GetLandInfoByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer) As string Return Lands_GetLandInfoByPosInt_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_SetLandInfoByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPos\\\")) ''' <summary> 设置指定坐标(float)领地数据源详细信息（传入JSON字符串） 返回值类型：bool </summary> Public Shared Function SetLandInfoByPos(x As Single,y As Single,z As Single,dimensionId As Integer,landinfo As String) As bool Return Lands_SetLandInfoByPos_instance.Value(x,y,z,dimensionId,landinfo) End Function Private Shared Lands_SetLandInfoByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::SetLandInfoByPosInt\\\")) ''' <summary> 设置或修改指定坐标(int)领地数据源详细信息（传入JSON字符串） 返回值类型：bool </summary> Public Shared Function SetLandInfoByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer,landinfo As String) As bool Return Lands_SetLandInfoByPosInt_instance.Value(x,y,z,dimensionId,landinfo) End Function Private Shared Lands_CreateLand2D_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CreateLand2D\\\")) ''' <summary> 新建领地 返回值类型：bool </summary> Public Shared Function CreateLand2D(x1 As Integer,z1 As Integer,x2 As Integer,z2 As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CreateLand2D_instance.Value(x1,z1,x2,z2,dimensionId,playerXuid) End Function Private Shared Lands_CreateLand3D_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CreateLand3D\\\")) ''' <summary> 新建领地 返回值类型：bool </summary> Public Shared Function CreateLand3D(x1 As Integer,y1 As Integer,z1 As Integer,x2 As Integer,y2 As Integer,z2 As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CreateLand3D_instance.Value(x1,y1,z1,x2,y2,z2,dimensionId,playerXuid) End Function Private Shared Lands_DeleteLandByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::DeleteLandByPos\\\")) ''' <summary> 删除指定坐标(float)的领地 返回值类型：bool </summary> Public Shared Function DeleteLandByPos(x As Single,y As Single,z As Single,dimensionId As Integer) As bool Return Lands_DeleteLandByPos_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_DeleteLandByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,Boolean))(\\\"PFLP\\\", \\\"Lands::DeleteLandByPosInt\\\")) ''' <summary> 删除指定坐标(int)的领地 返回值类型：bool </summary> Public Shared Function DeleteLandByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer) As bool Return Lands_DeleteLandByPosInt_instance.Value(x,y,z,dimensionId) End Function Private Shared Lands_GetLandPermissionByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,String))(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPos\\\")) ''' <summary> 获取指定坐标(float)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string </summary> Public Shared Function GetLandPermissionByPos(x As Single,y As Single,z As Single,dimensionId As Integer,playerXuid As String) As string Return Lands_GetLandPermissionByPos_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_GetLandPermissionByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,String))(\\\"PFLP\\\", \\\"Lands::GetLandPermissionByPosInt\\\")) ''' <summary> 获取指定坐标(int)领地权限（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：string </summary> Public Shared Function GetLandPermissionByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer,playerXuid As String) As string Return Lands_GetLandPermissionByPosInt_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckLandPermissionByPos_instance As Lazy(Of Func(Of String,Single,Single,Single,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPos\\\")) ''' <summary> 检查指定坐标(float)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool </summary> Public Shared Function CheckLandPermissionByPos(permissionId As String,x As Single,y As Single,z As Single,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckLandPermissionByPos_instance.Value(permissionId,x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckLandPermissionByPosInt_instance As Lazy(Of Func(Of String,Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckLandPermissionByPosInt\\\")) ''' <summary> 检查指定坐标(int)领地是否有指定权限（permissionId参考GetLandPermissionByPos返回的key）（返回JSON字符串字典{key:boolean}）（可指定玩家否则playerXuid填写空字符串） 返回值类型：bool </summary> Public Shared Function CheckLandPermissionByPosInt(permissionId As String,x As Integer,y As Integer,z As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckLandPermissionByPosInt_instance.Value(permissionId,x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckPlayerIsLandOwnerByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPos\\\")) ''' <summary> 检查玩家是否是指定坐标(float)领地的主人 返回值类型：bool </summary> Public Shared Function CheckPlayerIsLandOwnerByPos(x As Single,y As Single,z As Single,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckPlayerIsLandOwnerByPos_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckPlayerIsLandOwnerByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerIsLandOwnerByPosInt\\\")) ''' <summary> 检查玩家是否是指定坐标(int)领地的主人 返回值类型：bool </summary> Public Shared Function CheckPlayerIsLandOwnerByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckPlayerIsLandOwnerByPosInt_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckIsLandSharedToPlayerByPos_instance As Lazy(Of Func(Of Single,Single,Single,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Single,Single,Single,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPos\\\")) ''' <summary> 检查指定坐标(float)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool </summary> Public Shared Function CheckIsLandSharedToPlayerByPos(x As Single,y As Single,z As Single,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckIsLandSharedToPlayerByPos_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckIsLandSharedToPlayerByPosInt_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckIsLandSharedToPlayerByPosInt\\\")) ''' <summary> 检查指定坐标(int)领地是否共享给指定玩家（检查具体权限请使用CheckLandPermissionByPos） 返回值类型：bool </summary> Public Shared Function CheckIsLandSharedToPlayerByPosInt(x As Integer,y As Integer,z As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckIsLandSharedToPlayerByPosInt_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckPlayerHasCreateChestPermission_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasCreateChestPermission\\\")) ''' <summary> (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有开箱（方块交互）、放置、破坏的权限(主要用于锁箱插件) 返回值类型：bool </summary> Public Shared Function CheckPlayerHasCreateChestPermission(x As Integer,y As Integer,z As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckPlayerHasCreateChestPermission_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_CheckPlayerHasOpenChestPermission_instance As Lazy(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of Integer,Integer,Integer,Integer,String,Boolean))(\\\"PFLP\\\", \\\"Lands::CheckPlayerHasOpenChestPermission\\\")) ''' <summary> (请使用GetLandPermissionByPos) 检查玩家在指定坐标(int)领地是否有使用箱子的权限(主要用于锁箱插件) 返回值类型：bool </summary> Public Shared Function CheckPlayerHasOpenChestPermission(x As Integer,y As Integer,z As Integer,dimensionId As Integer,playerXuid As String) As bool Return Lands_CheckPlayerHasOpenChestPermission_instance.Value(x,y,z,dimensionId,playerXuid) End Function Private Shared Lands_GetPlayerAllPermissionGroupId_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetPlayerAllPermissionGroupId\\\")) ''' <summary> 取玩家所有权限组ID（返回[\\\"id1\\\",\\\"id2\\\"...]字符串） 返回值类型：string </summary> Public Shared Function GetPlayerAllPermissionGroupId(playerXuid As String) As string Return Lands_GetPlayerAllPermissionGroupId_instance.Value(playerXuid) End Function Private Shared Lands_GetPlayerPermissionGroup_instance As Lazy(Of Func(Of String,String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String))(\\\"PFLP\\\", \\\"Lands::GetPlayerPermissionGroup\\\")) ''' <summary> 取玩家权限组内容(指定ID)（返回JSON对象字符串） 返回值类型：string </summary> Public Shared Function GetPlayerPermissionGroup(playerXuid As String,permissionGroupId As String) As string Return Lands_GetPlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId) End Function Private Shared Lands_DeletePlayerPermissionGroup_instance As Lazy(Of Func(Of String,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::DeletePlayerPermissionGroup\\\")) ''' <summary> 删玩家权限组(指定ID) 返回值类型：bool </summary> Public Shared Function DeletePlayerPermissionGroup(playerXuid As String,permissionGroupId As String) As bool Return Lands_DeletePlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId) End Function Private Shared Lands_EditPlayerPermissionGroup_instance As Lazy(Of Func(Of String,String,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::EditPlayerPermissionGroup\\\")) ''' <summary> 修改家权限组内容(指定ID) 返回值类型：bool </summary> Public Shared Function EditPlayerPermissionGroup(playerXuid As String,permissionGroupId As String,jsonString As String) As bool Return Lands_EditPlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId,jsonString) End Function Private Shared Lands_AddPlayerPermissionGroup_instance As Lazy(Of Func(Of String,String,String,Boolean))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String,String,Boolean))(\\\"PFLP\\\", \\\"Lands::AddPlayerPermissionGroup\\\")) ''' <summary> 添加权限组 返回值类型：bool </summary> Public Shared Function AddPlayerPermissionGroup(playerXuid As String,permissionGroupId As String,jsonString As String) As bool Return Lands_AddPlayerPermissionGroup_instance.Value(playerXuid,permissionGroupId,jsonString) End Function Private Shared Lands_GetLandsOwnedByPlayer_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetLandsOwnedByPlayer\\\")) ''' <summary> 取玩家拥有的领地 返回值类型：string </summary> Public Shared Function GetLandsOwnedByPlayer(playerXuid As String) As string Return Lands_GetLandsOwnedByPlayer_instance.Value(playerXuid) End Function Private Shared Lands_GetLandsSharedToPlayer_instance As Lazy(Of Func(Of String,String))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,String))(\\\"PFLP\\\", \\\"Lands::GetLandsSharedToPlayer\\\")) ''' <summary> 取共享给玩家的领地 返回值类型：string </summary> Public Shared Function GetLandsSharedToPlayer(playerXuid As String) As string Return Lands_GetLandsSharedToPlayer_instance.Value(playerXuid) End Function End Class Public NotInheritable Class FloatText Private Shared FloatText_Add_instance As Lazy(Of Func(Of String,Single,Single,Single,String,Integer))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,Single,Single,Single,String,Integer))(\\\"PFLP\\\", \\\"FloatText::Add\\\")) ''' <summary> 创建浮空字(给玩家发包) 返回值类型：int </summary> Public Shared Function Add(playerXuid As String,x As Single,y As Single,z As Single,text As String) As int Return FloatText_Add_instance.Value(playerXuid,x,y,z,text) End Function Private Shared FloatText_Remove_instance As Lazy(Of Action(Of String,Integer))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,Integer))(\\\"PFLP\\\", \\\"FloatText::Remove\\\")) ''' <summary> 移除浮空字(给玩家发包) </summary> Public Shared Sub Remove(playerXuid As String,id As Integer) FloatText_Remove_instance.Value(playerXuid,id) End Sub End Class Public NotInheritable Class Money Private Shared Money_Get_instance As Lazy(Of Func(Of String,Long))(Function() RemoteCallAPI.ImportAs(Of Func(Of String,Long))(\\\"PFLP\\\", \\\"Money::Get\\\")) ''' <summary> 获取玩家(指定玩家名)金钱 返回值类型：long </summary> Public Shared Function Get(playerXuid As String) As long Return Money_Get_instance.Value(playerXuid) End Function Private Shared Money_Add_instance As Lazy(Of Action(Of String,Long,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,Long,String))(\\\"PFLP\\\", \\\"Money::Add\\\")) ''' <summary> 给玩家(指定玩家名)加钱 </summary> Public Shared Sub Add(playerXuid As String,count As Long,info As String) Money_Add_instance.Value(playerXuid,count,info) End Sub Private Shared Money_Remove_instance As Lazy(Of Action(Of String,Long,String))(Function() RemoteCallAPI.ImportAs(Of Action(Of String,Long,String))(\\\"PFLP\\\", \\\"Money::Remove\\\")) ''' <summary> 给玩家(指定玩家名)减钱 </summary> Public Shared Sub Remove(playerXuid As String,count As Long,info As String) Money_Remove_instance.Value(playerXuid,count,info) End Sub End Class Public NotInheritable Class Internal End Class End Module \"},\"2407\":{\"h\":\"Sdk\"},\"2408\":{\"h\":\"En\"}},\"dirtCount\":0,\"index\":[[\"逐个导入\",{\"1\":{\"2398\":1}}],[\"静态类定义\",{\"1\":{\"2390\":1}}],[\"静态图片\",{\"1\":{\"662\":1}}],[\"直接导入\",{\"1\":{\"2388\":1,\"2393\":1,\"2403\":1}}],[\"直接获取到真实\",{\"1\":{\"555\":1}}],[\"汇总\",{\"0\":{\"2385\":1,\"2387\":1,\"2392\":1,\"2397\":1,\"2402\":1}}],[\"减少击杀次数\",{\"1\":{\"2379\":1}}],[\"减钱\",{\"0\":{\"2202\":1},\"1\":{\"2213\":1,\"2215\":1,\"2217\":1,\"2219\":1,\"2221\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"模块类定义\",{\"1\":{\"2405\":1}}],[\"模块类\",{\"1\":{\"2395\":1}}],[\"模块的变量\",{\"0\":{\"2378\":1}}],[\"模块名称\",{\"1\":{\"71\":1}}],[\"统计数据\",{\"0\":{\"2378\":1}}],[\"统计变量\",{\"0\":{\"210\":1,\"692\":1},\"1\":{\"480\":1}}],[\"写html以显示玩家名称\",{\"1\":{\"2376\":1,\"2384\":1}}],[\"`<a\",{\"1\":{\"2376\":1,\"2384\":1}}],[\"监听获取ip位置事件\",{\"1\":{\"2376\":1}}],[\"监听地址\",{\"1\":{\"731\":1}}],[\"下次会通过缓存获取ip位置\",{\"1\":{\"2376\":1}}],[\"下载配置\",{\"0\":{\"538\":1},\"1\":{\"539\":1}}],[\"下载上传日期最近的pflp\",{\"1\":{\"412\":1,\"425\":1}}],[\"下载压缩包\",{\"1\":{\"367\":1}}],[\"下载和安装最新的\",{\"0\":{\"389\":1}}],[\"下载和安装\",{\"0\":{\"366\":1}}],[\"下载minecraft\",{\"1\":{\"359\":1}}],[\"下载\",{\"0\":{\"358\":1,\"373\":1}}],[\"扩展webui功能\",{\"0\":{\"2374\":1,\"2381\":1}}],[\"普通\",{\"1\":{\"2370\":1}}],[\"普通玩家\",{\"1\":{\"715\":1,\"716\":1,\"717\":1}}],[\"效果\",{\"1\":{\"2368\":1}}],[\"隐藏pflp默认的land命令\",{\"1\":{\"2365\":1}}],[\"隐藏命令\",{\"1\":{\"510\":1}}],[\"$pf\",{\"1\":{\"2365\":2,\"2371\":2,\"2376\":6,\"2380\":3,\"2384\":2}}],[\"添加监听\",{\"1\":{\"2365\":1,\"2371\":1}}],[\"添加权限组\",{\"0\":{\"2042\":1},\"1\":{\"2053\":1,\"2055\":1,\"2057\":1,\"2059\":1,\"2061\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"<summary>\",{\"1\":{\"2391\":72,\"2396\":72,\"2406\":72}}],[\"<\",{\"1\":{\"2376\":1,\"2384\":1,\"2391\":72,\"2396\":72,\"2406\":72}}],[\"<=\",{\"1\":{\"2371\":4,\"2373\":4}}],[\"<reference\",{\"1\":{\"2365\":2,\"2371\":2,\"2376\":2,\"2380\":2}}],[\"<liteloader\",{\"1\":{\"362\":2}}],[\"设定\",{\"1\":{\"2380\":1}}],[\"设定指定玩家的统计数据\",{\"0\":{\"2324\":1},\"1\":{\"2333\":1,\"2335\":1,\"2337\":1,\"2339\":1,\"2341\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置ip位置缓存\",{\"1\":{\"2376\":1}}],[\"设置ip归属地缓存\",{\"0\":{\"2134\":1},\"1\":{\"2153\":1,\"2155\":1,\"2157\":1,\"2159\":1,\"2161\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置或修改指定坐标\",{\"0\":{\"1583\":1},\"1\":{\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置指定坐标\",{\"0\":{\"1558\":1},\"1\":{\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置全局配置文件\",{\"0\":{\"1184\":1},\"1\":{\"1191\":1,\"1193\":1,\"1195\":1,\"1197\":1,\"1199\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置命令启用\",{\"0\":{\"941\":1},\"1\":{\"950\":1,\"952\":1,\"954\":1,\"956\":1,\"958\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置命令禁用\",{\"0\":{\"920\":1},\"1\":{\"931\":1,\"933\":1,\"935\":1,\"937\":1,\"939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置玩家聊天消息前缀\",{\"0\":{\"794\":1},\"1\":{\"803\":1,\"805\":1,\"807\":1,\"809\":1,\"811\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置玩家聊天消息后缀\",{\"0\":{\"775\":1},\"1\":{\"784\":1,\"786\":1,\"788\":1,\"790\":1,\"792\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置玩家聊天时的名字\",{\"0\":{\"756\":1},\"1\":{\"765\":1,\"767\":1,\"769\":1,\"771\":1,\"773\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置玩家昵称\",{\"0\":{\"737\":1},\"1\":{\"746\":1,\"748\":1,\"750\":1,\"752\":1,\"754\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"设置地址\",{\"1\":{\"668\":1}}],[\"给指定区域描框\",{\"0\":{\"2259\":1},\"1\":{\"2290\":1,\"2292\":1,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"给指定方块描框\",{\"0\":{\"2224\":1},\"1\":{\"2249\":1,\"2251\":1,\"2253\":1,\"2255\":1,\"2257\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"给玩家\",{\"0\":{\"2181\":1,\"2202\":1},\"1\":{\"2192\":1,\"2194\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2213\":1,\"2215\":1,\"2217\":1,\"2219\":1,\"2221\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"给玩家发包\",{\"0\":{\"961\":1,\"986\":1},\"1\":{\"976\":1,\"978\":1,\"980\":1,\"982\":1,\"984\":1,\"995\":1,\"997\":1,\"999\":1,\"1001\":1,\"1003\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"取共享给玩家的领地\",{\"0\":{\"2080\":1},\"1\":{\"2087\":1,\"2089\":1,\"2091\":1,\"2093\":1,\"2095\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"取玩家拥有的领地\",{\"0\":{\"2063\":1},\"1\":{\"2070\":1,\"2072\":1,\"2074\":1,\"2076\":1,\"2078\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"取玩家权限组内容\",{\"0\":{\"1983\":1},\"1\":{\"1992\":1,\"1994\":1,\"1996\":1,\"1998\":1,\"2000\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"取玩家所有权限组id\",{\"0\":{\"1966\":1},\"1\":{\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"删玩家权限组\",{\"0\":{\"2002\":1},\"1\":{\"2011\":1,\"2013\":1,\"2015\":1,\"2017\":1,\"2019\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"删除指定坐标\",{\"0\":{\"1666\":1,\"1689\":1},\"1\":{\"1679\":1,\"1681\":1,\"1683\":1,\"1685\":1,\"1687\":1,\"1702\":1,\"1704\":1,\"1706\":1,\"1708\":1,\"1710\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"删除旧的插件pflp\",{\"1\":{\"409\":1,\"422\":1}}],[\"删除文件夹内的图片文件后\",{\"1\":{\"306\":1}}],[\"指定玩家名\",{\"0\":{\"2164\":1,\"2181\":1,\"2202\":1},\"1\":{\"2171\":1,\"2173\":1,\"2175\":1,\"2177\":1,\"2179\":1,\"2192\":1,\"2194\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2213\":1,\"2215\":1,\"2217\":1,\"2219\":1,\"2221\":1,\"2386\":3,\"2389\":3,\"2391\":3,\"2394\":3,\"2396\":3,\"2399\":3,\"2401\":3,\"2404\":3,\"2406\":3}}],[\"指定id\",{\"0\":{\"1983\":1,\"2002\":1,\"2021\":1},\"1\":{\"1992\":1,\"1994\":1,\"1996\":1,\"1998\":1,\"2000\":1,\"2011\":1,\"2013\":1,\"2015\":1,\"2017\":1,\"2019\":1,\"2032\":1,\"2034\":1,\"2036\":1,\"2038\":1,\"2040\":1,\"2386\":3,\"2389\":3,\"2391\":3,\"2394\":3,\"2396\":3,\"2399\":3,\"2401\":3,\"2404\":3,\"2406\":3}}],[\"指令\",{\"1\":{\"384\":1}}],[\"字符串\",{\"0\":{\"1966\":1},\"1\":{\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"破坏的权限\",{\"0\":{\"1916\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"破坏方块数量\",{\"1\":{\"694\":1}}],[\"破坏方块\",{\"1\":{\"219\":1}}],[\"检查玩家在指定坐标\",{\"0\":{\"1916\":1,\"1941\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"检查玩家是否是指定坐标\",{\"0\":{\"1816\":1,\"1841\":1},\"1\":{\"1831\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1856\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"检查具体权限请使用checklandpermissionbypos\",{\"0\":{\"1866\":1,\"1891\":1},\"1\":{\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"检查指定坐标\",{\"0\":{\"1304\":1,\"1327\":1,\"1762\":1,\"1789\":1,\"1866\":1,\"1891\":1},\"1\":{\"1317\":1,\"1319\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1340\":1,\"1342\":1,\"1344\":1,\"1346\":1,\"1348\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"2386\":6,\"2389\":6,\"2391\":6,\"2394\":6,\"2396\":6,\"2399\":6,\"2401\":6,\"2404\":6,\"2406\":6}}],[\"检查指定立方体区域\",{\"0\":{\"1246\":1,\"1275\":1},\"1\":{\"1265\":1,\"1267\":1,\"1269\":1,\"1271\":1,\"1273\":1,\"1294\":1,\"1296\":1,\"1298\":1,\"1300\":1,\"1302\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"新建领地\",{\"0\":{\"1608\":1,\"1635\":1},\"1\":{\"1625\":1,\"1627\":1,\"1629\":1,\"1631\":1,\"1633\":1,\"1656\":1,\"1658\":1,\"1660\":1,\"1662\":1,\"1664\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"作弊反馈\",{\"0\":{\"1230\":1},\"1\":{\"1243\":1,\"2399\":1,\"2401\":1}}],[\"作者是普通人类\",{\"1\":{\"5\":1}}],[\"要求json字符串\",{\"0\":{\"1184\":1},\"1\":{\"1191\":1,\"1193\":1,\"1195\":1,\"1197\":1,\"1199\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"要求为16的倍数\",{\"1\":{\"564\":1,\"566\":1}}],[\"其中playerxuid为玩家上下文\",{\"0\":{\"1141\":1},\"1\":{\"1154\":1,\"1156\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"其他变量\",{\"1\":{\"696\":1}}],[\"其他功能待添加\",{\"1\":{\"689\":1}}],[\"其他插件调用\",{\"1\":{\"545\":1}}],[\"其他插件仅需引入beplaceholderapi\",{\"1\":{\"235\":1}}],[\"其他使用frp的服务商同理\",{\"1\":{\"535\":1}}],[\"其他文件\",{\"1\":{\"303\":1}}],[\"其他模块暂无迁移适配\",{\"1\":{\"272\":1,\"279\":1}}],[\"其他模块变量\",{\"0\":{\"209\":1}}],[\"性能更优\",{\"0\":{\"1120\":1},\"1\":{\"1131\":1,\"1133\":1,\"1135\":1,\"1137\":1,\"1139\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"移除格式化定义\",{\"0\":{\"1103\":1},\"1\":{\"1110\":1,\"1112\":1,\"1114\":1,\"1116\":1,\"1118\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"移除浮空字\",{\"0\":{\"986\":1},\"1\":{\"995\":1,\"997\":1,\"999\":1,\"1001\":1,\"1003\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"定义格式化内容\",{\"0\":{\"1084\":1},\"1\":{\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"定时任务\",{\"0\":{\"683\":1},\"1\":{\"484\":1}}],[\"反复调用会导致反复解析\",{\"0\":{\"1065\":1},\"1\":{\"1074\":1,\"1076\":1,\"1078\":1,\"1080\":1,\"1082\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"反复排查确认是本插件造成后可在各渠道反馈\",{\"1\":{\"37\":1}}],[\"格式化字符串\",{\"0\":{\"1065\":1},\"1\":{\"1074\":1,\"1076\":1,\"1078\":1,\"1080\":1,\"1082\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"格式化选项继承与\",{\"1\":{\"238\":1}}],[\"格式化选项\",{\"0\":{\"237\":1}}],[\"执行了land命令\",{\"1\":{\"2365\":1}}],[\"执行pflp内置的land命令\",{\"1\":{\"2365\":1}}],[\"执行pflp内部命令\",{\"0\":{\"901\":1},\"1\":{\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"918\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"执行真land命令\",{\"1\":{\"2365\":1}}],[\"执行的是原始命令\",{\"0\":{\"901\":1},\"1\":{\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"918\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"执行命令\",{\"1\":{\"625\":1}}],[\"暂不支持其他插件的命令\",{\"0\":{\"882\":1},\"1\":{\"891\":1,\"893\":1,\"895\":1,\"897\":1,\"899\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"暂时只支持修改主世界高度\",{\"1\":{\"453\":1}}],[\">$\",{\"1\":{\"2376\":1,\"2384\":1}}],[\">\",{\"1\":{\"748\":1,\"767\":1,\"786\":1,\"805\":1,\"822\":1,\"839\":1,\"856\":1,\"873\":1,\"893\":1,\"912\":1,\"933\":1,\"952\":1,\"978\":1,\"997\":1,\"1019\":1,\"1038\":1,\"1057\":1,\"1076\":1,\"1095\":1,\"1112\":1,\"1133\":1,\"1156\":1,\"1175\":1,\"1193\":1,\"1207\":1,\"1221\":1,\"1267\":1,\"1296\":1,\"1319\":1,\"1342\":1,\"1371\":1,\"1400\":1,\"1423\":1,\"1446\":1,\"1475\":1,\"1504\":1,\"1527\":1,\"1550\":1,\"1575\":1,\"1600\":1,\"1627\":1,\"1658\":1,\"1681\":1,\"1704\":1,\"1729\":1,\"1754\":1,\"1781\":1,\"1808\":1,\"1833\":1,\"1858\":1,\"1883\":1,\"1908\":1,\"1933\":1,\"1958\":1,\"1975\":1,\"1994\":1,\"2013\":1,\"2034\":1,\"2055\":1,\"2072\":1,\"2089\":1,\"2111\":1,\"2126\":1,\"2155\":1,\"2173\":1,\"2194\":1,\"2215\":1,\"2251\":1,\"2292\":1,\"2316\":1,\"2335\":1,\"2353\":1,\"2365\":2,\"2371\":2,\"2376\":2,\"2380\":2,\"2386\":72}}],[\"形参\",{\"1\":{\"738\":1,\"757\":1,\"776\":1,\"795\":1,\"814\":1,\"831\":1,\"848\":1,\"865\":1,\"883\":1,\"902\":1,\"921\":1,\"942\":1,\"962\":1,\"987\":1,\"1007\":1,\"1028\":1,\"1047\":1,\"1066\":1,\"1085\":1,\"1104\":1,\"1121\":1,\"1142\":1,\"1165\":1,\"1185\":1,\"1231\":1,\"1247\":1,\"1276\":1,\"1305\":1,\"1328\":1,\"1351\":1,\"1380\":1,\"1409\":1,\"1432\":1,\"1455\":1,\"1484\":1,\"1513\":1,\"1536\":1,\"1559\":1,\"1584\":1,\"1609\":1,\"1636\":1,\"1667\":1,\"1690\":1,\"1713\":1,\"1738\":1,\"1763\":1,\"1790\":1,\"1817\":1,\"1842\":1,\"1867\":1,\"1892\":1,\"1917\":1,\"1942\":1,\"1967\":1,\"1984\":1,\"2003\":1,\"2022\":1,\"2043\":1,\"2064\":1,\"2081\":1,\"2099\":1,\"2135\":1,\"2165\":1,\"2182\":1,\"2203\":1,\"2225\":1,\"2260\":1,\"2308\":1,\"2325\":1,\"2345\":1}}],[\"协议说明\",{\"0\":{\"732\":1}}],[\"协议的对接插件https\",{\"1\":{\"457\":1}}],[\"日志查询\",{\"1\":{\"725\":1}}],[\"日志查询功能\",{\"1\":{\"720\":1}}],[\"图骗\",{\"0\":{\"723\":1}}],[\"图片属性\",{\"1\":{\"667\":1}}],[\"图片渲染距离和gif播放距离\",{\"1\":{\"662\":1}}],[\"图片加载器\",{\"0\":{\"660\":1},\"1\":{\"442\":1}}],[\"图片不会存在在存档中\",{\"1\":{\"306\":1}}],[\"图片文件夹\",{\"1\":{\"304\":1}}],[\"控制台不输出任何ws的消息\",{\"1\":{\"731\":1}}],[\"控制台会有很多日志\",{\"1\":{\"720\":1}}],[\"控制台输入pflpup命令\",{\"1\":{\"406\":1,\"419\":1}}],[\"控制台输入pflp\",{\"1\":{\"403\":1,\"543\":1}}],[\"控制台输命令pfc\",{\"1\":{\"340\":1}}],[\"调试模式\",{\"1\":{\"720\":1}}],[\"建议填上\",{\"1\":{\"720\":1}}],[\"外部访问地址\",{\"1\":{\"720\":1}}],[\"注册命令\",{\"1\":{\"2365\":1}}],[\"注册变量\",{\"0\":{\"2366\":1},\"1\":{\"236\":1,\"244\":1}}],[\"注意\",{\"1\":{\"717\":1}}],[\"半径\",{\"1\":{\"706\":1}}],[\"消息\",{\"1\":{\"699\":1}}],[\"消息留言\",{\"1\":{\"208\":1}}],[\"弹窗\",{\"1\":{\"699\":1}}],[\"弹出信息\",{\"0\":{\"674\":1},\"1\":{\"445\":1}}],[\"横幅\",{\"1\":{\"699\":1}}],[\"默认\",{\"1\":{\"699\":3}}],[\"默认接收方式玩家可以在个人设置中修改\",{\"1\":{\"699\":1}}],[\"默认system表示自动获取系统语言\",{\"1\":{\"254\":1}}],[\"没什么用\",{\"1\":{\"699\":1}}],[\"没有内置\",{\"1\":{\"341\":1}}],[\"允许自己传送到自己\",{\"1\":{\"699\":1}}],[\"允许任何人开源一个功能更多\",{\"1\":{\"43\":1}}],[\"筛选id的击杀次数\",{\"1\":{\"694\":1}}],[\"包括玩家和生物\",{\"1\":{\"694\":1}}],[\"包管理器说明\",{\"1\":{\"378\":1}}],[\"语法描述定时任务\",{\"1\":{\"687\":1}}],[\"语言数据文件\",{\"1\":{\"326\":1}}],[\"语言文件夹\",{\"1\":{\"292\":1}}],[\"语言文件样式和格式与\",{\"1\":{\"248\":1}}],[\"语言文件位于位于\",{\"1\":{\"247\":1}}],[\"语言配置\",{\"0\":{\"245\":1}}],[\"说明\",{\"0\":{\"686\":1}}],[\"状态时才会互相造成伤害\",{\"1\":{\"682\":1}}],[\"状态\",{\"1\":{\"680\":1}}],[\"状态管理\",{\"0\":{\"676\":1},\"1\":{\"479\":1}}],[\"切换\",{\"1\":{\"680\":1}}],[\"额外监听器\",{\"1\":{\"678\":1}}],[\"额外需要备份的文件\",{\"1\":{\"498\":1}}],[\"贡献\",{\"1\":{\"673\":1,\"675\":1,\"691\":1}}],[\"空手右键方块即可旋转图片\",{\"1\":{\"669\":1}}],[\"旋转图片\",{\"1\":{\"669\":1}}],[\"导入图片\",{\"0\":{\"665\":1}}],[\"导入图片文件文件夹\",{\"1\":{\"305\":1}}],[\"非gif\",{\"1\":{\"662\":1}}],[\"局限性\",{\"0\":{\"658\":1}}],[\"结构\",{\"1\":{\"653\":1}}],[\"快速加载\",{\"0\":{\"652\":1},\"1\":{\"653\":1}}],[\"一键导入\",{\"1\":{\"649\":1}}],[\"一键更新插件本体\",{\"0\":{\"405\":1,\"418\":1}}],[\"手动加载\",{\"0\":{\"643\":1}}],[\"密钥为自动生成\",{\"1\":{\"642\":1}}],[\"密码\",{\"0\":{\"3\":1,\"390\":1,\"411\":1,\"424\":1}}],[\"公告配置\",{\"0\":{\"638\":1}}],[\"公告模块配置文件\",{\"1\":{\"288\":1}}],[\"刷新太快没有实际意义\",{\"1\":{\"632\":1}}],[\"刷新间隔\",{\"1\":{\"504\":1,\"632\":1}}],[\"货币显示名称\",{\"1\":{\"628\":1}}],[\"类比临时提权\",{\"1\":{\"625\":1}}],[\"类型\",{\"1\":{\"208\":1,\"739\":1,\"758\":1,\"777\":1,\"796\":1,\"815\":1,\"832\":1,\"849\":1,\"866\":1,\"884\":1,\"903\":1,\"922\":1,\"943\":1,\"963\":1,\"988\":1,\"1008\":1,\"1029\":1,\"1048\":1,\"1067\":1,\"1086\":1,\"1105\":1,\"1122\":1,\"1143\":1,\"1166\":1,\"1186\":1,\"1232\":1,\"1248\":1,\"1277\":1,\"1306\":1,\"1329\":1,\"1352\":1,\"1381\":1,\"1410\":1,\"1433\":1,\"1456\":1,\"1485\":1,\"1514\":1,\"1537\":1,\"1560\":1,\"1585\":1,\"1610\":1,\"1637\":1,\"1668\":1,\"1691\":1,\"1714\":1,\"1739\":1,\"1764\":1,\"1791\":1,\"1818\":1,\"1843\":1,\"1868\":1,\"1893\":1,\"1918\":1,\"1943\":1,\"1968\":1,\"1985\":1,\"2004\":1,\"2023\":1,\"2044\":1,\"2065\":1,\"2082\":1,\"2100\":1,\"2136\":1,\"2166\":1,\"2183\":1,\"2204\":1,\"2226\":1,\"2261\":1,\"2309\":1,\"2326\":1,\"2346\":1}}],[\"►\",{\"1\":{\"625\":4}}],[\"按钮点击事件类型\",{\"1\":{\"625\":1}}],[\"按钮点击事件\",{\"1\":{\"625\":1}}],[\"按钮图标\",{\"1\":{\"625\":1}}],[\"按钮需要的金币数量\",{\"1\":{\"625\":1}}],[\"按钮需要op权限\",{\"1\":{\"625\":1}}],[\"按钮文本\",{\"1\":{\"625\":1}}],[\"按钮列表\",{\"1\":{\"625\":1}}],[\"绑定端口\",{\"1\":{\"720\":1}}],[\"绑定地址\",{\"1\":{\"720\":1}}],[\"绑定命令\",{\"1\":{\"625\":1}}],[\"绑定物品\",{\"1\":{\"625\":1}}],[\"仍能显示\",{\"1\":{\"619\":1}}],[\"中的\",{\"1\":{\"619\":1}}],[\"中开启\",{\"1\":{\"619\":1}}],[\"排序\",{\"1\":{\"613\":1}}],[\"推荐使用defineformat和getformat\",{\"0\":{\"1065\":1},\"1\":{\"1074\":1,\"1076\":1,\"1078\":1,\"1080\":1,\"1082\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"推荐\",{\"0\":{\"611\":1},\"1\":{\"2390\":1,\"2395\":1,\"2400\":1,\"2405\":1}}],[\"推荐直接下载llnet\",{\"1\":{\"391\":1}}],[\"查找\",{\"1\":{\"613\":1}}],[\"查阅日志\",{\"0\":{\"606\":1}}],[\"查看配置\",{\"1\":{\"537\":1}}],[\"查看工具能看到\",{\"1\":{\"525\":1}}],[\"查看\",{\"1\":{\"332\":1}}],[\"查看常见问题\",{\"1\":{\"22\":1}}],[\"特点\",{\"0\":{\"603\":1}}],[\"输出到控制台\",{\"1\":{\"602\":1}}],[\"储存到数据库\",{\"1\":{\"602\":1}}],[\"具体日志记录项开关\",{\"1\":{\"602\":1}}],[\"具体自行测试\",{\"1\":{\"573\":1}}],[\"分钟\",{\"1\":{\"602\":1}}],[\"分页\",{\"1\":{\"504\":1}}],[\"相关配置\",{\"0\":{\"597\":1}}],[\"相关组件\",{\"1\":{\"341\":1}}],[\"圈地\",{\"0\":{\"586\":1},\"1\":{\"587\":1}}],[\"圈地飞行\",{\"1\":{\"583\":1}}],[\"仅pflp插件的命令\",{\"0\":{\"882\":1},\"1\":{\"891\":1,\"893\":1,\"895\":1,\"897\":1,\"899\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"仅在两个玩家都开启\",{\"1\":{\"682\":1}}],[\"仅在多核服务器才可利用多线程弥补\",{\"1\":{\"29\":1}}],[\"仅储存必要信息\",{\"1\":{\"605\":1}}],[\"仅显示效果\",{\"1\":{\"583\":1}}],[\"增强破坏保护\",{\"1\":{\"583\":1}}],[\"增加自定义变量\",{\"0\":{\"243\":1}}],[\"对于选择表单\",{\"1\":{\"583\":1}}],[\"对于翻页表单\",{\"1\":{\"583\":1}}],[\"对先进的\",{\"1\":{\"56\":1}}],[\"9\",{\"1\":{\"583\":1}}],[\"95\",{\"1\":{\"583\":1}}],[\"末地\",{\"1\":{\"573\":1}}],[\"种子\",{\"1\":{\"573\":1}}],[\"客户端有一定获取间隔\",{\"1\":{\"632\":1}}],[\"客户端区块生成的选项可选不关闭\",{\"1\":{\"573\":1}}],[\"客户端连接\",{\"1\":{\"554\":1}}],[\"超平坦技术上之后可以兼容\",{\"1\":{\"570\":1}}],[\"超平坦类型的存档暂无适配\",{\"1\":{\"569\":1}}],[\"存表\",{\"1\":{\"554\":1}}],[\"存档文件名称\",{\"1\":{\"498\":1}}],[\"存档名称\",{\"1\":{\"573\":1}}],[\"存档名\",{\"1\":{\"451\":1}}],[\"与内网\",{\"1\":{\"554\":1}}],[\"与其他插件共同使用时\",{\"0\":{\"57\":1}}],[\"传入json字符串\",{\"0\":{\"1558\":1,\"1583\":1},\"1\":{\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"传输密钥\",{\"1\":{\"731\":1}}],[\"传到\",{\"1\":{\"554\":1}}],[\"传送后无敌时间\",{\"1\":{\"699\":1}}],[\"传送请求个人设置文件\",{\"1\":{\"329\":1}}],[\"传送点数据文件\",{\"1\":{\"319\":1}}],[\"实现原理\",{\"0\":{\"553\":1}}],[\"将\",{\"1\":{\"554\":1}}],[\"将下载到的frpc\",{\"1\":{\"541\":1}}],[\"将其放入对应位置\",{\"1\":{\"336\":1}}],[\"举例\",{\"1\":{\"535\":1}}],[\"=ll\",{\"1\":{\"2401\":73}}],[\"=>\",{\"1\":{\"2365\":2,\"2371\":2,\"2373\":1,\"2376\":5,\"2380\":1,\"2384\":2,\"2391\":72}}],[\"=\",{\"1\":{\"533\":6,\"746\":1,\"748\":1,\"750\":1,\"752\":1,\"754\":1,\"765\":1,\"767\":1,\"769\":1,\"771\":1,\"773\":1,\"784\":1,\"786\":1,\"788\":1,\"790\":1,\"792\":1,\"803\":1,\"805\":1,\"807\":1,\"809\":1,\"811\":1,\"820\":2,\"822\":2,\"824\":2,\"826\":2,\"828\":1,\"837\":2,\"839\":2,\"841\":2,\"843\":2,\"845\":1,\"854\":2,\"856\":2,\"858\":2,\"860\":2,\"862\":1,\"871\":2,\"873\":2,\"875\":2,\"877\":2,\"879\":1,\"891\":1,\"893\":1,\"895\":1,\"897\":1,\"899\":1,\"910\":2,\"912\":2,\"914\":2,\"916\":2,\"918\":1,\"931\":1,\"933\":1,\"935\":1,\"937\":1,\"939\":1,\"950\":1,\"952\":1,\"954\":1,\"956\":1,\"958\":1,\"976\":2,\"978\":2,\"980\":2,\"982\":2,\"984\":1,\"995\":1,\"997\":1,\"999\":1,\"1001\":1,\"1003\":1,\"1017\":2,\"1019\":2,\"1021\":2,\"1023\":2,\"1025\":1,\"1036\":2,\"1038\":2,\"1040\":2,\"1042\":2,\"1044\":1,\"1055\":2,\"1057\":2,\"1059\":2,\"1061\":2,\"1063\":1,\"1074\":2,\"1076\":2,\"1078\":2,\"1080\":2,\"1082\":1,\"1093\":2,\"1095\":2,\"1097\":2,\"1099\":2,\"1101\":1,\"1110\":2,\"1112\":2,\"1114\":2,\"1116\":2,\"1118\":1,\"1131\":2,\"1133\":2,\"1135\":2,\"1137\":2,\"1139\":1,\"1154\":2,\"1156\":2,\"1158\":2,\"1160\":2,\"1162\":1,\"1173\":2,\"1175\":2,\"1177\":2,\"1179\":2,\"1181\":1,\"1191\":2,\"1193\":2,\"1195\":2,\"1197\":2,\"1199\":1,\"1205\":2,\"1207\":2,\"1209\":2,\"1211\":2,\"1213\":1,\"1219\":1,\"1221\":1,\"1223\":1,\"1225\":1,\"1227\":1,\"1243\":2,\"1265\":2,\"1267\":2,\"1269\":2,\"1271\":2,\"1273\":1,\"1294\":2,\"1296\":2,\"1298\":2,\"1300\":2,\"1302\":1,\"1317\":2,\"1319\":2,\"1321\":2,\"1323\":2,\"1325\":1,\"1340\":2,\"1342\":2,\"1344\":2,\"1346\":2,\"1348\":1,\"1369\":2,\"1371\":2,\"1373\":2,\"1375\":2,\"1377\":1,\"1398\":2,\"1400\":2,\"1402\":2,\"1404\":2,\"1406\":1,\"1421\":2,\"1423\":2,\"1425\":2,\"1427\":2,\"1429\":1,\"1444\":2,\"1446\":2,\"1448\":2,\"1450\":2,\"1452\":1,\"1473\":2,\"1475\":2,\"1477\":2,\"1479\":2,\"1481\":1,\"1502\":2,\"1504\":2,\"1506\":2,\"1508\":2,\"1510\":1,\"1525\":2,\"1527\":2,\"1529\":2,\"1531\":2,\"1533\":1,\"1548\":2,\"1550\":2,\"1552\":2,\"1554\":2,\"1556\":1,\"1573\":2,\"1575\":2,\"1577\":2,\"1579\":2,\"1581\":1,\"1598\":2,\"1600\":2,\"1602\":2,\"1604\":2,\"1606\":1,\"1625\":2,\"1627\":2,\"1629\":2,\"1631\":2,\"1633\":1,\"1656\":2,\"1658\":2,\"1660\":2,\"1662\":2,\"1664\":1,\"1679\":2,\"1681\":2,\"1683\":2,\"1685\":2,\"1687\":1,\"1702\":2,\"1704\":2,\"1706\":2,\"1708\":2,\"1710\":1,\"1727\":2,\"1729\":2,\"1731\":2,\"1733\":2,\"1735\":1,\"1752\":2,\"1754\":2,\"1756\":2,\"1758\":2,\"1760\":1,\"1779\":2,\"1781\":2,\"1783\":2,\"1785\":2,\"1787\":1,\"1806\":2,\"1808\":2,\"1810\":2,\"1812\":2,\"1814\":1,\"1831\":2,\"1833\":2,\"1835\":2,\"1837\":2,\"1839\":1,\"1856\":2,\"1858\":2,\"1860\":2,\"1862\":2,\"1864\":1,\"1881\":2,\"1883\":2,\"1885\":2,\"1887\":2,\"1889\":1,\"1906\":2,\"1908\":2,\"1910\":2,\"1912\":2,\"1914\":1,\"1931\":2,\"1933\":2,\"1935\":2,\"1937\":2,\"1939\":1,\"1956\":2,\"1958\":2,\"1960\":2,\"1962\":2,\"1964\":1,\"1973\":2,\"1975\":2,\"1977\":2,\"1979\":2,\"1981\":1,\"1992\":2,\"1994\":2,\"1996\":2,\"1998\":2,\"2000\":1,\"2011\":2,\"2013\":2,\"2015\":2,\"2017\":2,\"2019\":1,\"2032\":2,\"2034\":2,\"2036\":2,\"2038\":2,\"2040\":1,\"2053\":2,\"2055\":2,\"2057\":2,\"2059\":2,\"2061\":1,\"2070\":2,\"2072\":2,\"2074\":2,\"2076\":2,\"2078\":1,\"2087\":2,\"2089\":2,\"2091\":2,\"2093\":2,\"2095\":1,\"2109\":2,\"2111\":2,\"2113\":2,\"2115\":2,\"2117\":1,\"2124\":2,\"2126\":2,\"2128\":2,\"2130\":2,\"2132\":1,\"2153\":1,\"2155\":1,\"2157\":1,\"2159\":1,\"2161\":1,\"2171\":2,\"2173\":2,\"2175\":2,\"2177\":2,\"2179\":1,\"2192\":1,\"2194\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2213\":1,\"2215\":1,\"2217\":1,\"2219\":1,\"2221\":1,\"2249\":1,\"2251\":1,\"2253\":1,\"2255\":1,\"2257\":1,\"2290\":1,\"2292\":1,\"2294\":1,\"2296\":1,\"2298\":1,\"2314\":2,\"2316\":2,\"2318\":2,\"2320\":2,\"2322\":1,\"2333\":1,\"2335\":1,\"2337\":1,\"2339\":1,\"2341\":1,\"2351\":2,\"2353\":2,\"2355\":2,\"2357\":2,\"2359\":1,\"2365\":1,\"2371\":1,\"2373\":1,\"2376\":5,\"2380\":1,\"2386\":72,\"2389\":73,\"2391\":73,\"2394\":72,\"2396\":158,\"2399\":73,\"2401\":1,\"2404\":73,\"2406\":1}}],[\"则配置文件frpc\",{\"1\":{\"531\":1}}],[\"~开头表示插件配置目录\",{\"1\":{\"720\":1}}],[\"~开头表示插件目录\",{\"1\":{\"528\":1}}],[\"~\",{\"1\":{\"528\":1,\"542\":1,\"720\":1}}],[\"覆盖ll的获取ip接口\",{\"1\":{\"528\":1,\"549\":1}}],[\"真实ip\",{\"0\":{\"526\":1}}],[\"端口为7000\",{\"1\":{\"531\":1}}],[\"端口\",{\"1\":{\"523\":1,\"524\":1}}],[\"强制下载材质包\",{\"1\":{\"573\":1}}],[\"强制下载材质包但不覆盖\",{\"1\":{\"451\":1}}],[\"强制允许玩家加入的协议版本\",{\"1\":{\"513\":1}}],[\"6mc\",{\"1\":{\"625\":1}}],[\"60\",{\"1\":{\"583\":1,\"602\":1}}],[\"64\",{\"1\":{\"561\":1}}],[\"6\",{\"1\":{\"513\":1,\"625\":1}}],[\"\",{\"1\":{\"504\":1}}],[\"毫秒\",{\"1\":{\"504\":1,\"632\":1}}],[\"单位\",{\"1\":{\"504\":1,\"573\":1,\"632\":1}}],[\"单核或低性能服务器慎用\",{\"1\":{\"29\":1}}],[\"方块交互\",{\"0\":{\"1916\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"方可在网页查看地图\",{\"1\":{\"619\":1,\"722\":1}}],[\"方可在\",{\"1\":{\"555\":1}}],[\"方便直接导入minecraft\",{\"1\":{\"498\":1}}],[\"方法二\",{\"0\":{\"344\":1}}],[\"方法一\",{\"0\":{\"338\":1}}],[\"方法\",{\"1\":{\"242\":1}}],[\"压缩包文件名\",{\"1\":{\"498\":1}}],[\"压缩包\",{\"1\":{\"498\":2}}],[\"创建新的命令\",{\"1\":{\"2365\":1}}],[\"创建浮空字\",{\"0\":{\"961\":1},\"1\":{\"976\":1,\"978\":1,\"980\":1,\"982\":1,\"984\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"创建\",{\"1\":{\"498\":2}}],[\"复制所有需要备份的文件夹\",{\"1\":{\"498\":1}}],[\"是\",{\"1\":{\"717\":1}}],[\"是否有领地\",{\"0\":{\"1246\":1,\"1275\":1,\"1304\":1,\"1327\":1},\"1\":{\"1265\":1,\"1267\":1,\"1269\":1,\"1271\":1,\"1273\":1,\"1294\":1,\"1296\":1,\"1298\":1,\"1300\":1,\"1302\":1,\"1317\":1,\"1319\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1340\":1,\"1342\":1,\"1344\":1,\"1346\":1,\"1348\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":4,\"2404\":4,\"2406\":4}}],[\"是否启用调试输出\",{\"1\":{\"731\":1}}],[\"是否启用玩家设置\",{\"1\":{\"699\":1}}],[\"是否需要op权限\",{\"1\":{\"625\":1}}],[\"是否在控制台显示玩家掉线信息\",{\"1\":{\"513\":1}}],[\"是否备份插件配置文件\",{\"1\":{\"498\":1}}],[\"是否备份插件数据文件\",{\"1\":{\"498\":1}}],[\"是否删除\",{\"1\":{\"498\":1}}],[\"是name\",{\"1\":{\"265\":1}}],[\"总开关\",{\"1\":{\"498\":1,\"573\":1}}],[\"做了一半\",{\"1\":{\"490\":1}}],[\"黑名单\",{\"1\":{\"490\":1}}],[\"赏金猎人还没做\",{\"1\":{\"489\":1}}],[\"接管\",{\"1\":{\"488\":1}}],[\"接口的插件\",{\"1\":{\"545\":1}}],[\"接口\",{\"0\":{\"7\":1}}],[\"跨服传送还没做\",{\"1\":{\"486\":1}}],[\"尚未完成但在计划中的\",{\"0\":{\"485\":1}}],[\"+\",{\"0\":{\"526\":1},\"1\":{\"481\":1,\"2365\":1,\"2371\":8,\"2373\":8,\"2376\":1}}],[\"个人设置\",{\"0\":{\"702\":1},\"1\":{\"703\":1}}],[\"个人\",{\"0\":{\"676\":1},\"1\":{\"479\":1}}],[\"伪造\",{\"0\":{\"516\":1},\"1\":{\"477\":1,\"478\":2}}],[\"放在ll的plugins文件夹下面\",{\"1\":{\"2376\":1}}],[\"放在pflp的scripts文件夹下面\",{\"1\":{\"2373\":1}}],[\"放在\",{\"1\":{\"2370\":1,\"2372\":1}}],[\"放置\",{\"0\":{\"1916\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"放置目录\",{\"1\":{\"650\":1}}],[\"放置方块数量\",{\"1\":{\"694\":1}}],[\"放置方块\",{\"1\":{\"221\":1}}],[\"放到插件配置目录会自动转换\",{\"1\":{\"476\":1}}],[\"年前的\",{\"1\":{\"476\":1}}],[\"兼容性\",{\"0\":{\"568\":1}}],[\"兼容\",{\"1\":{\"476\":1}}],[\"远古功能\",{\"1\":{\"476\":1}}],[\"远程控制\",{\"0\":{\"729\":1,\"730\":1},\"1\":{\"456\":1}}],[\"老功能\",{\"1\":{\"474\":1}}],[\"踢部分\",{\"1\":{\"474\":1}}],[\"关服传送\",{\"1\":{\"473\":1}}],[\"关于\",{\"0\":{\"4\":1}}],[\"自动加载\",{\"0\":{\"648\":1}}],[\"自动保存格式化的json\",{\"1\":{\"623\":1}}],[\"自动备份的时间间隔\",{\"1\":{\"498\":1}}],[\"自动备份\",{\"0\":{\"496\":1},\"1\":{\"472\":1}}],[\"自行搭建的服务\",{\"0\":{\"530\":1}}],[\"自定义菜单\",{\"0\":{\"620\":1},\"1\":{\"458\":1}}],[\"自定义脚本文件\",{\"1\":{\"311\":1}}],[\"自定义材质包路径\",{\"1\":{\"297\":1}}],[\"自定义提示语\",{\"0\":{\"250\":1}}],[\"保证$pf注册成功\",{\"1\":{\"2376\":1}}],[\"保证$pf变量正确获取\",{\"1\":{\"2365\":1,\"2371\":1}}],[\"保证记录文件最小\",{\"1\":{\"471\":1}}],[\"保护区\",{\"1\":{\"482\":1}}],[\"保存文件即自动加载\",{\"1\":{\"312\":1}}],[\"只能重载开服时已存在的文件\",{\"1\":{\"656\":1}}],[\"只要在配置文件开启以下选项即可\",{\"1\":{\"545\":1}}],[\"只要使用了\",{\"1\":{\"545\":1}}],[\"只记录必要数据\",{\"1\":{\"471\":1}}],[\"只不过用的是网页前端\",{\"1\":{\"339\":1}}],[\"行为日志\",{\"0\":{\"600\":1},\"1\":{\"471\":1}}],[\"行为包文件夹\",{\"1\":{\"295\":1,\"298\":1}}],[\"管理moneyapi|\",{\"1\":{\"470\":1}}],[\"unit\",{\"1\":{\"2396\":15}}],[\"udp\",{\"1\":{\"533\":1}}],[\"ui\",{\"1\":{\"470\":1,\"625\":4}}],[\"using\",{\"1\":{\"2389\":1,\"2391\":1}}],[\"usessl\",{\"1\":{\"720\":1}}],[\"usescoreboard\",{\"1\":{\"628\":1}}],[\"used\",{\"1\":{\"112\":1,\"113\":1,\"115\":1,\"116\":1}}],[\"us\",{\"1\":{\"293\":1,\"359\":1}}],[\"金钱接口\",{\"1\":{\"470\":1}}],[\"金钱\",{\"0\":{\"626\":1,\"2164\":1},\"1\":{\"470\":1,\"628\":1,\"2171\":1,\"2173\":1,\"2175\":1,\"2177\":1,\"2179\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"攻击反馈\",{\"0\":{\"491\":1},\"1\":{\"468\":1}}],[\"世界边界\",{\"1\":{\"466\":1}}],[\"世界边界模块的配置\",{\"1\":{\"73\":1}}],[\"｜聊天增强\",{\"0\":{\"505\":1},\"1\":{\"464\":1}}],[\"｜个人传送点\",{\"0\":{\"576\":1},\"1\":{\"437\":1}}],[\"命令接口\",{\"0\":{\"2363\":1}}],[\"命令描述\",{\"1\":{\"625\":1}}],[\"命令映射\",{\"0\":{\"508\":1},\"1\":{\"483\":1}}],[\"命令\",{\"0\":{\"499\":1,\"557\":1,\"579\":1,\"584\":1,\"636\":1,\"663\":1,\"679\":1,\"700\":1,\"707\":1,\"712\":1},\"1\":{\"463\":1,\"580\":1,\"583\":1,\"585\":1,\"639\":1,\"664\":1,\"666\":3,\"701\":1,\"713\":1,\"715\":1,\"716\":1}}],[\"命令提示\",{\"1\":{\"251\":1}}],[\"返回json对象字符串\",{\"0\":{\"1983\":1},\"1\":{\"1992\":1,\"1994\":1,\"1996\":1,\"1998\":1,\"2000\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"返回json字符串字典\",{\"0\":{\"1712\":1,\"1737\":1,\"1762\":1,\"1789\":1},\"1\":{\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":4,\"2404\":4,\"2406\":4}}],[\"返回json字符串\",{\"0\":{\"1350\":1,\"1379\":1,\"1408\":1,\"1431\":1,\"1454\":1,\"1483\":1,\"1512\":1,\"1535\":1},\"1\":{\"1369\":1,\"1371\":1,\"1373\":1,\"1375\":1,\"1377\":1,\"1398\":1,\"1400\":1,\"1402\":1,\"1404\":1,\"1406\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1427\":1,\"1429\":1,\"1444\":1,\"1446\":1,\"1448\":1,\"1450\":1,\"1452\":1,\"1473\":1,\"1475\":1,\"1477\":1,\"1479\":1,\"1481\":1,\"1502\":1,\"1504\":1,\"1506\":1,\"1508\":1,\"1510\":1,\"1525\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1533\":1,\"1548\":1,\"1550\":1,\"1552\":1,\"1554\":1,\"1556\":1,\"2386\":8,\"2389\":8,\"2391\":8,\"2394\":8,\"2396\":8,\"2399\":8,\"2401\":8,\"2404\":8,\"2406\":8}}],[\"返回true为存在并移除\",{\"0\":{\"1103\":1},\"1\":{\"1110\":1,\"1112\":1,\"1114\":1,\"1116\":1,\"1118\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"返回true为创建成功\",{\"0\":{\"1084\":1},\"1\":{\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"返回值类型\",{\"1\":{\"818\":1,\"820\":1,\"822\":1,\"824\":1,\"826\":1,\"828\":1,\"835\":1,\"837\":1,\"839\":1,\"841\":1,\"843\":1,\"845\":1,\"852\":1,\"854\":1,\"856\":1,\"858\":1,\"860\":1,\"862\":1,\"869\":1,\"871\":1,\"873\":1,\"875\":1,\"877\":1,\"879\":1,\"908\":1,\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"918\":1,\"974\":1,\"976\":1,\"978\":1,\"980\":1,\"982\":1,\"984\":1,\"1015\":1,\"1017\":1,\"1019\":1,\"1021\":1,\"1023\":1,\"1025\":1,\"1034\":1,\"1036\":1,\"1038\":1,\"1040\":1,\"1042\":1,\"1044\":1,\"1053\":1,\"1055\":1,\"1057\":1,\"1059\":1,\"1061\":1,\"1063\":1,\"1072\":1,\"1074\":1,\"1076\":1,\"1078\":1,\"1080\":1,\"1082\":1,\"1091\":1,\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"1108\":1,\"1110\":1,\"1112\":1,\"1114\":1,\"1116\":1,\"1118\":1,\"1129\":1,\"1131\":1,\"1133\":1,\"1135\":1,\"1137\":1,\"1139\":1,\"1152\":1,\"1154\":1,\"1156\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"1171\":1,\"1173\":1,\"1175\":1,\"1177\":1,\"1179\":1,\"1181\":1,\"1189\":1,\"1191\":1,\"1193\":1,\"1195\":1,\"1197\":1,\"1199\":1,\"1203\":1,\"1205\":1,\"1207\":1,\"1209\":1,\"1211\":1,\"1213\":1,\"1241\":1,\"1243\":1,\"1263\":1,\"1265\":1,\"1267\":1,\"1269\":1,\"1271\":1,\"1273\":1,\"1292\":1,\"1294\":1,\"1296\":1,\"1298\":1,\"1300\":1,\"1302\":1,\"1315\":1,\"1317\":1,\"1319\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1338\":1,\"1340\":1,\"1342\":1,\"1344\":1,\"1346\":1,\"1348\":1,\"1367\":1,\"1369\":1,\"1371\":1,\"1373\":1,\"1375\":1,\"1377\":1,\"1396\":1,\"1398\":1,\"1400\":1,\"1402\":1,\"1404\":1,\"1406\":1,\"1419\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1427\":1,\"1429\":1,\"1442\":1,\"1444\":1,\"1446\":1,\"1448\":1,\"1450\":1,\"1452\":1,\"1471\":1,\"1473\":1,\"1475\":1,\"1477\":1,\"1479\":1,\"1481\":1,\"1500\":1,\"1502\":1,\"1504\":1,\"1506\":1,\"1508\":1,\"1510\":1,\"1523\":1,\"1525\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1533\":1,\"1546\":1,\"1548\":1,\"1550\":1,\"1552\":1,\"1554\":1,\"1556\":1,\"1571\":1,\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1596\":1,\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"1623\":1,\"1625\":1,\"1627\":1,\"1629\":1,\"1631\":1,\"1633\":1,\"1654\":1,\"1656\":1,\"1658\":1,\"1660\":1,\"1662\":1,\"1664\":1,\"1677\":1,\"1679\":1,\"1681\":1,\"1683\":1,\"1685\":1,\"1687\":1,\"1700\":1,\"1702\":1,\"1704\":1,\"1706\":1,\"1708\":1,\"1710\":1,\"1725\":1,\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1750\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1777\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1804\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"1829\":1,\"1831\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1854\":1,\"1856\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"1879\":1,\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1904\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"1929\":1,\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1954\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"1971\":1,\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"1990\":1,\"1992\":1,\"1994\":1,\"1996\":1,\"1998\":1,\"2000\":1,\"2009\":1,\"2011\":1,\"2013\":1,\"2015\":1,\"2017\":1,\"2019\":1,\"2030\":1,\"2032\":1,\"2034\":1,\"2036\":1,\"2038\":1,\"2040\":1,\"2051\":1,\"2053\":1,\"2055\":1,\"2057\":1,\"2059\":1,\"2061\":1,\"2068\":1,\"2070\":1,\"2072\":1,\"2074\":1,\"2076\":1,\"2078\":1,\"2085\":1,\"2087\":1,\"2089\":1,\"2091\":1,\"2093\":1,\"2095\":1,\"2107\":1,\"2109\":1,\"2111\":1,\"2113\":1,\"2115\":1,\"2117\":1,\"2122\":1,\"2124\":1,\"2126\":1,\"2128\":1,\"2130\":1,\"2132\":1,\"2169\":1,\"2171\":1,\"2173\":1,\"2175\":1,\"2177\":1,\"2179\":1,\"2312\":1,\"2314\":1,\"2316\":1,\"2318\":1,\"2320\":1,\"2322\":1,\"2349\":1,\"2351\":1,\"2353\":1,\"2355\":1,\"2357\":1,\"2359\":1,\"2386\":57,\"2389\":57,\"2391\":57,\"2394\":57,\"2396\":57,\"2399\":58,\"2401\":58,\"2404\":57,\"2406\":57}}],[\"返回\",{\"0\":{\"1966\":1},\"1\":{\"461\":1,\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"礼品码\",{\"0\":{\"556\":1},\"1\":{\"460\":1}}],[\"礼品码模块配置文件\",{\"1\":{\"287\":1}}],[\"验证\",{\"1\":{\"455\":1}}],[\"未通过\",{\"1\":{\"455\":1}}],[\"到\",{\"1\":{\"453\":1}}],[\"范围\",{\"1\":{\"453\":1,\"706\":1}}],[\"编辑已有图片\",{\"0\":{\"670\":1}}],[\"编辑菜单\",{\"1\":{\"639\":1}}],[\"编辑世界高度\",{\"0\":{\"559\":1},\"1\":{\"452\":1}}],[\"编辑后下载配置文件\",{\"1\":{\"336\":1}}],[\"支持任意命令\",{\"0\":{\"920\":1},\"1\":{\"931\":1,\"933\":1,\"935\":1,\"937\":1,\"939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"支持\",{\"1\":{\"656\":1}}],[\"支持筛选\",{\"1\":{\"613\":1}}],[\"支持动态最大玩家数量\",{\"1\":{\"478\":1}}],[\"支持三个维度分开修改\",{\"1\":{\"451\":1}}],[\"支持beplaceholderapi的所有变量\",{\"1\":{\"232\":1}}],[\"修改玩家的显示昵称\",{\"0\":{\"2382\":1}}],[\"修改\",{\"0\":{\"2378\":1}}],[\"修改统计变量\",{\"0\":{\"2377\":1}}],[\"修改家权限组内容\",{\"0\":{\"2021\":1},\"1\":{\"2032\":1,\"2034\":1,\"2036\":1,\"2038\":1,\"2040\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"修改提示\",{\"0\":{\"591\":1}}],[\"修改配置文件\",{\"0\":{\"540\":1}}],[\"修改配置文件以及开启需要的模块\",{\"0\":{\"397\":1}}],[\"修改聊天格式\",{\"1\":{\"465\":1}}],[\"修改掉线提示\",{\"0\":{\"511\":1},\"1\":{\"454\":1}}],[\"修改红石速率\",{\"1\":{\"451\":1}}],[\"显示在\",{\"1\":{\"525\":1}}],[\"显示在局域网的\",{\"1\":{\"478\":1}}],[\"显示在暂停界面\",{\"1\":{\"451\":1}}],[\"显示玩家头像\",{\"1\":{\"333\":1}}],[\"假种子\",{\"1\":{\"451\":1}}],[\"辅助功能\",{\"0\":{\"571\":1},\"1\":{\"450\":1}}],[\"动态\",{\"0\":{\"630\":1},\"1\":{\"448\":1}}],[\"归属地显示\",{\"0\":{\"588\":1},\"1\":{\"447\":1}}],[\"进服公告\",{\"0\":{\"633\":1},\"1\":{\"467\":1}}],[\"进服\",{\"0\":{\"588\":1},\"1\":{\"447\":1}}],[\"进服次数\",{\"1\":{\"227\":1,\"694\":1}}],[\"信息\",{\"0\":{\"516\":1,\"672\":1},\"1\":{\"446\":1,\"477\":1}}],[\"记分板\",{\"0\":{\"672\":1},\"1\":{\"446\":1}}],[\"记得及时关注最新构建\",{\"0\":{\"408\":1,\"421\":1}}],[\"侧边栏\",{\"0\":{\"690\":1},\"1\":{\"444\":1}}],[\"随机传送\",{\"0\":{\"704\":1},\"1\":{\"438\":1}}],[\"各模块使用方法\",{\"0\":{\"431\":1}}],[\"用于生成头像链接等\",{\"1\":{\"720\":1}}],[\"用于修复\",{\"1\":{\"523\":1}}],[\"用方\",{\"0\":{\"430\":1}}],[\"用户使用多语言\",{\"0\":{\"255\":1}}],[\"上述操作重做一遍\",{\"1\":{\"415\":1,\"428\":1}}],[\"上编辑此页来跳转到文章对应的\",{\"1\":{\"80\":1}}],[\"备份到的目录\",{\"1\":{\"498\":1}}],[\"备份worlds\",{\"1\":{\"414\":1,\"427\":1}}],[\"备份数据文件和配置文件\",{\"1\":{\"410\":1,\"423\":1}}],[\"以彩色延迟为例\",{\"0\":{\"2367\":1}}],[\"以execute\",{\"1\":{\"625\":1}}],[\"以玩家op身份执行命令\",{\"1\":{\"625\":1}}],[\"以玩家身份执行命令\",{\"1\":{\"625\":1}}],[\"以节省空间\",{\"1\":{\"605\":1}}],[\"以及摆放各模块的图骗\",{\"1\":{\"432\":1}}],[\"以及\",{\"0\":{\"413\":1,\"426\":1}}],[\"以体验最新\",{\"0\":{\"408\":1,\"421\":1}}],[\"以至于暂时无法在\",{\"1\":{\"56\":1}}],[\"配合外部面板以自动重启\",{\"1\":{\"406\":1,\"419\":1}}],[\"配置限制\",{\"0\":{\"562\":1}}],[\"配置项中开启材质包加密后里面的材质包会自动用随机密钥加密后发给客户端\",{\"1\":{\"297\":1}}],[\"配置值\",{\"1\":{\"71\":1}}],[\"配置文件各个地方可以直接使用变量\",{\"1\":{\"2368\":1}}],[\"配置文件格式\",{\"1\":{\"532\":1}}],[\"配置文件config\",{\"1\":{\"253\":1}}],[\"配置文件示例\",{\"0\":{\"72\":1}}],[\"配置文件基本结构\",{\"0\":{\"70\":1}}],[\"配置文件位于\",{\"1\":{\"68\":1,\"398\":1}}],[\"配置文件使用json格式\",{\"1\":{\"67\":1}}],[\"配置文件\",{\"0\":{\"66\":1,\"492\":1,\"497\":1,\"503\":1,\"506\":1,\"509\":1,\"512\":1,\"517\":1,\"527\":1,\"560\":1,\"572\":1,\"577\":1,\"582\":1,\"589\":1,\"601\":1,\"616\":1,\"621\":1,\"627\":1,\"631\":1,\"634\":1,\"641\":1,\"661\":1,\"677\":1,\"684\":1,\"693\":1,\"698\":1,\"705\":1,\"710\":1,\"719\":1}}],[\"配置工具源码\",{\"1\":{\"336\":1}}],[\"配置工具\",{\"0\":{\"2\":1}}],[\"等\",{\"1\":{\"2379\":1}}],[\"等待更新完成后会自动替换并关闭服务器\",{\"1\":{\"406\":1,\"419\":1}}],[\"等控制符参考文档\",{\"1\":{\"238\":1}}],[\"或重启服务端以应用更改\",{\"1\":{\"403\":1}}],[\"或者也可手动下载liteloader\",{\"1\":{\"392\":1}}],[\"或者说\",{\"1\":{\"341\":1}}],[\"或者文档里面回复等等\",{\"1\":{\"37\":1}}],[\"像这样\",{\"1\":{\"401\":1}}],[\"起飞\",{\"0\":{\"393\":1}}],[\"详见压缩包注释\",{\"1\":{\"391\":1}}],[\"组件\",{\"1\":{\"388\":1}}],[\"无参数\",{\"1\":{\"1202\":1,\"1216\":1,\"2121\":1}}],[\"无视重命名\",{\"0\":{\"901\":1},\"1\":{\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"918\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"无返回值\",{\"1\":{\"744\":1,\"763\":1,\"782\":1,\"801\":1,\"889\":1,\"929\":1,\"948\":1,\"993\":1,\"1217\":1,\"2151\":1,\"2190\":1,\"2211\":1,\"2247\":1,\"2288\":1,\"2331\":1}}],[\"无法加入服务器\",{\"1\":{\"513\":2}}],[\"无法过部分改版\",{\"1\":{\"474\":1}}],[\"无任何多余文字\",{\"1\":{\"471\":1}}],[\"无须安装\",{\"1\":{\"388\":1}}],[\"无需安装\",{\"1\":{\"388\":1}}],[\"无需查看具体内容\",{\"1\":{\"296\":1}}],[\"全部\",{\"1\":{\"386\":1}}],[\"全局配置文件\",{\"1\":{\"622\":1}}],[\"全局传送点\",{\"0\":{\"709\":1},\"1\":{\"436\":1}}],[\"全局传送等待时间\",{\"1\":{\"73\":1}}],[\"全局变量\",{\"0\":{\"84\":1}}],[\"全局功能值\",{\"1\":{\"71\":1}}],[\"全局功能名称\",{\"1\":{\"71\":1}}],[\"二进制文件\",{\"1\":{\"376\":1}}],[\"平台\",{\"1\":{\"374\":1}}],[\"平均延迟\",{\"1\":{\"155\":1}}],[\"版本不合规等踢出提示\",{\"1\":{\"455\":1}}],[\"版\",{\"0\":{\"373\":1}}],[\"找到\",{\"1\":{\"372\":1}}],[\"找到最新的\",{\"1\":{\"367\":1}}],[\"并手动下载pflp\",{\"1\":{\"392\":1}}],[\"并安装在需要开服的主机上\",{\"1\":{\"371\":1}}],[\"并持续开发\",{\"1\":{\"43\":1}}],[\"点击关闭后是否返回上一级菜单\",{\"1\":{\"625\":1}}],[\"点击配置文件\",{\"0\":{\"536\":1}}],[\"点击下载\",{\"1\":{\"371\":1}}],[\"点击assets展开\",{\"1\":{\"367\":1}}],[\"之后便会生成bedrock\",{\"1\":{\"367\":1}}],[\"2535445286243008\",{\"1\":{\"2380\":2}}],[\"2500\",{\"1\":{\"632\":1}}],[\"29132\",{\"1\":{\"731\":1}}],[\"233\",{\"1\":{\"685\":1,\"2380\":1}}],[\"20\",{\"1\":{\"662\":1}}],[\"2020\",{\"1\":{\"734\":1}}],[\"2022\",{\"1\":{\"392\":1,\"412\":1,\"425\":1}}],[\"2023\",{\"1\":{\"46\":1}}],[\"2x\",{\"1\":{\"625\":1}}],[\"2d领地最小面积\",{\"1\":{\"583\":1}}],[\"2d领地最大面积\",{\"1\":{\"583\":1}}],[\"2d领地回收价格\",{\"1\":{\"583\":1}}],[\"2d领地价格\",{\"1\":{\"583\":1}}],[\"2\",{\"0\":{\"364\":1},\"1\":{\"513\":2,\"583\":1,\"594\":2,\"625\":1,\"685\":1,\"2371\":1,\"2373\":1,\"2380\":1}}],[\"45\",{\"1\":{\"699\":1}}],[\"4\",{\"0\":{\"360\":1,\"393\":1},\"1\":{\"513\":1,\"583\":2,\"594\":2,\"625\":2}}],[\"启动服务器\",{\"0\":{\"394\":1}}],[\"启动\",{\"1\":{\"354\":1}}],[\"和普通玩家前往传送点的命令不一样\",{\"1\":{\"717\":1}}],[\"和\",{\"0\":{\"389\":1,\"413\":1,\"426\":1},\"1\":{\"353\":1,\"653\":1}}],[\"装载\",{\"0\":{\"349\":1}}],[\"否则地图不会时时刷新\",{\"1\":{\"722\":1}}],[\"否则地图生成会很奇怪\",{\"1\":{\"567\":1}}],[\"否则会产生不期望的区块\",{\"1\":{\"569\":1}}],[\"否则任何人拿到地址都能修改配置文件\",{\"1\":{\"348\":1}}],[\"否则无法正常加载\",{\"1\":{\"262\":1}}],[\"你不在服务器的白名单内\",{\"1\":{\"513\":1}}],[\"你会看到如下内容\",{\"1\":{\"372\":1}}],[\"你的服务器ip\",{\"1\":{\"348\":1}}],[\"你可以通过在这个仓库提交\",{\"1\":{\"79\":1}}],[\"你可以点赞\",{\"1\":{\"76\":1}}],[\"打开此界面\",{\"1\":{\"667\":1}}],[\"打开表单\",{\"1\":{\"625\":1}}],[\"打开文件把看起来中意的模块开起来\",{\"1\":{\"400\":1}}],[\"打开网页编辑\",{\"1\":{\"348\":1}}],[\"打开config\",{\"1\":{\"345\":1}}],[\"打开服务端配置工具\",{\"1\":{\"73\":1}}],[\"需要同时开启mapservice\",{\"1\":{\"720\":1}}],[\"需要\",{\"1\":{\"341\":1}}],[\"需要开启指定模块\",{\"0\":{\"209\":1}}],[\"比较接近\",{\"1\":{\"339\":1}}],[\"地狱\",{\"1\":{\"573\":1}}],[\"地址和归属地信息用作缓存\",{\"1\":{\"598\":1}}],[\"地址\",{\"1\":{\"336\":1,\"359\":1,\"367\":1,\"371\":1}}],[\"地图服务简要数据\",{\"1\":{\"331\":1}}],[\"地图服务区块颜色数据\",{\"1\":{\"315\":1}}],[\"然后可以通过自定义api获取ip位并设置到pflp的缓存里面\",{\"1\":{\"2376\":1}}],[\"然后在配置文件各个地方可以直接使用变量\",{\"1\":{\"2373\":1}}],[\"然后在远程桌面通过非\",{\"1\":{\"347\":1}}],[\"然后运行llpeeditor\",{\"1\":{\"367\":1}}],[\"然后控制台输入pflp\",{\"1\":{\"336\":1}}],[\"然后发截图或录屏给作者\",{\"1\":{\"33\":1}}],[\"网站图标\",{\"1\":{\"720\":1}}],[\"网站标题\",{\"1\":{\"720\":1}}],[\"网页标题\",{\"1\":{\"720\":1}}],[\"网页扩展\",{\"0\":{\"718\":1},\"1\":{\"439\":1}}],[\"网页配置\",{\"0\":{\"335\":1}}],[\"网络运营商\",{\"1\":{\"193\":1}}],[\"会导致菜单中的注释消失\",{\"1\":{\"623\":1}}],[\"会重新获取\",{\"1\":{\"333\":1}}],[\"会自动获取\",{\"1\":{\"327\":1}}],[\"聊天实时翻译\",{\"1\":{\"462\":1}}],[\"聊天记录数据库\",{\"1\":{\"332\":1}}],[\"聊天配置数据文件\",{\"1\":{\"321\":1}}],[\"商店\",{\"1\":{\"475\":1}}],[\"商店偏好数据文件\",{\"1\":{\"328\":1}}],[\"商店模块配置文件\",{\"1\":{\"289\":1}}],[\"位置缓存数据文件\",{\"1\":{\"327\":1}}],[\"领地是否有使用箱子的权限\",{\"0\":{\"1941\":1},\"1\":{\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"领地是否有开箱\",{\"0\":{\"1916\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"领地是否有指定权限\",{\"0\":{\"1762\":1,\"1789\":1},\"1\":{\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"领地是否共享给指定玩家\",{\"0\":{\"1866\":1,\"1891\":1},\"1\":{\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"领地的主人\",{\"0\":{\"1816\":1,\"1841\":1},\"1\":{\"1831\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1856\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"领地权限\",{\"0\":{\"1712\":1,\"1737\":1},\"1\":{\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"领地数据源详细信息\",{\"0\":{\"1454\":1,\"1483\":1,\"1512\":1,\"1535\":1,\"1558\":1,\"1583\":1},\"1\":{\"1473\":1,\"1475\":1,\"1477\":1,\"1479\":1,\"1481\":1,\"1502\":1,\"1504\":1,\"1506\":1,\"1508\":1,\"1510\":1,\"1525\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1533\":1,\"1548\":1,\"1550\":1,\"1552\":1,\"1554\":1,\"1556\":1,\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"2386\":6,\"2389\":6,\"2391\":6,\"2394\":6,\"2396\":6,\"2399\":6,\"2401\":6,\"2404\":6,\"2406\":6}}],[\"领地数据文件\",{\"1\":{\"325\":1}}],[\"领地信息\",{\"0\":{\"1350\":1,\"1379\":1,\"1408\":1,\"1431\":1},\"1\":{\"1369\":1,\"1371\":1,\"1373\":1,\"1375\":1,\"1377\":1,\"1398\":1,\"1400\":1,\"1402\":1,\"1404\":1,\"1406\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1427\":1,\"1429\":1,\"1444\":1,\"1446\":1,\"1448\":1,\"1450\":1,\"1452\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":4,\"2404\":4,\"2406\":4}}],[\"领地额外监听器\",{\"1\":{\"583\":1}}],[\"领地提示时间\",{\"1\":{\"583\":1}}],[\"领地提示数量\",{\"1\":{\"583\":1}}],[\"领地传送\",{\"1\":{\"583\":1}}],[\"领地\",{\"0\":{\"581\":1},\"1\":{\"443\":1}}],[\"领地名称\",{\"1\":{\"208\":1}}],[\"身份数据文件\",{\"1\":{\"324\":1}}],[\"浮动文字数据文件\",{\"1\":{\"323\":1}}],[\"死亡反馈\",{\"1\":{\"461\":1}}],[\"死亡数据文件\",{\"1\":{\"322\":1}}],[\"死亡次数\",{\"1\":{\"223\":1,\"694\":1}}],[\"昵称\",{\"1\":{\"321\":1}}],[\"后显示在局域网游戏的\",{\"1\":{\"523\":1}}],[\"后缀\",{\"1\":{\"321\":1}}],[\"后即可直接使用\",{\"1\":{\"232\":1}}],[\"前缀\",{\"1\":{\"321\":1}}],[\"封禁数据文件\",{\"1\":{\"320\":1}}],[\"家数据文件\",{\"1\":{\"318\":1}}],[\"区块文件\",{\"1\":{\"316\":1}}],[\"脚本\",{\"1\":{\"2370\":1}}],[\"脚本依赖配置文件\",{\"1\":{\"313\":1}}],[\"脚本依赖文件夹\",{\"1\":{\"308\":1}}],[\"脚本文件支持热重载\",{\"1\":{\"312\":1}}],[\"脚本文件夹\",{\"1\":{\"307\":1}}],[\"脚本引擎\",{\"1\":{\"48\":1}}],[\"即可运行\",{\"1\":{\"543\":1}}],[\"即可直接编辑\",{\"1\":{\"347\":1}}],[\"即\",{\"1\":{\"528\":1}}],[\"即pflp的config\",{\"1\":{\"528\":1}}],[\"即对应删除导入的图片\",{\"1\":{\"306\":1}}],[\"即使其他插件通过\",{\"1\":{\"59\":1}}],[\"即使有部分相似的功能\",{\"1\":{\"43\":1}}],[\"某自定义材质包\",{\"1\":{\"300\":1}}],[\"通常不建议开启\",{\"1\":{\"720\":1}}],[\"通常不建议关闭\",{\"1\":{\"583\":1}}],[\"通常是无权限的提示\",{\"1\":{\"583\":1}}],[\"通常显示在暂停界面\",{\"1\":{\"573\":1}}],[\"通常只有\",{\"1\":{\"525\":1}}],[\"通常并不一定有效\",{\"1\":{\"513\":1}}],[\"通常由插件生成\",{\"1\":{\"296\":1}}],[\"通过已定义的id获取格式化内容\",{\"0\":{\"1120\":1,\"1141\":1,\"1164\":1},\"1\":{\"1131\":1,\"1133\":1,\"1135\":1,\"1137\":1,\"1139\":1,\"1154\":1,\"1156\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"1173\":1,\"1175\":1,\"1177\":1,\"1179\":1,\"1181\":1,\"2386\":3,\"2389\":3,\"2391\":3,\"2394\":3,\"2396\":3,\"2399\":3,\"2401\":3,\"2404\":3,\"2406\":3}}],[\"通过\",{\"1\":{\"185\":1,\"314\":1}}],[\"通过公开接口\",{\"1\":{\"9\":1,\"2301\":1}}],[\"材质包热重载暂未实现\",{\"1\":{\"659\":1}}],[\"材质包缓存\",{\"1\":{\"296\":1}}],[\"材质包语言文件基本相同\",{\"1\":{\"248\":1}}],[\"资源包管理器\",{\"0\":{\"640\":1},\"1\":{\"441\":1}}],[\"资源包图标\",{\"1\":{\"302\":1}}],[\"资源包描述文件\",{\"1\":{\"301\":1}}],[\"资源包文件夹\",{\"1\":{\"299\":1,\"647\":1,\"651\":1}}],[\"资源包\",{\"1\":{\"295\":1}}],[\"英文语言文件\",{\"1\":{\"293\":1,\"294\":1}}],[\"└─temp\",{\"1\":{\"291\":1}}],[\"└─\",{\"1\":{\"291\":1}}],[\"└─node\",{\"1\":{\"291\":1}}],[\"└─resource\",{\"1\":{\"291\":1}}],[\"└─customize\",{\"1\":{\"291\":1}}],[\"│\",{\"1\":{\"291\":5}}],[\"├─scripts\",{\"1\":{\"291\":1}}],[\"├─pictures\",{\"1\":{\"291\":1}}],[\"├─pack\",{\"1\":{\"291\":1}}],[\"├─behavior\",{\"1\":{\"291\":1}}],[\"├─lang\",{\"1\":{\"291\":1}}],[\"├─data\",{\"1\":{\"291\":1}}],[\"菜单内容\",{\"1\":{\"625\":1}}],[\"菜单标题\",{\"1\":{\"625\":1}}],[\"菜单id\",{\"1\":{\"625\":2}}],[\"菜单模块配置文件\",{\"1\":{\"286\":1}}],[\"菜单等\",{\"1\":{\"83\":1}}],[\"kicktoolbox\",{\"1\":{\"474\":1}}],[\"kill\",{\"1\":{\"228\":1,\"230\":2,\"694\":4}}],[\"key\",{\"0\":{\"1712\":1,\"1737\":1,\"1762\":1,\"1789\":1},\"1\":{\"265\":1,\"625\":1,\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":4,\"2404\":4,\"2406\":4}}],[\"由于\",{\"1\":{\"265\":1,\"274\":1}}],[\"⚠️\",{\"1\":{\"262\":1}}],[\"迁移数据到本插件\",{\"0\":{\"261\":1,\"273\":1}}],[\"从\",{\"0\":{\"261\":1,\"273\":1}}],[\"数据库储存日志记录\",{\"1\":{\"604\":1}}],[\"数据库\",{\"1\":{\"471\":1}}],[\"数据文件夹\",{\"1\":{\"317\":1}}],[\"数据迁移\",{\"0\":{\"260\":1}}],[\"数字格式\",{\"1\":{\"241\":1}}],[\"时建议把语言文件中的作者一项加上你的昵称\",{\"1\":{\"259\":1}}],[\"时间格式\",{\"1\":{\"240\":1}}],[\"目前添加材质包后需要重启服务器方可应用\",{\"1\":{\"659\":1}}],[\"目前貌似没自定义密钥的需求就不做自定义了\",{\"1\":{\"642\":1}}],[\"目前只做了弹射物击中的反馈\",{\"1\":{\"469\":1}}],[\"目前的语言文件是机翻的\",{\"1\":{\"258\":1}}],[\"目录下\",{\"1\":{\"282\":1}}],[\"目录\",{\"1\":{\"51\":1,\"367\":1,\"2370\":1}}],[\"翻译个人设置文件\",{\"1\":{\"330\":1}}],[\"翻译后的语言文件可以通过\",{\"1\":{\"258\":1}}],[\"翻译\",{\"0\":{\"257\":1,\"2098\":1},\"1\":{\"2109\":1,\"2111\":1,\"2113\":1,\"2115\":1,\"2117\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"那么他可以使用\",{\"1\":{\"256\":1}}],[\"那么必须是由\",{\"1\":{\"33\":1}}],[\"表示羊\",{\"1\":{\"694\":1}}],[\"表示玩家\",{\"1\":{\"694\":1}}],[\"表示保留小数点后一位\",{\"1\":{\"241\":1}}],[\"表单每页显示的项目数量\",{\"1\":{\"583\":2}}],[\"表单内容均可以通过语言文件自定义\",{\"1\":{\"251\":1}}],[\"百分号对于前后大括号\",{\"1\":{\"238\":1}}],[\"参考string\",{\"1\":{\"242\":1}}],[\"参考接口\",{\"1\":{\"236\":1,\"244\":1}}],[\"参考命令接口\",{\"1\":{\"63\":1}}],[\"安装成功会出现如下内容\",{\"1\":{\"396\":1}}],[\"安装运行时即可\",{\"1\":{\"388\":1}}],[\"安装程序\",{\"1\":{\"375\":1}}],[\"安装微软\",{\"0\":{\"370\":1}}],[\"安装liteloader\",{\"0\":{\"368\":1}}],[\"安装liteloaderbds\",{\"0\":{\"364\":1}}],[\"安装bedrock\",{\"0\":{\"356\":1}}],[\"安装插件\",{\"0\":{\"350\":1}}],[\"安装依赖补全库\",{\"1\":{\"314\":1}}],[\"安装\",{\"1\":{\"232\":1}}],[\"羊\",{\"1\":{\"230\":1}}],[\"击杀次数\",{\"1\":{\"229\":1,\"694\":1}}],[\"重写和替换自带命令\",{\"0\":{\"2364\":1}}],[\"重写所有内容\",{\"1\":{\"26\":1}}],[\"重新加载所有功能的配置文件\",{\"0\":{\"1215\":1},\"1\":{\"1219\":1,\"1221\":1,\"1223\":1,\"1225\":1,\"1227\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"重命名命令\",{\"0\":{\"882\":1},\"1\":{\"891\":1,\"893\":1,\"895\":1,\"897\":1,\"899\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"重启后保留聊天\",{\"1\":{\"720\":1}}],[\"重发间隔\",{\"1\":{\"662\":1}}],[\"重生次数\",{\"1\":{\"225\":1,\"694\":1}}],[\"|>tpa\",{\"1\":{\"2359\":1}}],[\"|>statistics\",{\"1\":{\"2322\":1,\"2341\":1}}],[\"|>particlesgraphics\",{\"1\":{\"2257\":1,\"2298\":1}}],[\"|>money\",{\"1\":{\"2179\":1,\"2200\":1,\"2221\":1}}],[\"|>location\",{\"1\":{\"2161\":1}}],[\"|>language\",{\"1\":{\"2117\":1}}],[\"|>lands\",{\"1\":{\"1273\":1,\"1302\":1,\"1325\":1,\"1348\":1,\"1377\":1,\"1406\":1,\"1429\":1,\"1452\":1,\"1481\":1,\"1510\":1,\"1533\":1,\"1556\":1,\"1581\":1,\"1606\":1,\"1633\":1,\"1664\":1,\"1687\":1,\"1710\":1,\"1735\":1,\"1760\":1,\"1787\":1,\"1814\":1,\"1839\":1,\"1864\":1,\"1889\":1,\"1914\":1,\"1939\":1,\"1964\":1,\"1981\":1,\"2000\":1,\"2019\":1,\"2040\":1,\"2061\":1,\"2078\":1,\"2095\":1}}],[\"|>general\",{\"1\":{\"1199\":1}}],[\"|>format\",{\"1\":{\"1025\":1,\"1044\":1,\"1063\":1,\"1082\":1,\"1101\":1,\"1118\":1,\"1139\":1,\"1162\":1,\"1181\":1}}],[\"|>floattext\",{\"1\":{\"984\":1,\"1003\":1}}],[\"|>command\",{\"1\":{\"899\":1,\"918\":1,\"939\":1,\"958\":1}}],[\"|>chatex\",{\"1\":{\"754\":1,\"773\":1,\"792\":1,\"811\":1,\"828\":1,\"845\":1,\"862\":1,\"879\":1}}],[\"|>ignore\",{\"1\":{\"828\":1,\"845\":1,\"862\":1,\"879\":1,\"918\":1,\"984\":1,\"1025\":1,\"1044\":1,\"1063\":1,\"1082\":1,\"1101\":1,\"1118\":1,\"1139\":1,\"1162\":1,\"1181\":1,\"1199\":1,\"1213\":1,\"1273\":1,\"1302\":1,\"1325\":1,\"1348\":1,\"1377\":1,\"1406\":1,\"1429\":1,\"1452\":1,\"1481\":1,\"1510\":1,\"1533\":1,\"1556\":1,\"1581\":1,\"1606\":1,\"1633\":1,\"1664\":1,\"1687\":1,\"1710\":1,\"1735\":1,\"1760\":1,\"1787\":1,\"1814\":1,\"1839\":1,\"1864\":1,\"1889\":1,\"1914\":1,\"1939\":1,\"1964\":1,\"1981\":1,\"2000\":1,\"2019\":1,\"2040\":1,\"2061\":1,\"2078\":1,\"2095\":1,\"2117\":1,\"2132\":1,\"2179\":1,\"2322\":1,\"2359\":1}}],[\"|\",{\"0\":{\"210\":1,\"491\":1,\"496\":1,\"502\":1,\"508\":1,\"511\":1,\"516\":1,\"526\":1,\"556\":1,\"559\":1,\"571\":1,\"581\":1,\"588\":1,\"600\":1,\"615\":1,\"620\":1,\"626\":1,\"630\":1,\"633\":1,\"640\":1,\"660\":1,\"672\":1,\"674\":1,\"676\":1,\"683\":1,\"690\":1,\"692\":1,\"697\":1,\"704\":1,\"709\":1,\"718\":1,\"729\":1},\"1\":{\"379\":5,\"381\":1,\"382\":1,\"384\":3,\"385\":2,\"435\":1,\"436\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"444\":1,\"445\":1,\"446\":1,\"447\":1,\"448\":1,\"449\":1,\"450\":1,\"452\":1,\"454\":1,\"456\":1,\"458\":1,\"460\":1,\"461\":1,\"462\":1,\"466\":1,\"467\":1,\"468\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":1,\"474\":1,\"475\":1,\"477\":1,\"479\":1,\"480\":1,\"481\":1,\"482\":1,\"483\":1,\"484\":1,\"486\":1,\"488\":1,\"489\":1,\"490\":1}}],[\"高性能\",{\"1\":{\"614\":1}}],[\"高\",{\"1\":{\"208\":1}}],[\"宽\",{\"1\":{\"208\":1}}],[\"长\",{\"1\":{\"208\":1}}],[\"y\",{\"1\":{\"968\":1,\"976\":1,\"978\":2,\"980\":1,\"982\":1,\"984\":1,\"1309\":1,\"1317\":1,\"1319\":2,\"1321\":1,\"1323\":1,\"1325\":1,\"1332\":1,\"1340\":1,\"1342\":2,\"1344\":1,\"1346\":1,\"1348\":1,\"1413\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1427\":1,\"1429\":1,\"1436\":1,\"1444\":1,\"1446\":2,\"1448\":1,\"1450\":1,\"1452\":1,\"1517\":1,\"1525\":1,\"1527\":2,\"1529\":1,\"1531\":1,\"1533\":1,\"1540\":1,\"1548\":1,\"1550\":2,\"1552\":1,\"1554\":1,\"1556\":1,\"1563\":1,\"1573\":1,\"1575\":2,\"1577\":1,\"1579\":1,\"1581\":1,\"1588\":1,\"1598\":1,\"1600\":2,\"1602\":1,\"1604\":1,\"1606\":1,\"1671\":1,\"1679\":1,\"1681\":2,\"1683\":1,\"1685\":1,\"1687\":1,\"1694\":1,\"1702\":1,\"1704\":2,\"1706\":1,\"1708\":1,\"1710\":1,\"1717\":1,\"1727\":1,\"1729\":2,\"1731\":1,\"1733\":1,\"1735\":1,\"1742\":1,\"1752\":1,\"1754\":2,\"1756\":1,\"1758\":1,\"1760\":1,\"1769\":1,\"1779\":1,\"1781\":2,\"1783\":1,\"1785\":1,\"1787\":1,\"1796\":1,\"1806\":1,\"1808\":2,\"1810\":1,\"1812\":1,\"1814\":1,\"1821\":1,\"1831\":1,\"1833\":2,\"1835\":1,\"1837\":1,\"1839\":1,\"1846\":1,\"1856\":1,\"1858\":2,\"1860\":1,\"1862\":1,\"1864\":1,\"1871\":1,\"1881\":1,\"1883\":2,\"1885\":1,\"1887\":1,\"1889\":1,\"1896\":1,\"1906\":1,\"1908\":2,\"1910\":1,\"1912\":1,\"1914\":1,\"1921\":1,\"1931\":1,\"1933\":2,\"1935\":1,\"1937\":1,\"1939\":1,\"1946\":1,\"1956\":1,\"1958\":2,\"1960\":1,\"1962\":1,\"1964\":1,\"2231\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2386\":22,\"2391\":44,\"2396\":44,\"2401\":66,\"2406\":44}}],[\"y2\",{\"1\":{\"208\":1,\"1257\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1286\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1361\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1390\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1465\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1494\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1646\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"2272\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":8,\"2391\":16,\"2396\":16,\"2401\":24,\"2406\":16}}],[\"y1\",{\"1\":{\"208\":1,\"1251\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1280\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1355\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1384\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1459\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1488\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1640\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"2266\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":8,\"2391\":16,\"2396\":16,\"2401\":24,\"2406\":16}}],[\"yyyy\",{\"1\":{\"93\":1,\"240\":1,\"498\":3,\"602\":1}}],[\"欢迎语\",{\"1\":{\"208\":1}}],[\"共享玩家\",{\"1\":{\"208\":1}}],[\"每页内容在间隔后切换\",{\"1\":{\"632\":1}}],[\"每秒发送的字节数\",{\"1\":{\"205\":1}}],[\"每秒收到的字节数\",{\"1\":{\"202\":1}}],[\"每篇文档下方都有基于giscus的讨论系统\",{\"1\":{\"76\":1}}],[\"城市\",{\"1\":{\"191\":1}}],[\"省份\",{\"1\":{\"189\":1}}],[\"国家\",{\"1\":{\"187\":1}}],[\"获取指定玩家的tpa缓存\",{\"0\":{\"2344\":1},\"1\":{\"2351\":1,\"2353\":1,\"2355\":1,\"2357\":1,\"2359\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取指定玩家的统计数据\",{\"0\":{\"2307\":1},\"1\":{\"2314\":1,\"2316\":1,\"2318\":1,\"2320\":1,\"2322\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取指定坐标\",{\"0\":{\"1408\":1,\"1431\":1,\"1512\":1,\"1535\":1,\"1712\":1,\"1737\":1},\"1\":{\"1421\":1,\"1423\":1,\"1425\":1,\"1427\":1,\"1429\":1,\"1444\":1,\"1446\":1,\"1448\":1,\"1450\":1,\"1452\":1,\"1525\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1533\":1,\"1548\":1,\"1550\":1,\"1552\":1,\"1554\":1,\"1556\":1,\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"2386\":6,\"2389\":6,\"2391\":6,\"2394\":6,\"2396\":6,\"2399\":6,\"2401\":6,\"2404\":6,\"2406\":6}}],[\"获取全部缓存数据\",{\"1\":{\"2376\":1}}],[\"获取全部ip归属地缓存\",{\"0\":{\"2120\":1},\"1\":{\"2124\":1,\"2126\":1,\"2128\":1,\"2130\":1,\"2132\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取全局配置文件\",{\"0\":{\"1201\":1},\"1\":{\"1205\":1,\"1207\":1,\"1209\":1,\"1211\":1,\"1213\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取立方体区域\",{\"0\":{\"1350\":1,\"1379\":1,\"1454\":1,\"1483\":1},\"1\":{\"1369\":1,\"1371\":1,\"1373\":1,\"1375\":1,\"1377\":1,\"1398\":1,\"1400\":1,\"1402\":1,\"1404\":1,\"1406\":1,\"1473\":1,\"1475\":1,\"1477\":1,\"1479\":1,\"1481\":1,\"1502\":1,\"1504\":1,\"1506\":1,\"1508\":1,\"1510\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":4,\"2404\":4,\"2406\":4}}],[\"获取变量\",{\"0\":{\"1006\":1,\"1027\":1,\"1046\":1},\"1\":{\"1017\":1,\"1019\":1,\"1021\":1,\"1023\":1,\"1025\":1,\"1036\":1,\"1038\":1,\"1040\":1,\"1042\":1,\"1044\":1,\"1055\":1,\"1057\":1,\"1059\":1,\"1061\":1,\"1063\":1,\"2386\":3,\"2389\":3,\"2391\":3,\"2394\":3,\"2396\":3,\"2399\":3,\"2401\":3,\"2404\":3,\"2406\":3}}],[\"获取玩家\",{\"0\":{\"2164\":1},\"1\":{\"2171\":1,\"2173\":1,\"2175\":1,\"2177\":1,\"2179\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取玩家聊天消息前缀\",{\"0\":{\"864\":1},\"1\":{\"871\":1,\"873\":1,\"875\":1,\"877\":1,\"879\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取玩家聊天消息后缀\",{\"0\":{\"847\":1},\"1\":{\"854\":1,\"856\":1,\"858\":1,\"860\":1,\"862\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取玩家聊天时的名字\",{\"0\":{\"830\":1},\"1\":{\"837\":1,\"839\":1,\"841\":1,\"843\":1,\"845\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取玩家昵称\",{\"0\":{\"813\":1},\"1\":{\"820\":1,\"822\":1,\"824\":1,\"826\":1,\"828\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"获取\",{\"0\":{\"526\":1},\"1\":{\"481\":1,\"2380\":1}}],[\"获取到玩家名\",{\"1\":{\"324\":1}}],[\"获取的\",{\"1\":{\"185\":1}}],[\"获得更好体验\",{\"1\":{\"29\":1}}],[\"if\",{\"1\":{\"2371\":4,\"2373\":4}}],[\"id2\",{\"0\":{\"1966\":1},\"1\":{\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"id1\",{\"0\":{\"1966\":1},\"1\":{\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"id\",{\"1\":{\"694\":1,\"991\":1,\"995\":1,\"997\":2,\"999\":1,\"1001\":1,\"1003\":1,\"1087\":1,\"1093\":1,\"1095\":2,\"1097\":1,\"1099\":1,\"1101\":1,\"1106\":1,\"1110\":1,\"1112\":2,\"1114\":1,\"1116\":1,\"1118\":1,\"1123\":1,\"1131\":1,\"1133\":2,\"1135\":1,\"1137\":1,\"1139\":1,\"1144\":1,\"1154\":1,\"1156\":2,\"1158\":1,\"1160\":1,\"1162\":1,\"1167\":1,\"1173\":1,\"1175\":2,\"1177\":1,\"1179\":1,\"1181\":1,\"2386\":6,\"2391\":12,\"2396\":12,\"2401\":18,\"2406\":12}}],[\"identity\",{\"1\":{\"324\":1}}],[\"imports\",{\"1\":{\"2388\":1,\"2393\":1,\"2398\":1,\"2403\":1,\"2404\":1,\"2406\":1}}],[\"importas\",{\"1\":{\"752\":1,\"771\":1,\"790\":1,\"809\":1,\"826\":1,\"843\":1,\"860\":1,\"877\":1,\"897\":1,\"916\":1,\"937\":1,\"956\":1,\"982\":1,\"1001\":1,\"1023\":1,\"1042\":1,\"1061\":1,\"1080\":1,\"1099\":1,\"1116\":1,\"1137\":1,\"1160\":1,\"1179\":1,\"1197\":1,\"1211\":1,\"1225\":1,\"1271\":1,\"1300\":1,\"1323\":1,\"1346\":1,\"1375\":1,\"1404\":1,\"1427\":1,\"1450\":1,\"1479\":1,\"1508\":1,\"1531\":1,\"1554\":1,\"1579\":1,\"1604\":1,\"1631\":1,\"1662\":1,\"1685\":1,\"1708\":1,\"1733\":1,\"1758\":1,\"1785\":1,\"1812\":1,\"1837\":1,\"1862\":1,\"1887\":1,\"1912\":1,\"1937\":1,\"1962\":1,\"1979\":1,\"1998\":1,\"2017\":1,\"2038\":1,\"2059\":1,\"2076\":1,\"2093\":1,\"2115\":1,\"2130\":1,\"2159\":1,\"2177\":1,\"2198\":1,\"2219\":1,\"2255\":1,\"2296\":1,\"2320\":1,\"2339\":1,\"2357\":1,\"2404\":72,\"2406\":72}}],[\"importas<long\",{\"1\":{\"2173\":1,\"2386\":1}}],[\"importas<action>\",{\"1\":{\"1223\":1,\"1227\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1}}],[\"importas<action<string\",{\"1\":{\"750\":1,\"754\":1,\"769\":1,\"773\":1,\"788\":1,\"792\":1,\"807\":1,\"811\":1,\"895\":1,\"899\":1,\"935\":1,\"939\":1,\"954\":1,\"958\":1,\"999\":1,\"1003\":1,\"2157\":1,\"2161\":1,\"2196\":1,\"2200\":1,\"2217\":1,\"2221\":1,\"2253\":1,\"2257\":1,\"2294\":1,\"2298\":1,\"2337\":1,\"2341\":1,\"2389\":14,\"2391\":14,\"2394\":14,\"2396\":14}}],[\"importas<func<int\",{\"1\":{\"1298\":1,\"1302\":1,\"1344\":1,\"1348\":1,\"1402\":1,\"1406\":1,\"1448\":1,\"1452\":1,\"1506\":1,\"1510\":1,\"1552\":1,\"1556\":1,\"1602\":1,\"1606\":1,\"1629\":1,\"1633\":1,\"1660\":1,\"1664\":1,\"1706\":1,\"1710\":1,\"1756\":1,\"1760\":1,\"1860\":1,\"1864\":1,\"1910\":1,\"1914\":1,\"1935\":1,\"1939\":1,\"1960\":1,\"1964\":1,\"2389\":15,\"2391\":15,\"2394\":15,\"2396\":15}}],[\"importas<func<float\",{\"1\":{\"1269\":1,\"1273\":1,\"1321\":1,\"1325\":1,\"1373\":1,\"1377\":1,\"1425\":1,\"1429\":1,\"1477\":1,\"1481\":1,\"1529\":1,\"1533\":1,\"1577\":1,\"1581\":1,\"1683\":1,\"1687\":1,\"1731\":1,\"1735\":1,\"1835\":1,\"1839\":1,\"1885\":1,\"1889\":1,\"2389\":11,\"2391\":11,\"2394\":11,\"2396\":11}}],[\"importas<func<string>>\",{\"1\":{\"1209\":1,\"1213\":1,\"2128\":1,\"2132\":1,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2}}],[\"importas<func<string\",{\"1\":{\"824\":1,\"828\":1,\"841\":1,\"845\":1,\"858\":1,\"862\":1,\"875\":1,\"879\":1,\"914\":1,\"918\":1,\"980\":1,\"984\":1,\"1021\":1,\"1025\":1,\"1040\":1,\"1044\":1,\"1059\":1,\"1063\":1,\"1078\":1,\"1082\":1,\"1097\":1,\"1101\":1,\"1114\":1,\"1118\":1,\"1135\":1,\"1139\":1,\"1158\":1,\"1162\":1,\"1177\":1,\"1181\":1,\"1195\":1,\"1199\":1,\"1783\":1,\"1787\":1,\"1810\":1,\"1814\":1,\"1977\":1,\"1981\":1,\"1996\":1,\"2000\":1,\"2015\":1,\"2019\":1,\"2036\":1,\"2040\":1,\"2057\":1,\"2061\":1,\"2074\":1,\"2078\":1,\"2091\":1,\"2095\":1,\"2113\":1,\"2117\":1,\"2175\":1,\"2179\":1,\"2318\":1,\"2322\":1,\"2355\":1,\"2359\":1,\"2389\":29,\"2391\":29,\"2394\":29,\"2396\":29}}],[\"importas<float\",{\"1\":{\"1057\":1,\"2386\":1}}],[\"importas<int\",{\"1\":{\"978\":1,\"1038\":1,\"2386\":2}}],[\"importas<bool\",{\"1\":{\"912\":1,\"1095\":1,\"1112\":1,\"1193\":1,\"1267\":1,\"1296\":1,\"1319\":1,\"1342\":1,\"1575\":1,\"1600\":1,\"1627\":1,\"1658\":1,\"1681\":1,\"1704\":1,\"1781\":1,\"1808\":1,\"1833\":1,\"1858\":1,\"1883\":1,\"1908\":1,\"1933\":1,\"1958\":1,\"2013\":1,\"2034\":1,\"2055\":1,\"2386\":25}}],[\"importas<std\",{\"1\":{\"822\":1,\"839\":1,\"856\":1,\"873\":1,\"1019\":1,\"1076\":1,\"1133\":1,\"1156\":1,\"1175\":1,\"1207\":1,\"1371\":1,\"1400\":1,\"1423\":1,\"1446\":1,\"1475\":1,\"1504\":1,\"1527\":1,\"1550\":1,\"1729\":1,\"1754\":1,\"1975\":1,\"1994\":1,\"2072\":1,\"2089\":1,\"2111\":1,\"2126\":1,\"2316\":1,\"2353\":1,\"2386\":28}}],[\"importas<void\",{\"1\":{\"748\":1,\"767\":1,\"786\":1,\"805\":1,\"893\":1,\"933\":1,\"952\":1,\"997\":1,\"1221\":1,\"2155\":1,\"2194\":1,\"2215\":1,\"2251\":1,\"2292\":1,\"2335\":1,\"2386\":15}}],[\"import\",{\"1\":{\"746\":1,\"765\":1,\"784\":1,\"803\":1,\"820\":1,\"837\":1,\"854\":1,\"871\":1,\"891\":1,\"910\":1,\"931\":1,\"950\":1,\"976\":1,\"995\":1,\"1017\":1,\"1036\":1,\"1055\":1,\"1074\":1,\"1093\":1,\"1110\":1,\"1131\":1,\"1154\":1,\"1173\":1,\"1191\":1,\"1205\":1,\"1219\":1,\"1243\":1,\"1265\":1,\"1294\":1,\"1317\":1,\"1340\":1,\"1369\":1,\"1398\":1,\"1421\":1,\"1444\":1,\"1473\":1,\"1502\":1,\"1525\":1,\"1548\":1,\"1573\":1,\"1598\":1,\"1625\":1,\"1656\":1,\"1679\":1,\"1702\":1,\"1727\":1,\"1752\":1,\"1779\":1,\"1806\":1,\"1831\":1,\"1856\":1,\"1881\":1,\"1906\":1,\"1931\":1,\"1956\":1,\"1973\":1,\"1992\":1,\"2011\":1,\"2032\":1,\"2053\":1,\"2070\":1,\"2087\":1,\"2109\":1,\"2124\":1,\"2153\":1,\"2171\":1,\"2192\":1,\"2213\":1,\"2249\":1,\"2290\":1,\"2314\":1,\"2333\":1,\"2351\":1,\"2373\":1,\"2399\":73,\"2401\":73}}],[\"img\",{\"1\":{\"666\":1}}],[\"imageurl\",{\"1\":{\"625\":4}}],[\"itemframedrop\",{\"1\":{\"583\":1}}],[\"instance\",{\"1\":{\"2391\":144,\"2396\":144,\"2406\":144}}],[\"install\",{\"1\":{\"387\":1}}],[\"install命令\",{\"1\":{\"314\":1}}],[\"index\",{\"1\":{\"2365\":2,\"2371\":2,\"2376\":2,\"2380\":2}}],[\"info\",{\"1\":{\"2188\":1,\"2192\":1,\"2194\":2,\"2196\":1,\"2198\":1,\"2200\":1,\"2209\":1,\"2213\":1,\"2215\":2,\"2217\":1,\"2219\":1,\"2221\":1,\"2380\":2,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"int64\",{\"1\":{\"2200\":1,\"2221\":1,\"2394\":2,\"2396\":5}}],[\"int64>>\",{\"1\":{\"2179\":1,\"2394\":1,\"2396\":1}}],[\"internal\",{\"0\":{\"1228\":1,\"1229\":1},\"1\":{\"1243\":3,\"2391\":2,\"2396\":1,\"2399\":2,\"2401\":3,\"2406\":1}}],[\"integer\",{\"1\":{\"982\":1,\"1001\":1,\"1042\":1,\"1271\":1,\"1300\":7,\"1323\":1,\"1346\":4,\"1375\":1,\"1404\":7,\"1427\":1,\"1450\":4,\"1479\":1,\"1508\":7,\"1531\":1,\"1554\":4,\"1579\":1,\"1604\":4,\"1631\":5,\"1662\":7,\"1685\":1,\"1708\":4,\"1733\":1,\"1758\":4,\"1785\":1,\"1812\":4,\"1837\":1,\"1862\":4,\"1887\":1,\"1912\":4,\"1937\":4,\"1962\":4,\"2255\":3,\"2296\":6,\"2404\":101,\"2406\":301}}],[\"int>>\",{\"1\":{\"980\":1,\"984\":1,\"999\":1,\"1003\":1,\"1040\":1,\"1044\":1,\"2389\":3,\"2391\":6,\"2394\":3,\"2396\":3}}],[\"int\",{\"0\":{\"1275\":1,\"1327\":1,\"1379\":1,\"1431\":1,\"1483\":1,\"1535\":1,\"1583\":1,\"1689\":1,\"1737\":1,\"1789\":1,\"1841\":1,\"1891\":1,\"1916\":1,\"1941\":1},\"1\":{\"974\":1,\"976\":1,\"978\":1,\"980\":1,\"982\":1,\"984\":1,\"992\":1,\"997\":1,\"1034\":1,\"1036\":1,\"1038\":1,\"1040\":1,\"1042\":1,\"1044\":1,\"1234\":1,\"1236\":1,\"1240\":1,\"1262\":1,\"1267\":1,\"1269\":1,\"1273\":1,\"1279\":1,\"1281\":1,\"1283\":1,\"1285\":1,\"1287\":1,\"1289\":1,\"1291\":1,\"1294\":1,\"1296\":8,\"1298\":7,\"1300\":1,\"1302\":7,\"1314\":1,\"1319\":1,\"1321\":1,\"1325\":1,\"1331\":1,\"1333\":1,\"1335\":1,\"1337\":1,\"1340\":1,\"1342\":5,\"1344\":4,\"1346\":1,\"1348\":4,\"1366\":1,\"1371\":1,\"1373\":1,\"1377\":1,\"1383\":1,\"1385\":1,\"1387\":1,\"1389\":1,\"1391\":1,\"1393\":1,\"1395\":1,\"1398\":1,\"1400\":8,\"1402\":7,\"1404\":1,\"1406\":7,\"1418\":1,\"1423\":1,\"1425\":1,\"1429\":1,\"1435\":1,\"1437\":1,\"1439\":1,\"1441\":1,\"1444\":1,\"1446\":5,\"1448\":4,\"1450\":1,\"1452\":4,\"1470\":1,\"1475\":1,\"1477\":1,\"1481\":1,\"1487\":1,\"1489\":1,\"1491\":1,\"1493\":1,\"1495\":1,\"1497\":1,\"1499\":1,\"1502\":1,\"1504\":8,\"1506\":7,\"1508\":1,\"1510\":7,\"1522\":1,\"1527\":1,\"1529\":1,\"1533\":1,\"1539\":1,\"1541\":1,\"1543\":1,\"1545\":1,\"1548\":1,\"1550\":5,\"1552\":4,\"1554\":1,\"1556\":4,\"1568\":1,\"1575\":1,\"1577\":1,\"1581\":1,\"1587\":1,\"1589\":1,\"1591\":1,\"1593\":1,\"1598\":1,\"1600\":5,\"1602\":4,\"1604\":1,\"1606\":4,\"1612\":1,\"1614\":1,\"1616\":1,\"1618\":1,\"1620\":1,\"1627\":5,\"1629\":4,\"1633\":4,\"1639\":1,\"1641\":1,\"1643\":1,\"1645\":1,\"1647\":1,\"1649\":1,\"1651\":1,\"1658\":7,\"1660\":6,\"1664\":6,\"1676\":1,\"1681\":1,\"1683\":1,\"1687\":1,\"1693\":1,\"1695\":1,\"1697\":1,\"1699\":1,\"1702\":1,\"1704\":5,\"1706\":4,\"1708\":1,\"1710\":4,\"1722\":1,\"1729\":1,\"1731\":1,\"1735\":1,\"1741\":1,\"1743\":1,\"1745\":1,\"1747\":1,\"1752\":1,\"1754\":5,\"1756\":4,\"1758\":1,\"1760\":4,\"1774\":1,\"1781\":1,\"1783\":1,\"1787\":1,\"1795\":1,\"1797\":1,\"1799\":1,\"1801\":1,\"1806\":1,\"1808\":5,\"1810\":5,\"1812\":1,\"1814\":5,\"1826\":1,\"1833\":1,\"1835\":1,\"1839\":1,\"1845\":1,\"1847\":1,\"1849\":1,\"1851\":1,\"1856\":1,\"1858\":5,\"1860\":4,\"1862\":1,\"1864\":4,\"1876\":1,\"1883\":1,\"1885\":1,\"1889\":1,\"1895\":1,\"1897\":1,\"1899\":1,\"1901\":1,\"1906\":1,\"1908\":5,\"1910\":4,\"1912\":1,\"1914\":4,\"1920\":1,\"1922\":1,\"1924\":1,\"1926\":1,\"1931\":1,\"1933\":5,\"1935\":4,\"1937\":1,\"1939\":4,\"1945\":1,\"1947\":1,\"1949\":1,\"1951\":1,\"1956\":1,\"1958\":5,\"1960\":4,\"1962\":1,\"1964\":4,\"2230\":1,\"2232\":1,\"2234\":1,\"2251\":3,\"2253\":3,\"2257\":3,\"2265\":1,\"2267\":1,\"2269\":1,\"2271\":1,\"2273\":1,\"2275\":1,\"2292\":6,\"2294\":6,\"2298\":6,\"2386\":115,\"2389\":99,\"2391\":283,\"2394\":99,\"2396\":200,\"2399\":16,\"2401\":16,\"2404\":16,\"2406\":18}}],[\"invoke\",{\"1\":{\"754\":1,\"773\":1,\"792\":1,\"811\":1,\"828\":1,\"845\":1,\"862\":1,\"879\":1,\"899\":1,\"918\":1,\"939\":1,\"958\":1,\"984\":1,\"1003\":1,\"1025\":1,\"1044\":1,\"1063\":1,\"1082\":1,\"1101\":1,\"1118\":1,\"1139\":1,\"1162\":1,\"1181\":1,\"1199\":1,\"1273\":1,\"1302\":1,\"1325\":1,\"1348\":1,\"1377\":1,\"1406\":1,\"1429\":1,\"1452\":1,\"1481\":1,\"1510\":1,\"1533\":1,\"1556\":1,\"1581\":1,\"1606\":1,\"1633\":1,\"1664\":1,\"1687\":1,\"1710\":1,\"1735\":1,\"1760\":1,\"1787\":1,\"1814\":1,\"1839\":1,\"1864\":1,\"1889\":1,\"1914\":1,\"1939\":1,\"1964\":1,\"1981\":1,\"2000\":1,\"2019\":1,\"2040\":1,\"2061\":1,\"2078\":1,\"2095\":1,\"2117\":1,\"2161\":1,\"2179\":1,\"2200\":1,\"2221\":1,\"2257\":1,\"2298\":1,\"2322\":1,\"2341\":1,\"2359\":1,\"2396\":72}}],[\"ini放到合适目录\",{\"1\":{\"541\":1}}],[\"ini如下\",{\"1\":{\"531\":1}}],[\"ini\",{\"0\":{\"538\":1},\"1\":{\"528\":3,\"541\":1,\"542\":1}}],[\"init\",{\"1\":{\"362\":1}}],[\"includepluginconfig\",{\"1\":{\"498\":1}}],[\"includeplugindata\",{\"1\":{\"498\":1}}],[\"in\",{\"1\":{\"362\":1}}],[\"ie\",{\"1\":{\"347\":1}}],[\"icon\",{\"1\":{\"302\":1,\"625\":1}}],[\"isp\",{\"1\":{\"192\":1,\"2147\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2376\":3,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"issue\",{\"1\":{\"37\":1}}],[\"ipv6\",{\"1\":{\"524\":1}}],[\"ipv4\",{\"1\":{\"523\":1}}],[\"ip\",{\"0\":{\"588\":1},\"1\":{\"180\":1,\"181\":1,\"183\":1,\"185\":1,\"447\":1,\"481\":1,\"533\":1,\"545\":1,\"548\":1,\"554\":4,\"555\":1,\"598\":1,\"2137\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2376\":4,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"href=\",{\"1\":{\"2376\":1,\"2384\":1}}],[\"htmlfavicon\",{\"1\":{\"720\":1}}],[\"htmltitle\",{\"1\":{\"720\":1}}],[\"httpget\",{\"1\":{\"2376\":1}}],[\"http\",{\"1\":{\"720\":1,\"2376\":1}}],[\"https\",{\"1\":{\"336\":2,\"342\":1,\"359\":1,\"367\":1,\"371\":1,\"666\":1,\"2376\":1,\"2384\":1}}],[\"hidden\",{\"1\":{\"510\":1}}],[\"hunter\",{\"1\":{\"489\":1}}],[\"hungerchange\",{\"1\":{\"583\":1}}],[\"hunger\",{\"1\":{\"160\":1,\"504\":1}}],[\"hero\",{\"1\":{\"625\":1}}],[\"heightedit\",{\"0\":{\"559\":1},\"1\":{\"452\":1,\"561\":1}}],[\"helperlib\",{\"1\":{\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"helper\",{\"0\":{\"571\":1},\"1\":{\"450\":1,\"573\":1}}],[\"health\",{\"1\":{\"158\":1,\"504\":1}}],[\"hopperpullin\",{\"1\":{\"583\":1}}],[\"hostname\",{\"1\":{\"346\":1,\"347\":1,\"720\":1}}],[\"homelist\",{\"1\":{\"264\":1,\"276\":1,\"278\":1}}],[\"home\",{\"0\":{\"263\":1,\"275\":1,\"576\":1},\"1\":{\"318\":1,\"437\":1,\"578\":1}}],[\"hh\",{\"1\":{\"93\":1,\"240\":1,\"498\":3,\"507\":1}}],[\"次的\",{\"1\":{\"155\":1}}],[\"50\",{\"1\":{\"2371\":1,\"2373\":1}}],[\"512\",{\"1\":{\"453\":2,\"561\":1,\"566\":1}}],[\"5\",{\"0\":{\"404\":1,\"417\":1},\"1\":{\"155\":1,\"513\":1,\"578\":1,\"594\":2,\"699\":2}}],[\"维度\",{\"1\":{\"151\":1}}],[\"计分板\",{\"1\":{\"147\":1}}],[\"玩家加入后发送通知横幅\",{\"1\":{\"590\":1}}],[\"玩家加入后发送聊天消息\",{\"1\":{\"590\":1}}],[\"玩家拥有的领地最大数量\",{\"1\":{\"583\":1}}],[\"玩家最大home数量\",{\"1\":{\"578\":1}}],[\"玩家语言分离设置\",{\"1\":{\"463\":1}}],[\"玩家名下方信息显示\",{\"0\":{\"502\":1},\"1\":{\"449\":1}}],[\"玩家名字\",{\"1\":{\"141\":1}}],[\"玩家列表\",{\"0\":{\"672\":1},\"1\":{\"446\":1}}],[\"玩家头像缓存文件\",{\"1\":{\"333\":1}}],[\"玩家的称号\",{\"1\":{\"321\":1}}],[\"玩家发送的总字节数\",{\"1\":{\"199\":1}}],[\"玩家收到的总字节数\",{\"1\":{\"196\":1}}],[\"玩家进入服务器使用的\",{\"1\":{\"180\":1}}],[\"玩家当前领地\",{\"1\":{\"207\":1}}],[\"玩家当前\",{\"1\":{\"183\":1}}],[\"玩家当前设备名称\",{\"1\":{\"177\":1}}],[\"玩家当前设备类型翻译可在语言文件更改\",{\"1\":{\"174\":1}}],[\"玩家当前坐标\",{\"1\":{\"171\":1}}],[\"玩家当前经验\",{\"1\":{\"168\":1}}],[\"玩家当前饱食度\",{\"1\":{\"165\":1}}],[\"玩家当前等级\",{\"1\":{\"163\":1}}],[\"玩家当前饥饿值\",{\"1\":{\"161\":1}}],[\"玩家当前血量\",{\"1\":{\"159\":1}}],[\"玩家\",{\"1\":{\"144\":1,\"230\":1,\"474\":1}}],[\"玩家变量\",{\"0\":{\"134\":1}}],[\"除非同名时需要指定\",{\"1\":{\"126\":1}}],[\"除非是基于\",{\"1\":{\"55\":1}}],[\"变量\",{\"1\":{\"126\":1}}],[\"变量建议直接使用\",{\"1\":{\"126\":1}}],[\"变量与格式化选项\",{\"0\":{\"81\":1}}],[\"主世界红石速度\",{\"1\":{\"573\":1}}],[\"主要在聊天界面\",{\"0\":{\"2382\":1}}],[\"主要支持\",{\"1\":{\"457\":1}}],[\"主要用于锁箱插件\",{\"0\":{\"1916\":1,\"1941\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"主要用于\",{\"1\":{\"331\":1,\"332\":1,\"333\":1}}],[\"主要是\",{\"1\":{\"313\":1}}],[\"主机内存使用量\",{\"1\":{\"117\":1}}],[\"主页\",{\"0\":{\"0\":1},\"1\":{\"724\":1}}],[\"rawformat\",{\"1\":{\"1070\":1,\"1074\":1,\"1076\":2,\"1078\":1,\"1080\":1,\"1082\":1,\"1089\":1,\"1093\":1,\"1095\":2,\"1097\":1,\"1099\":1,\"1101\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"range\",{\"1\":{\"706\":1}}],[\"ramfree\",{\"1\":{\"122\":1}}],[\"ramtotal\",{\"1\":{\"119\":1}}],[\"ramused\",{\"1\":{\"116\":1}}],[\"rambdsused\",{\"1\":{\"113\":1}}],[\"ram\",{\"1\":{\"112\":1,\"113\":1,\"115\":1,\"116\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1}}],[\"runcommand任务执行的命令\",{\"1\":{\"688\":1}}],[\"runcommand\",{\"1\":{\"685\":1}}],[\"runcmdasop\",{\"1\":{\"625\":1}}],[\"runcmdas\",{\"1\":{\"625\":4}}],[\"runcmd\",{\"1\":{\"625\":1}}],[\"runtime\",{\"0\":{\"373\":1},\"1\":{\"363\":1}}],[\"r◄\",{\"1\":{\"625\":4}}],[\"r\",{\"1\":{\"504\":2,\"507\":8,\"513\":3,\"2235\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2276\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2371\":4,\"2373\":4,\"2386\":2,\"2391\":4,\"2394\":1,\"2396\":5,\"2401\":6,\"2406\":4}}],[\"regionname\",{\"1\":{\"2376\":1}}],[\"regstercommanddescription\",{\"1\":{\"625\":1}}],[\"regstercommand\",{\"1\":{\"625\":1}}],[\"returns\",{\"1\":{\"2401\":58}}],[\"return\",{\"1\":{\"2371\":5,\"2373\":5,\"2376\":1,\"2384\":1,\"2391\":57,\"2401\":58,\"2406\":57}}],[\"removeformat\",{\"0\":{\"1102\":1},\"1\":{\"1110\":3,\"1112\":3,\"1114\":3,\"1116\":3,\"1118\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"remove\",{\"0\":{\"985\":1,\"2201\":1},\"1\":{\"995\":3,\"997\":3,\"999\":3,\"1001\":3,\"1003\":3,\"2213\":3,\"2215\":3,\"2217\":3,\"2219\":3,\"2221\":3,\"2386\":4,\"2389\":4,\"2391\":8,\"2394\":4,\"2396\":8,\"2399\":4,\"2401\":6,\"2404\":4,\"2406\":8}}],[\"remote\",{\"1\":{\"533\":1}}],[\"remotecallapi\",{\"1\":{\"750\":1,\"752\":1,\"754\":1,\"769\":1,\"771\":1,\"773\":1,\"788\":1,\"790\":1,\"792\":1,\"807\":1,\"809\":1,\"811\":1,\"824\":1,\"826\":1,\"828\":1,\"841\":1,\"843\":1,\"845\":1,\"858\":1,\"860\":1,\"862\":1,\"875\":1,\"877\":1,\"879\":1,\"895\":1,\"897\":1,\"899\":1,\"914\":1,\"916\":1,\"918\":1,\"935\":1,\"937\":1,\"939\":1,\"954\":1,\"956\":1,\"958\":1,\"980\":1,\"982\":1,\"984\":1,\"999\":1,\"1001\":1,\"1003\":1,\"1021\":1,\"1023\":1,\"1025\":1,\"1040\":1,\"1042\":1,\"1044\":1,\"1059\":1,\"1061\":1,\"1063\":1,\"1078\":1,\"1080\":1,\"1082\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"1114\":1,\"1116\":1,\"1118\":1,\"1135\":1,\"1137\":1,\"1139\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"1177\":1,\"1179\":1,\"1181\":1,\"1195\":1,\"1197\":1,\"1199\":1,\"1209\":1,\"1211\":1,\"1213\":1,\"1223\":1,\"1225\":1,\"1227\":1,\"1269\":1,\"1271\":1,\"1273\":1,\"1298\":1,\"1300\":1,\"1302\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1344\":1,\"1346\":1,\"1348\":1,\"1373\":1,\"1375\":1,\"1377\":1,\"1402\":1,\"1404\":1,\"1406\":1,\"1425\":1,\"1427\":1,\"1429\":1,\"1448\":1,\"1450\":1,\"1452\":1,\"1477\":1,\"1479\":1,\"1481\":1,\"1506\":1,\"1508\":1,\"1510\":1,\"1529\":1,\"1531\":1,\"1533\":1,\"1552\":1,\"1554\":1,\"1556\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"1629\":1,\"1631\":1,\"1633\":1,\"1660\":1,\"1662\":1,\"1664\":1,\"1683\":1,\"1685\":1,\"1687\":1,\"1706\":1,\"1708\":1,\"1710\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"1996\":1,\"1998\":1,\"2000\":1,\"2015\":1,\"2017\":1,\"2019\":1,\"2036\":1,\"2038\":1,\"2040\":1,\"2057\":1,\"2059\":1,\"2061\":1,\"2074\":1,\"2076\":1,\"2078\":1,\"2091\":1,\"2093\":1,\"2095\":1,\"2113\":1,\"2115\":1,\"2117\":1,\"2128\":1,\"2130\":1,\"2132\":1,\"2157\":1,\"2159\":1,\"2161\":1,\"2175\":1,\"2177\":1,\"2179\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2217\":1,\"2219\":1,\"2221\":1,\"2253\":1,\"2255\":1,\"2257\":1,\"2294\":1,\"2296\":1,\"2298\":1,\"2318\":1,\"2320\":1,\"2322\":1,\"2337\":1,\"2339\":1,\"2341\":1,\"2355\":1,\"2357\":1,\"2359\":1,\"2389\":74,\"2391\":74,\"2394\":72,\"2396\":72,\"2404\":74,\"2406\":74}}],[\"remotecall\",{\"0\":{\"2299\":1},\"1\":{\"11\":1,\"748\":1,\"767\":1,\"786\":1,\"805\":1,\"822\":1,\"839\":1,\"856\":1,\"873\":1,\"893\":1,\"912\":1,\"933\":1,\"952\":1,\"978\":1,\"997\":1,\"1019\":1,\"1038\":1,\"1057\":1,\"1076\":1,\"1095\":1,\"1112\":1,\"1133\":1,\"1156\":1,\"1175\":1,\"1193\":1,\"1207\":1,\"1221\":1,\"1267\":1,\"1296\":1,\"1319\":1,\"1342\":1,\"1371\":1,\"1400\":1,\"1423\":1,\"1446\":1,\"1475\":1,\"1504\":1,\"1527\":1,\"1550\":1,\"1575\":1,\"1600\":1,\"1627\":1,\"1658\":1,\"1681\":1,\"1704\":1,\"1729\":1,\"1754\":1,\"1781\":1,\"1808\":1,\"1833\":1,\"1858\":1,\"1883\":1,\"1908\":1,\"1933\":1,\"1958\":1,\"1975\":1,\"1994\":1,\"2013\":1,\"2034\":1,\"2055\":1,\"2072\":1,\"2089\":1,\"2111\":1,\"2126\":1,\"2155\":1,\"2173\":1,\"2194\":1,\"2215\":1,\"2251\":1,\"2292\":1,\"2303\":1,\"2316\":1,\"2335\":1,\"2353\":1,\"2386\":72,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2404\":1,\"2406\":1}}],[\"requireop\",{\"1\":{\"625\":5}}],[\"request\",{\"1\":{\"258\":1}}],[\"recycleprice3d\",{\"1\":{\"583\":1}}],[\"recycleprice2d\",{\"1\":{\"583\":1}}],[\"receive\",{\"1\":{\"129\":1,\"195\":1,\"201\":1}}],[\"received\",{\"1\":{\"128\":1,\"194\":1,\"200\":1,\"504\":1}}],[\"repo\",{\"1\":{\"551\":1,\"552\":1}}],[\"renamecommand\",{\"0\":{\"881\":1},\"1\":{\"891\":3,\"893\":3,\"895\":3,\"897\":3,\"899\":3,\"2365\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"rename\",{\"1\":{\"510\":1}}],[\"refreshintervalinminutes\",{\"1\":{\"602\":1}}],[\"refreshinterval\",{\"1\":{\"504\":1,\"632\":1}}],[\"reload\",{\"0\":{\"1214\":1},\"1\":{\"1219\":3,\"1221\":3,\"1223\":3,\"1225\":3,\"1227\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"reload命令的限制\",{\"1\":{\"656\":1}}],[\"reload命令重载\",{\"1\":{\"656\":1}}],[\"reload命令重载插件功能\",{\"1\":{\"336\":1}}],[\"reload重载\",{\"1\":{\"543\":1}}],[\"reload重载插件\",{\"1\":{\"403\":1}}],[\"release\",{\"1\":{\"367\":1}}],[\"releases\",{\"1\":{\"367\":1}}],[\"result\",{\"1\":{\"666\":1,\"820\":1,\"822\":1,\"824\":1,\"826\":1,\"837\":1,\"839\":1,\"841\":1,\"843\":1,\"854\":1,\"856\":1,\"858\":1,\"860\":1,\"871\":1,\"873\":1,\"875\":1,\"877\":1,\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"976\":1,\"978\":1,\"980\":1,\"982\":1,\"1017\":1,\"1019\":1,\"1021\":1,\"1023\":1,\"1036\":1,\"1038\":1,\"1040\":1,\"1042\":1,\"1055\":1,\"1057\":1,\"1059\":1,\"1061\":1,\"1074\":1,\"1076\":1,\"1078\":1,\"1080\":1,\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1110\":1,\"1112\":1,\"1114\":1,\"1116\":1,\"1131\":1,\"1133\":1,\"1135\":1,\"1137\":1,\"1154\":1,\"1156\":1,\"1158\":1,\"1160\":1,\"1173\":1,\"1175\":1,\"1177\":1,\"1179\":1,\"1191\":1,\"1193\":1,\"1195\":1,\"1197\":1,\"1205\":1,\"1207\":1,\"1209\":1,\"1211\":1,\"1243\":1,\"1265\":1,\"1267\":1,\"1269\":1,\"1271\":1,\"1294\":1,\"1296\":1,\"1298\":1,\"1300\":1,\"1317\":1,\"1319\":1,\"1321\":1,\"1323\":1,\"1340\":1,\"1342\":1,\"1344\":1,\"1346\":1,\"1369\":1,\"1371\":1,\"1373\":1,\"1375\":1,\"1398\":1,\"1400\":1,\"1402\":1,\"1404\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1427\":1,\"1444\":1,\"1446\":1,\"1448\":1,\"1450\":1,\"1473\":1,\"1475\":1,\"1477\":1,\"1479\":1,\"1502\":1,\"1504\":1,\"1506\":1,\"1508\":1,\"1525\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1548\":1,\"1550\":1,\"1552\":1,\"1554\":1,\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1625\":1,\"1627\":1,\"1629\":1,\"1631\":1,\"1656\":1,\"1658\":1,\"1660\":1,\"1662\":1,\"1679\":1,\"1681\":1,\"1683\":1,\"1685\":1,\"1702\":1,\"1704\":1,\"1706\":1,\"1708\":1,\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1831\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1856\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1992\":1,\"1994\":1,\"1996\":1,\"1998\":1,\"2011\":1,\"2013\":1,\"2015\":1,\"2017\":1,\"2032\":1,\"2034\":1,\"2036\":1,\"2038\":1,\"2053\":1,\"2055\":1,\"2057\":1,\"2059\":1,\"2070\":1,\"2072\":1,\"2074\":1,\"2076\":1,\"2087\":1,\"2089\":1,\"2091\":1,\"2093\":1,\"2109\":1,\"2111\":1,\"2113\":1,\"2115\":1,\"2124\":1,\"2126\":1,\"2128\":1,\"2130\":1,\"2171\":1,\"2173\":1,\"2175\":1,\"2177\":1,\"2314\":1,\"2316\":1,\"2318\":1,\"2320\":1,\"2351\":1,\"2353\":1,\"2355\":1,\"2357\":1,\"2365\":1,\"2376\":3}}],[\"resource\",{\"1\":{\"299\":1,\"645\":1}}],[\"respawn\",{\"1\":{\"224\":1,\"694\":1}}],[\"void\",{\"1\":{\"2391\":15}}],[\"voyage27\",{\"0\":{\"556\":1},\"1\":{\"437\":1,\"460\":1,\"490\":1}}],[\"visual\",{\"1\":{\"751\":1,\"770\":1,\"789\":1,\"808\":1,\"825\":1,\"842\":1,\"859\":1,\"876\":1,\"896\":1,\"915\":1,\"936\":1,\"955\":1,\"981\":1,\"1000\":1,\"1022\":1,\"1041\":1,\"1060\":1,\"1079\":1,\"1098\":1,\"1115\":1,\"1136\":1,\"1159\":1,\"1178\":1,\"1196\":1,\"1210\":1,\"1224\":1,\"1270\":1,\"1299\":1,\"1322\":1,\"1345\":1,\"1374\":1,\"1403\":1,\"1426\":1,\"1449\":1,\"1478\":1,\"1507\":1,\"1530\":1,\"1553\":1,\"1578\":1,\"1603\":1,\"1630\":1,\"1661\":1,\"1684\":1,\"1707\":1,\"1732\":1,\"1757\":1,\"1784\":1,\"1811\":1,\"1836\":1,\"1861\":1,\"1886\":1,\"1911\":1,\"1936\":1,\"1961\":1,\"1978\":1,\"1997\":1,\"2016\":1,\"2037\":1,\"2058\":1,\"2075\":1,\"2092\":1,\"2114\":1,\"2129\":1,\"2158\":1,\"2176\":1,\"2197\":1,\"2218\":1,\"2254\":1,\"2295\":1,\"2319\":1,\"2338\":1,\"2356\":1}}],[\"village\",{\"1\":{\"625\":1}}],[\"val\",{\"1\":{\"2371\":9,\"2373\":9}}],[\"values\",{\"1\":{\"625\":3}}],[\"value\",{\"1\":{\"625\":1,\"2391\":72,\"2396\":72,\"2406\":72}}],[\"var\",{\"1\":{\"750\":1,\"769\":1,\"788\":1,\"807\":1,\"824\":2,\"841\":2,\"858\":2,\"875\":2,\"895\":1,\"914\":2,\"935\":1,\"954\":1,\"980\":2,\"999\":1,\"1021\":2,\"1040\":2,\"1059\":2,\"1078\":2,\"1097\":2,\"1114\":2,\"1135\":2,\"1158\":2,\"1177\":2,\"1195\":2,\"1209\":2,\"1223\":1,\"1269\":2,\"1298\":2,\"1321\":2,\"1344\":2,\"1373\":2,\"1402\":2,\"1425\":2,\"1448\":2,\"1477\":2,\"1506\":2,\"1529\":2,\"1552\":2,\"1577\":2,\"1602\":2,\"1629\":2,\"1660\":2,\"1683\":2,\"1706\":2,\"1731\":2,\"1756\":2,\"1783\":2,\"1810\":2,\"1835\":2,\"1860\":2,\"1885\":2,\"1910\":2,\"1935\":2,\"1960\":2,\"1977\":2,\"1996\":2,\"2015\":2,\"2036\":2,\"2057\":2,\"2074\":2,\"2091\":2,\"2113\":2,\"2128\":2,\"2157\":1,\"2175\":2,\"2196\":1,\"2217\":1,\"2253\":1,\"2294\":1,\"2318\":2,\"2337\":1,\"2355\":2,\"2380\":1,\"2389\":72}}],[\"v7\",{\"0\":{\"373\":1}}],[\"version\",{\"1\":{\"103\":1,\"104\":1,\"107\":2}}],[\"vb\",{\"0\":{\"2402\":1},\"1\":{\"26\":2,\"2403\":1,\"2405\":1}}],[\"object\",{\"1\":{\"2400\":1}}],[\"output\",{\"1\":{\"2365\":2}}],[\"origin\",{\"1\":{\"2365\":3}}],[\"of\",{\"1\":{\"752\":2,\"771\":2,\"790\":2,\"809\":2,\"826\":2,\"843\":2,\"860\":2,\"877\":2,\"897\":2,\"916\":2,\"937\":2,\"956\":2,\"982\":2,\"1001\":2,\"1023\":2,\"1042\":2,\"1061\":2,\"1080\":2,\"1099\":2,\"1116\":2,\"1137\":2,\"1160\":2,\"1179\":2,\"1197\":2,\"1211\":2,\"1225\":1,\"1271\":2,\"1300\":2,\"1323\":2,\"1346\":2,\"1375\":2,\"1404\":2,\"1427\":2,\"1450\":2,\"1479\":2,\"1508\":2,\"1531\":2,\"1554\":2,\"1579\":2,\"1604\":2,\"1631\":2,\"1662\":2,\"1685\":2,\"1708\":2,\"1733\":2,\"1758\":2,\"1785\":2,\"1812\":2,\"1837\":2,\"1862\":2,\"1887\":2,\"1912\":2,\"1937\":2,\"1962\":2,\"1979\":2,\"1998\":2,\"2017\":2,\"2038\":2,\"2059\":2,\"2076\":2,\"2093\":2,\"2115\":2,\"2130\":2,\"2159\":2,\"2177\":2,\"2198\":2,\"2219\":2,\"2255\":2,\"2296\":2,\"2320\":2,\"2339\":2,\"2357\":2,\"2404\":143,\"2406\":286}}],[\"op命令\",{\"1\":{\"714\":1}}],[\"op\",{\"1\":{\"639\":1,\"713\":1,\"717\":2}}],[\"open\",{\"1\":{\"2394\":1,\"2396\":1}}],[\"openform\",{\"1\":{\"625\":2}}],[\"openinventory\",{\"1\":{\"583\":1}}],[\"opbufftimeseconds\",{\"1\":{\"583\":1}}],[\"opbuff后即可暂时无视领地权限\",{\"1\":{\"583\":1}}],[\"op临时buff时间\",{\"1\":{\"583\":1}}],[\"overload\",{\"1\":{\"2365\":1}}],[\"overridellgetip\",{\"1\":{\"528\":1,\"549\":1}}],[\"overworldredstonetps\",{\"1\":{\"573\":1}}],[\"overworld\",{\"1\":{\"73\":1}}],[\"oldserver\",{\"1\":{\"513\":1}}],[\"oldclient\",{\"1\":{\"513\":1}}],[\"onserverstarted\",{\"1\":{\"2365\":1,\"2371\":1,\"2376\":2,\"2380\":1,\"2384\":1}}],[\"onmobhurt\",{\"1\":{\"583\":1}}],[\"onhitlightning\",{\"1\":{\"583\":1}}],[\"onactorhurt\",{\"1\":{\"583\":1,\"678\":1}}],[\"onpostinit\",{\"1\":{\"362\":1}}],[\"onlinechat\",{\"1\":{\"720\":1}}],[\"onlinemap\",{\"1\":{\"619\":1,\"720\":1,\"722\":1}}],[\"onlinetime\",{\"1\":{\"216\":1,\"2380\":1}}],[\"online\",{\"1\":{\"101\":1,\"215\":1,\"694\":1}}],[\"owner\",{\"1\":{\"208\":1}}],[\"os\",{\"1\":{\"172\":1,\"504\":1,\"507\":1}}],[\"服务端会将连接的\",{\"1\":{\"554\":1}}],[\"服务端使用多语言\",{\"0\":{\"252\":1}}],[\"服务端目录\",{\"1\":{\"68\":1,\"247\":1,\"282\":1}}],[\"服务器启动\",{\"1\":{\"2376\":1}}],[\"服务器后\",{\"1\":{\"554\":1}}],[\"服务器地址为frp\",{\"1\":{\"531\":1}}],[\"服务器开启了白名单\",{\"1\":{\"513\":1}}],[\"服务器发送的总字节数\",{\"1\":{\"133\":1}}],[\"服务器收到的总字节数\",{\"1\":{\"130\":1}}],[\"服务器空闲内存\",{\"1\":{\"123\":1}}],[\"服务器总内存\",{\"1\":{\"120\":1}}],[\"服务器试题数量\",{\"1\":{\"111\":1}}],[\"服务器协议版本\",{\"1\":{\"108\":1}}],[\"服务器版本\",{\"1\":{\"105\":1}}],[\"服务器\",{\"1\":{\"96\":1,\"99\":1,\"632\":1}}],[\"当前时间\",{\"1\":{\"92\":1}}],[\"number\",{\"1\":{\"2401\":168}}],[\"null\",{\"1\":{\"2380\":1}}],[\"newcommand\",{\"1\":{\"2365\":1}}],[\"newcmd\",{\"1\":{\"887\":1,\"891\":1,\"893\":2,\"895\":1,\"897\":1,\"899\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"newcmd为空字符串则表示隐藏该cmd命令\",{\"0\":{\"882\":1},\"1\":{\"891\":1,\"893\":1,\"895\":1,\"897\":1,\"899\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"newdata\",{\"1\":{\"2329\":1,\"2333\":1,\"2335\":2,\"2337\":1,\"2339\":1,\"2341\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"new\",{\"1\":{\"666\":3,\"2376\":1,\"2391\":72}}],[\"network\",{\"1\":{\"2376\":1}}],[\"networkidentifier\",{\"1\":{\"547\":1}}],[\"net运行时\",{\"1\":{\"371\":1}}],[\"net和pflp\",{\"0\":{\"368\":1}}],[\"net>\",{\"1\":{\"362\":2}}],[\"net的字符串格式化\",{\"1\":{\"238\":1}}],[\"netherredstonetps\",{\"1\":{\"573\":1}}],[\"nether\",{\"1\":{\"73\":1}}],[\"net\",{\"0\":{\"361\":1,\"369\":1,\"370\":1,\"373\":1,\"389\":1},\"1\":{\"26\":2,\"55\":1,\"56\":2,\"353\":1,\"359\":1,\"363\":2,\"372\":1,\"388\":1,\"392\":1,\"751\":1,\"770\":1,\"789\":1,\"808\":1,\"825\":1,\"842\":1,\"859\":1,\"876\":1,\"896\":1,\"915\":1,\"936\":1,\"955\":1,\"981\":1,\"1000\":1,\"1022\":1,\"1041\":1,\"1060\":1,\"1079\":1,\"1098\":1,\"1115\":1,\"1136\":1,\"1159\":1,\"1178\":1,\"1196\":1,\"1210\":1,\"1224\":1,\"1270\":1,\"1299\":1,\"1322\":1,\"1345\":1,\"1374\":1,\"1403\":1,\"1426\":1,\"1449\":1,\"1478\":1,\"1507\":1,\"1530\":1,\"1553\":1,\"1578\":1,\"1603\":1,\"1630\":1,\"1661\":1,\"1684\":1,\"1707\":1,\"1732\":1,\"1757\":1,\"1784\":1,\"1811\":1,\"1836\":1,\"1861\":1,\"1886\":1,\"1911\":1,\"1936\":1,\"1961\":1,\"1978\":1,\"1997\":1,\"2016\":1,\"2037\":1,\"2058\":1,\"2075\":1,\"2092\":1,\"2114\":1,\"2129\":1,\"2158\":1,\"2176\":1,\"2197\":1,\"2218\":1,\"2254\":1,\"2295\":1,\"2319\":1,\"2338\":1,\"2356\":1,\"2394\":1,\"2396\":1}}],[\"net7\",{\"1\":{\"26\":1}}],[\"n\",{\"1\":{\"513\":8}}],[\"nickname\",{\"1\":{\"507\":1,\"742\":1,\"746\":1,\"748\":2,\"750\":1,\"752\":1,\"754\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"npm\",{\"1\":{\"314\":2}}],[\"notinheritable\",{\"1\":{\"2406\":13}}],[\"notinwhitelist\",{\"1\":{\"513\":1}}],[\"notice\",{\"0\":{\"633\":1},\"1\":{\"288\":1,\"467\":1,\"635\":1,\"637\":1,\"639\":1}}],[\"notauthenticated\",{\"1\":{\"513\":1}}],[\"node\",{\"1\":{\"308\":1,\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"now\",{\"1\":{\"91\":1}}],[\"name\",{\"1\":{\"140\":1,\"1011\":1,\"1017\":1,\"1019\":2,\"1021\":1,\"1023\":1,\"1025\":1,\"1032\":1,\"1036\":1,\"1038\":2,\"1040\":1,\"1042\":1,\"1044\":1,\"1051\":1,\"1055\":1,\"1057\":2,\"1059\":1,\"1061\":1,\"1063\":1,\"2365\":1,\"2376\":2,\"2384\":2,\"2386\":3,\"2391\":6,\"2396\":6,\"2401\":9,\"2406\":6}}],[\"drawborder\",{\"0\":{\"2258\":1},\"1\":{\"2290\":3,\"2292\":3,\"2294\":3,\"2296\":3,\"2298\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"drawblock\",{\"0\":{\"2223\":1},\"1\":{\"2249\":3,\"2251\":3,\"2253\":3,\"2255\":3,\"2257\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"d\",{\"1\":{\"507\":1,\"594\":2,\"2365\":2,\"2371\":2,\"2376\":2,\"2380\":2}}],[\"documents\",{\"1\":{\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"dotnet\",{\"1\":{\"371\":2,\"387\":1}}],[\"download\",{\"1\":{\"342\":1,\"359\":1,\"371\":1}}],[\"db\",{\"1\":{\"316\":1,\"332\":1,\"602\":1,\"609\":1}}],[\"database\",{\"1\":{\"602\":19}}],[\"data即可自动导入\",{\"1\":{\"274\":1}}],[\"data\",{\"1\":{\"264\":1,\"268\":1,\"271\":1,\"276\":1,\"278\":1,\"317\":1,\"598\":1,\"2376\":5}}],[\"date\",{\"1\":{\"91\":1,\"507\":1}}],[\"deleteplayerpermissiongroup\",{\"0\":{\"2001\":1},\"1\":{\"2011\":3,\"2013\":3,\"2015\":3,\"2017\":3,\"2019\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"deletelandbyposint\",{\"0\":{\"1688\":1},\"1\":{\"1702\":3,\"1704\":3,\"1706\":3,\"1708\":3,\"1710\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"deletelandbypos\",{\"0\":{\"1665\":1},\"1\":{\"1679\":3,\"1681\":3,\"1683\":3,\"1685\":3,\"1687\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"deletetargetfolderifexists\",{\"1\":{\"498\":1}}],[\"defineformat\",{\"0\":{\"1083\":1},\"1\":{\"1093\":3,\"1095\":3,\"1097\":3,\"1099\":3,\"1101\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"defaultreceivebymsg\",{\"1\":{\"699\":1}}],[\"defaultreceivebyform\",{\"1\":{\"699\":1}}],[\"defaultreceivebytoast\",{\"1\":{\"699\":1}}],[\"debug\",{\"1\":{\"720\":1}}],[\"detailedinfo\",{\"1\":{\"513\":1}}],[\"dedicated\",{\"0\":{\"356\":1,\"357\":1,\"358\":1},\"1\":{\"351\":1,\"359\":1}}],[\"developer\",{\"1\":{\"342\":1}}],[\"device\",{\"1\":{\"176\":1}}],[\"devicename\",{\"1\":{\"175\":1,\"504\":1}}],[\"devicetype\",{\"1\":{\"173\":1}}],[\"death\",{\"1\":{\"222\":1,\"322\":1,\"461\":1,\"510\":1,\"694\":1}}],[\"destroy\",{\"1\":{\"218\":1,\"694\":1}}],[\"dz\",{\"1\":{\"208\":1}}],[\"dynamicmaxcount动态定义最大玩家数量\",{\"1\":{\"520\":1}}],[\"dynamicmaxcount\",{\"1\":{\"518\":1}}],[\"dynamicmotd\",{\"0\":{\"630\":1},\"1\":{\"448\":1,\"632\":1}}],[\"dy\",{\"1\":{\"208\":1}}],[\"dx\",{\"1\":{\"208\":1}}],[\"dim\",{\"1\":{\"752\":1,\"771\":1,\"790\":1,\"809\":1,\"826\":2,\"843\":2,\"860\":2,\"877\":2,\"897\":1,\"916\":2,\"937\":1,\"956\":1,\"982\":2,\"1001\":1,\"1023\":2,\"1042\":2,\"1061\":2,\"1080\":2,\"1099\":2,\"1116\":2,\"1137\":2,\"1160\":2,\"1179\":2,\"1197\":2,\"1211\":2,\"1225\":1,\"1271\":2,\"1300\":2,\"1323\":2,\"1346\":2,\"1375\":2,\"1404\":2,\"1427\":2,\"1450\":2,\"1479\":2,\"1508\":2,\"1531\":2,\"1554\":2,\"1579\":2,\"1604\":2,\"1631\":2,\"1662\":2,\"1685\":2,\"1708\":2,\"1733\":2,\"1758\":2,\"1785\":2,\"1812\":2,\"1837\":2,\"1862\":2,\"1887\":2,\"1912\":2,\"1937\":2,\"1962\":2,\"1979\":2,\"1998\":2,\"2017\":2,\"2038\":2,\"2059\":2,\"2076\":2,\"2093\":2,\"2115\":2,\"2130\":2,\"2159\":1,\"2177\":2,\"2198\":1,\"2219\":1,\"2255\":1,\"2296\":1,\"2320\":2,\"2339\":1,\"2357\":2,\"2404\":72}}],[\"dimensionid\",{\"1\":{\"1261\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1290\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1313\":1,\"1317\":1,\"1319\":2,\"1321\":1,\"1323\":1,\"1325\":1,\"1336\":1,\"1340\":1,\"1342\":2,\"1344\":1,\"1346\":1,\"1348\":1,\"1365\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1394\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1417\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1427\":1,\"1429\":1,\"1440\":1,\"1444\":1,\"1446\":2,\"1448\":1,\"1450\":1,\"1452\":1,\"1469\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1498\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1521\":1,\"1525\":1,\"1527\":2,\"1529\":1,\"1531\":1,\"1533\":1,\"1544\":1,\"1548\":1,\"1550\":2,\"1552\":1,\"1554\":1,\"1556\":1,\"1567\":1,\"1573\":1,\"1575\":2,\"1577\":1,\"1579\":1,\"1581\":1,\"1592\":1,\"1598\":1,\"1600\":2,\"1602\":1,\"1604\":1,\"1606\":1,\"1619\":1,\"1625\":1,\"1627\":2,\"1629\":1,\"1631\":1,\"1633\":1,\"1650\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"1675\":1,\"1679\":1,\"1681\":2,\"1683\":1,\"1685\":1,\"1687\":1,\"1698\":1,\"1702\":1,\"1704\":2,\"1706\":1,\"1708\":1,\"1710\":1,\"1721\":1,\"1727\":1,\"1729\":2,\"1731\":1,\"1733\":1,\"1735\":1,\"1746\":1,\"1752\":1,\"1754\":2,\"1756\":1,\"1758\":1,\"1760\":1,\"1773\":1,\"1779\":1,\"1781\":2,\"1783\":1,\"1785\":1,\"1787\":1,\"1800\":1,\"1806\":1,\"1808\":2,\"1810\":1,\"1812\":1,\"1814\":1,\"1825\":1,\"1831\":1,\"1833\":2,\"1835\":1,\"1837\":1,\"1839\":1,\"1850\":1,\"1856\":1,\"1858\":2,\"1860\":1,\"1862\":1,\"1864\":1,\"1875\":1,\"1881\":1,\"1883\":2,\"1885\":1,\"1887\":1,\"1889\":1,\"1900\":1,\"1906\":1,\"1908\":2,\"1910\":1,\"1912\":1,\"1914\":1,\"1925\":1,\"1931\":1,\"1933\":2,\"1935\":1,\"1937\":1,\"1939\":1,\"1950\":1,\"1956\":1,\"1958\":2,\"1960\":1,\"1962\":1,\"1964\":1,\"2386\":28,\"2391\":56,\"2396\":56,\"2401\":84,\"2406\":56}}],[\"dimension\",{\"1\":{\"150\":1}}],[\"displaydistance\",{\"1\":{\"662\":1}}],[\"displayname\",{\"1\":{\"208\":1,\"628\":1}}],[\"disableselectorontell\",{\"1\":{\"507\":1}}],[\"dd\",{\"1\":{\"93\":1,\"240\":1,\"498\":3,\"602\":1}}],[\"dll\",{\"1\":{\"409\":1,\"422\":1}}],[\"dll置于插件目录\",{\"1\":{\"392\":1,\"412\":1,\"425\":1}}],[\"dll为正确版本且在\",{\"1\":{\"51\":1}}],[\"dll未正确加载或liteloader\",{\"1\":{\"49\":1}}],[\"示例文件请在群里找群友要\",{\"1\":{\"459\":1}}],[\"示例\",{\"0\":{\"2360\":1,\"2367\":1},\"1\":{\"89\":1,\"139\":1,\"214\":1,\"239\":1}}],[\"别名\",{\"1\":{\"87\":1,\"137\":1,\"212\":1}}],[\"名称\",{\"1\":{\"86\":1,\"136\":1,\"211\":1}}],[\"内置脚本\",{\"1\":{\"2372\":1}}],[\"内置变量可在诸多模块使用\",{\"1\":{\"83\":1}}],[\"内置变量\",{\"0\":{\"82\":1}}],[\"内网穿透\",{\"0\":{\"526\":1},\"1\":{\"481\":1}}],[\"内网穿透后服务器\",{\"1\":{\"478\":1}}],[\"内存使用量\",{\"1\":{\"114\":1}}],[\"内容可以改掉吗\",{\"0\":{\"38\":1}}],[\"仓库地址\",{\"1\":{\"80\":1}}],[\"完整地理位置\",{\"1\":{\"185\":1}}],[\"完善文档\",{\"1\":{\"79\":1}}],[\"完全重构了插件架构\",{\"1\":{\"26\":1}}],[\"来帮助我们提供更有趣的使用方法\",{\"1\":{\"79\":1}}],[\"在服务器启动后\",{\"1\":{\"2365\":1,\"2371\":1}}],[\"在服务器配置\",{\"0\":{\"337\":1}}],[\"在控制台执行命令\",{\"1\":{\"625\":1}}],[\"在\",{\"1\":{\"542\":1}}],[\"在桌面打开窗体\",{\"1\":{\"339\":1}}],[\"在玩家进入后会二次转换\",{\"1\":{\"265\":1}}],[\"在玩家相关的上下文中使用\",{\"1\":{\"135\":1}}],[\"在其他插件使用\",{\"0\":{\"234\":1}}],[\"在线聊天\",{\"1\":{\"727\":1}}],[\"在线聊天保留历史记录\",{\"1\":{\"720\":1}}],[\"在线聊天功能\",{\"1\":{\"720\":1}}],[\"在线\",{\"1\":{\"632\":1}}],[\"在线查看日志\",{\"1\":{\"612\":1}}],[\"在线地图功能\",{\"1\":{\"720\":1}}],[\"在线地图\",{\"0\":{\"615\":1},\"1\":{\"331\":1,\"440\":1,\"619\":1,\"726\":1}}],[\"在线时长\",{\"1\":{\"217\":1,\"694\":1}}],[\"在线玩家数量\",{\"1\":{\"102\":1}}],[\"在任意位置使用\",{\"1\":{\"85\":1}}],[\"在阅读完文章后也可提问\",{\"1\":{\"77\":1}}],[\"在多核心服务器上性能优异\",{\"1\":{\"31\":1}}],[\"提示位于语言文件\",{\"1\":{\"592\":1}}],[\"提示\",{\"0\":{\"574\":1,\"618\":1,\"721\":1}}],[\"提示能不能换下\",{\"0\":{\"38\":1}}],[\"提交\",{\"1\":{\"259\":1}}],[\"提问等等\",{\"1\":{\"76\":1}}],[\"评论\",{\"1\":{\"76\":1}}],[\"文件直接放入即可自动导入\",{\"1\":{\"651\":1,\"657\":1}}],[\"文件名刷新间隔\",{\"1\":{\"602\":1}}],[\"文件名\",{\"1\":{\"602\":1}}],[\"文件\",{\"1\":{\"598\":1}}],[\"文件夹下面\",{\"1\":{\"2372\":1}}],[\"文件夹下的语言文件中\",{\"1\":{\"39\":1}}],[\"文件夹直接放入即可加载\",{\"1\":{\"647\":1}}],[\"文件夹\",{\"0\":{\"290\":1},\"1\":{\"300\":1}}],[\"文件列表\",{\"0\":{\"284\":1}}],[\"文件结构\",{\"0\":{\"280\":1}}],[\"文件放到plugins\",{\"1\":{\"276\":1,\"278\":1}}],[\"文档待写\",{\"1\":{\"673\":1,\"675\":1,\"691\":1}}],[\"文档编写\",{\"0\":{\"78\":1}}],[\"文档使用方法\",{\"0\":{\"75\":1}}],[\"文档使用\",{\"0\":{\"74\":1}}],[\"文章不一定包含全部功能\",{\"1\":{\"77\":1}}],[\"边界可视化粒子\",{\"1\":{\"73\":1}}],[\"eventkey\",{\"1\":{\"2376\":2,\"2384\":1}}],[\"else\",{\"1\":{\"2371\":4,\"2373\":4}}],[\"effect\",{\"1\":{\"625\":2}}],[\"egui菜单\",{\"1\":{\"625\":1}}],[\"e加入服务器~\",{\"1\":{\"594\":2}}],[\"e欢迎来自\",{\"1\":{\"594\":2}}],[\"e客户端协议版本\",{\"1\":{\"513\":1}}],[\"e服务端协议版本\",{\"1\":{\"513\":1}}],[\"e型号\",{\"1\":{\"513\":1}}],[\"e系统\",{\"1\":{\"513\":1}}],[\"eip\",{\"1\":{\"513\":1}}],[\"eid\",{\"1\":{\"513\":1}}],[\"ems\",{\"1\":{\"504\":1}}],[\"emm\",{\"1\":{\"15\":1}}],[\"e|\",{\"1\":{\"504\":1,\"507\":2}}],[\"e\",{\"1\":{\"504\":1,\"513\":1,\"594\":3}}],[\"editplayerpermissiongroup\",{\"0\":{\"2020\":1},\"1\":{\"2032\":3,\"2034\":3,\"2036\":3,\"2038\":3,\"2040\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"edit\",{\"1\":{\"667\":1,\"671\":1}}],[\"editor\",{\"1\":{\"666\":3,\"667\":1,\"668\":1}}],[\"edit打开\",{\"1\":{\"639\":1}}],[\"editredstonetps\",{\"1\":{\"451\":1,\"573\":1}}],[\"edge\",{\"1\":{\"341\":1,\"342\":1}}],[\"edgewebview2\",{\"1\":{\"341\":1}}],[\"externaladdress\",{\"1\":{\"720\":1}}],[\"extralistener\",{\"1\":{\"583\":1,\"678\":1}}],[\"extraallowincomingprotocolversions\",{\"1\":{\"513\":1}}],[\"extra\",{\"1\":{\"498\":1,\"1127\":1,\"1131\":1,\"1133\":2,\"1135\":1,\"1137\":1,\"1139\":1,\"1150\":1,\"1154\":1,\"1156\":2,\"1158\":1,\"1160\":1,\"1162\":1,\"1169\":1,\"1173\":1,\"1175\":2,\"1177\":1,\"1179\":1,\"1181\":1,\"2371\":1,\"2373\":1,\"2386\":3,\"2391\":6,\"2396\":6,\"2401\":9,\"2406\":6}}],[\"example\",{\"1\":{\"531\":1,\"533\":1}}],[\"executeinternalcommand\",{\"0\":{\"900\":1},\"1\":{\"910\":3,\"912\":3,\"914\":3,\"916\":3,\"918\":3,\"2365\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"executecmd\",{\"1\":{\"625\":1}}],[\"exe\",{\"0\":{\"395\":1},\"1\":{\"367\":2}}],[\"exception\",{\"1\":{\"362\":1}}],[\"experience\",{\"1\":{\"166\":1,\"504\":1}}],[\"error\",{\"1\":{\"362\":2,\"2376\":1}}],[\"encryptresourcepacks\",{\"1\":{\"642\":1}}],[\"enabledebugoutput\",{\"1\":{\"731\":1}}],[\"enabled3d\",{\"1\":{\"583\":1}}],[\"enabled2d\",{\"1\":{\"583\":1}}],[\"enableenclosurefly\",{\"1\":{\"583\":1}}],[\"enableteleport\",{\"1\":{\"583\":1}}],[\"enablelevelname\",{\"1\":{\"573\":1}}],[\"enablefakeseed\",{\"1\":{\"573\":1}}],[\"enablevisualize\",{\"1\":{\"73\":1}}],[\"en\",{\"0\":{\"2408\":1},\"1\":{\"293\":1,\"359\":1}}],[\"entityexplode\",{\"1\":{\"602\":1}}],[\"entitycount\",{\"1\":{\"109\":1}}],[\"entities\",{\"1\":{\"110\":2}}],[\"endstr\",{\"1\":{\"780\":1,\"784\":1,\"786\":2,\"788\":1,\"790\":1,\"792\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"endermanleaveblock\",{\"1\":{\"583\":1}}],[\"endermantakeblock\",{\"1\":{\"583\":1}}],[\"end\",{\"1\":{\"73\":1,\"507\":1,\"2406\":86}}],[\"zipfilename\",{\"1\":{\"498\":1}}],[\"zip\",{\"1\":{\"391\":1,\"498\":1}}],[\"z\",{\"1\":{\"316\":1,\"970\":1,\"976\":1,\"978\":2,\"980\":1,\"982\":1,\"984\":1,\"1311\":1,\"1317\":1,\"1319\":2,\"1321\":1,\"1323\":1,\"1325\":1,\"1334\":1,\"1340\":1,\"1342\":2,\"1344\":1,\"1346\":1,\"1348\":1,\"1415\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1427\":1,\"1429\":1,\"1438\":1,\"1444\":1,\"1446\":2,\"1448\":1,\"1450\":1,\"1452\":1,\"1519\":1,\"1525\":1,\"1527\":2,\"1529\":1,\"1531\":1,\"1533\":1,\"1542\":1,\"1548\":1,\"1550\":2,\"1552\":1,\"1554\":1,\"1556\":1,\"1565\":1,\"1573\":1,\"1575\":2,\"1577\":1,\"1579\":1,\"1581\":1,\"1590\":1,\"1598\":1,\"1600\":2,\"1602\":1,\"1604\":1,\"1606\":1,\"1673\":1,\"1679\":1,\"1681\":2,\"1683\":1,\"1685\":1,\"1687\":1,\"1696\":1,\"1702\":1,\"1704\":2,\"1706\":1,\"1708\":1,\"1710\":1,\"1719\":1,\"1727\":1,\"1729\":2,\"1731\":1,\"1733\":1,\"1735\":1,\"1744\":1,\"1752\":1,\"1754\":2,\"1756\":1,\"1758\":1,\"1760\":1,\"1771\":1,\"1779\":1,\"1781\":2,\"1783\":1,\"1785\":1,\"1787\":1,\"1798\":1,\"1806\":1,\"1808\":2,\"1810\":1,\"1812\":1,\"1814\":1,\"1823\":1,\"1831\":1,\"1833\":2,\"1835\":1,\"1837\":1,\"1839\":1,\"1848\":1,\"1856\":1,\"1858\":2,\"1860\":1,\"1862\":1,\"1864\":1,\"1873\":1,\"1881\":1,\"1883\":2,\"1885\":1,\"1887\":1,\"1889\":1,\"1898\":1,\"1906\":1,\"1908\":2,\"1910\":1,\"1912\":1,\"1914\":1,\"1923\":1,\"1931\":1,\"1933\":2,\"1935\":1,\"1937\":1,\"1939\":1,\"1948\":1,\"1956\":1,\"1958\":2,\"1960\":1,\"1962\":1,\"1964\":1,\"2233\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2386\":22,\"2391\":44,\"2396\":44,\"2401\":66,\"2406\":44}}],[\"z2\",{\"1\":{\"73\":1,\"208\":1,\"1259\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1288\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1363\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1392\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1467\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1496\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1617\":1,\"1625\":1,\"1627\":2,\"1629\":1,\"1631\":1,\"1633\":1,\"1648\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"2274\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":9,\"2391\":18,\"2396\":18,\"2401\":27,\"2406\":18}}],[\"z1\",{\"1\":{\"73\":1,\"208\":1,\"1253\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1282\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1357\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1386\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1461\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1490\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1613\":1,\"1625\":1,\"1627\":2,\"1629\":1,\"1631\":1,\"1633\":1,\"1642\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"2268\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":9,\"2391\":18,\"2396\":18,\"2401\":27,\"2406\":18}}],[\"zh\",{\"1\":{\"73\":1,\"294\":1,\"342\":1,\"371\":1}}],[\"xdm\",{\"1\":{\"728\":1}}],[\"xboxlive\",{\"1\":{\"455\":1}}],[\"x86\",{\"1\":{\"384\":1,\"385\":1}}],[\"x64\",{\"1\":{\"363\":1,\"379\":2,\"381\":1,\"382\":1,\"384\":1,\"385\":1}}],[\"x\",{\"0\":{\"373\":1},\"1\":{\"316\":1,\"372\":1,\"966\":1,\"976\":1,\"978\":2,\"980\":1,\"982\":1,\"984\":1,\"1307\":1,\"1317\":1,\"1319\":2,\"1321\":1,\"1323\":1,\"1325\":1,\"1330\":1,\"1340\":1,\"1342\":2,\"1344\":1,\"1346\":1,\"1348\":1,\"1411\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1427\":1,\"1429\":1,\"1434\":1,\"1444\":1,\"1446\":2,\"1448\":1,\"1450\":1,\"1452\":1,\"1515\":1,\"1525\":1,\"1527\":2,\"1529\":1,\"1531\":1,\"1533\":1,\"1538\":1,\"1548\":1,\"1550\":2,\"1552\":1,\"1554\":1,\"1556\":1,\"1561\":1,\"1573\":1,\"1575\":2,\"1577\":1,\"1579\":1,\"1581\":1,\"1586\":1,\"1598\":1,\"1600\":2,\"1602\":1,\"1604\":1,\"1606\":1,\"1669\":1,\"1679\":1,\"1681\":2,\"1683\":1,\"1685\":1,\"1687\":1,\"1692\":1,\"1702\":1,\"1704\":2,\"1706\":1,\"1708\":1,\"1710\":1,\"1715\":1,\"1727\":1,\"1729\":2,\"1731\":1,\"1733\":1,\"1735\":1,\"1740\":1,\"1752\":1,\"1754\":2,\"1756\":1,\"1758\":1,\"1760\":1,\"1767\":1,\"1779\":1,\"1781\":2,\"1783\":1,\"1785\":1,\"1787\":1,\"1794\":1,\"1806\":1,\"1808\":2,\"1810\":1,\"1812\":1,\"1814\":1,\"1819\":1,\"1831\":1,\"1833\":2,\"1835\":1,\"1837\":1,\"1839\":1,\"1844\":1,\"1856\":1,\"1858\":2,\"1860\":1,\"1862\":1,\"1864\":1,\"1869\":1,\"1881\":1,\"1883\":2,\"1885\":1,\"1887\":1,\"1889\":1,\"1894\":1,\"1906\":1,\"1908\":2,\"1910\":1,\"1912\":1,\"1914\":1,\"1919\":1,\"1931\":1,\"1933\":2,\"1935\":1,\"1937\":1,\"1939\":1,\"1944\":1,\"1956\":1,\"1958\":2,\"1960\":1,\"1962\":1,\"1964\":1,\"2229\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2386\":22,\"2391\":44,\"2396\":44,\"2401\":66,\"2406\":44}}],[\"xp\",{\"1\":{\"167\":1}}],[\"xuidlang\",{\"1\":{\"2371\":1,\"2373\":1}}],[\"xuid\",{\"1\":{\"142\":1,\"144\":1,\"324\":1,\"2365\":1,\"2371\":2,\"2373\":2,\"2376\":1,\"2384\":1}}],[\"x2\",{\"1\":{\"73\":1,\"208\":1,\"1255\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1284\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1359\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1388\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1463\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1492\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1615\":1,\"1625\":1,\"1627\":2,\"1629\":1,\"1631\":1,\"1633\":1,\"1644\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"2270\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":9,\"2391\":18,\"2396\":18,\"2401\":27,\"2406\":18}}],[\"x1\",{\"1\":{\"73\":1,\"208\":1,\"1249\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1271\":1,\"1273\":1,\"1278\":1,\"1294\":1,\"1296\":2,\"1298\":1,\"1300\":1,\"1302\":1,\"1353\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":1,\"1377\":1,\"1382\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":1,\"1406\":1,\"1457\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":1,\"1481\":1,\"1486\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":1,\"1510\":1,\"1611\":1,\"1625\":1,\"1627\":2,\"1629\":1,\"1631\":1,\"1633\":1,\"1638\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"2264\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":9,\"2391\":18,\"2396\":18,\"2401\":27,\"2406\":18}}],[\"xxxmoney\",{\"0\":{\"45\":1}}],[\"xxx\",{\"0\":{\"40\":1},\"1\":{\"126\":1,\"127\":1,\"233\":1,\"265\":1,\"311\":1,\"402\":3,\"409\":1,\"422\":1,\"510\":1,\"541\":2,\"542\":1,\"645\":1,\"646\":1,\"666\":2,\"668\":1,\"717\":2}}],[\"xx\",{\"0\":{\"34\":2,\"36\":1,\"38\":3},\"1\":{\"392\":5,\"412\":5,\"425\":5}}],[\"110\",{\"1\":{\"2371\":1,\"2373\":1}}],[\"11451\",{\"1\":{\"533\":1}}],[\"114514\",{\"0\":{\"3\":1,\"390\":1,\"411\":1,\"424\":1},\"1\":{\"573\":1}}],[\"1300\",{\"1\":{\"706\":1}}],[\"1表示无限制\",{\"1\":{\"583\":1}}],[\"10\",{\"1\":{\"573\":3,\"583\":1}}],[\"100\",{\"1\":{\"474\":1,\"583\":1}}],[\"1000\",{\"1\":{\"73\":5,\"504\":1}}],[\"19132\",{\"1\":{\"533\":1}}],[\"127\",{\"1\":{\"347\":1,\"533\":1}}],[\"1\",{\"0\":{\"356\":1,\"360\":1},\"1\":{\"347\":2,\"498\":1,\"513\":2,\"533\":1,\"583\":4,\"594\":2}}],[\"go\",{\"1\":{\"717\":1}}],[\"g赚取金币\",{\"1\":{\"625\":1}}],[\"glyph\",{\"1\":{\"625\":1}}],[\"global\",{\"1\":{\"73\":1}}],[\"growmashroom\",{\"1\":{\"583\":1}}],[\"growtree\",{\"1\":{\"583\":1}}],[\"groupqq\",{\"1\":{\"37\":1}}],[\"general\",{\"0\":{\"1182\":1,\"1183\":1,\"1200\":1,\"1214\":1},\"1\":{\"1191\":3,\"1193\":3,\"1195\":3,\"1197\":3,\"1199\":2,\"1205\":3,\"1207\":3,\"1209\":3,\"1211\":3,\"1213\":3,\"1219\":3,\"1221\":3,\"1223\":3,\"1225\":3,\"1227\":3,\"2386\":6,\"2389\":6,\"2391\":10,\"2394\":6,\"2396\":10,\"2399\":6,\"2401\":7,\"2404\":6,\"2406\":10}}],[\"generation选项\",{\"1\":{\"575\":1}}],[\"gettemp\",{\"0\":{\"2343\":1},\"1\":{\"2351\":3,\"2353\":3,\"2355\":3,\"2357\":3,\"2359\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"get\",{\"0\":{\"2163\":1},\"1\":{\"2171\":3,\"2173\":3,\"2175\":3,\"2177\":3,\"2179\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getallcachedata\",{\"0\":{\"2119\":1},\"1\":{\"2124\":3,\"2126\":3,\"2128\":3,\"2130\":3,\"2132\":3,\"2376\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getplayerstatistics\",{\"0\":{\"2306\":1},\"1\":{\"2314\":3,\"2316\":3,\"2318\":3,\"2320\":3,\"2322\":3,\"2380\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getplayerpermissiongroup\",{\"0\":{\"1982\":1},\"1\":{\"1992\":3,\"1994\":3,\"1996\":3,\"1998\":3,\"2000\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getplayerallpermissiongroupid\",{\"0\":{\"1965\":1},\"1\":{\"1973\":3,\"1975\":3,\"1977\":3,\"1979\":3,\"1981\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandssharedtoplayer\",{\"0\":{\"2079\":1},\"1\":{\"2087\":3,\"2089\":3,\"2091\":3,\"2093\":3,\"2095\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandsownedbyplayer\",{\"0\":{\"2062\":1},\"1\":{\"2070\":3,\"2072\":3,\"2074\":3,\"2076\":3,\"2078\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandpermissionbyposint\",{\"0\":{\"1736\":1},\"1\":{\"1752\":3,\"1754\":3,\"1756\":3,\"1758\":3,\"1760\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandpermissionbypos\",{\"0\":{\"1711\":1},\"1\":{\"1727\":3,\"1729\":3,\"1731\":3,\"1733\":3,\"1735\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandinfobyposint\",{\"0\":{\"1534\":1},\"1\":{\"1548\":3,\"1550\":3,\"1552\":3,\"1554\":3,\"1556\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandinfobypos\",{\"0\":{\"1511\":1},\"1\":{\"1525\":3,\"1527\":3,\"1529\":3,\"1531\":3,\"1533\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandinfobycubeint\",{\"0\":{\"1482\":1},\"1\":{\"1502\":3,\"1504\":3,\"1506\":3,\"1508\":3,\"1510\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandinfobycube\",{\"0\":{\"1453\":1},\"1\":{\"1473\":3,\"1475\":3,\"1477\":3,\"1479\":3,\"1481\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandbyposint\",{\"0\":{\"1430\":1},\"1\":{\"1444\":3,\"1446\":3,\"1448\":3,\"1450\":3,\"1452\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandbypos\",{\"0\":{\"1407\":1},\"1\":{\"1421\":3,\"1423\":3,\"1425\":3,\"1427\":3,\"1429\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandbycubeint\",{\"0\":{\"1378\":1},\"1\":{\"1398\":3,\"1400\":3,\"1402\":3,\"1404\":3,\"1406\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getlandbycube\",{\"0\":{\"1349\":1},\"1\":{\"1369\":3,\"1371\":3,\"1373\":3,\"1375\":3,\"1377\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getconfig\",{\"0\":{\"1200\":1},\"1\":{\"1205\":3,\"1207\":3,\"1209\":3,\"1211\":3,\"1213\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getformat\",{\"0\":{\"1163\":1},\"1\":{\"1173\":3,\"1175\":3,\"1177\":3,\"1179\":3,\"1181\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getformatwithplayerlang\",{\"0\":{\"1140\":1},\"1\":{\"1154\":3,\"1156\":3,\"1158\":3,\"1160\":3,\"1162\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getformatwithplayer\",{\"0\":{\"1119\":1},\"1\":{\"1131\":3,\"1133\":3,\"1135\":3,\"1137\":3,\"1139\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getfakename\",{\"0\":{\"829\":1},\"1\":{\"837\":3,\"839\":3,\"841\":3,\"843\":3,\"845\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getvariablefloat\",{\"0\":{\"1045\":1},\"1\":{\"1055\":3,\"1057\":3,\"1059\":3,\"1061\":3,\"1063\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getvariableint\",{\"0\":{\"1026\":1},\"1\":{\"1036\":3,\"1038\":3,\"1040\":3,\"1042\":3,\"1044\":3,\"2371\":1,\"2373\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getvariablestring\",{\"0\":{\"1005\":1},\"1\":{\"1017\":3,\"1019\":3,\"1021\":3,\"1023\":3,\"1025\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getstart\",{\"0\":{\"863\":1},\"1\":{\"871\":3,\"873\":3,\"875\":3,\"877\":3,\"879\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getend\",{\"0\":{\"846\":1},\"1\":{\"854\":3,\"856\":3,\"858\":3,\"860\":3,\"862\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getnickname\",{\"0\":{\"812\":1},\"1\":{\"820\":3,\"822\":3,\"824\":3,\"826\":3,\"828\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"getip\",{\"1\":{\"546\":1,\"547\":1}}],[\"g↓\",{\"1\":{\"504\":1}}],[\"g\",{\"1\":{\"504\":1,\"507\":2,\"513\":1,\"594\":2,\"2237\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2278\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2371\":1,\"2373\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"giftcode\",{\"0\":{\"556\":1},\"1\":{\"287\":1,\"460\":1,\"558\":1}}],[\"github\",{\"1\":{\"80\":2,\"336\":1,\"367\":1,\"457\":1,\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"依赖webview2网页\",{\"1\":{\"73\":1}}],[\"ws\",{\"1\":{\"731\":1}}],[\"writable\",{\"1\":{\"625\":1}}],[\"wangyneos\",{\"1\":{\"457\":1}}],[\"warplist\",{\"1\":{\"268\":1,\"319\":1}}],[\"warp\",{\"0\":{\"267\":1,\"277\":1,\"709\":1},\"1\":{\"436\":1,\"711\":1,\"717\":2}}],[\"witherbossdestroyblocks\",{\"1\":{\"583\":1}}],[\"witherbossattack\",{\"1\":{\"583\":1}}],[\"with\",{\"1\":{\"391\":1}}],[\"winget\",{\"1\":{\"384\":1}}],[\"windows并解压\",{\"1\":{\"359\":1}}],[\"windows\",{\"1\":{\"55\":1,\"383\":1}}],[\"wine\",{\"1\":{\"55\":1,\"56\":2}}],[\"www\",{\"1\":{\"336\":1,\"359\":1,\"666\":1}}],[\"websocketapi\",{\"0\":{\"729\":1},\"1\":{\"456\":1,\"731\":1}}],[\"webconfig\",{\"1\":{\"346\":1}}],[\"webview2\",{\"1\":{\"342\":1}}],[\"webviewconfig\",{\"1\":{\"73\":1}}],[\"webuigetname\",{\"1\":{\"2376\":1,\"2384\":1}}],[\"webui\",{\"0\":{\"611\":1,\"718\":1},\"1\":{\"331\":1,\"332\":1,\"333\":1,\"439\":1,\"619\":3,\"720\":1}}],[\"welcome\",{\"1\":{\"208\":1}}],[\"world\",{\"1\":{\"149\":1,\"507\":1,\"625\":1}}],[\"worldlimit\",{\"1\":{\"73\":1,\"466\":1}}],[\"部分\",{\"0\":{\"72\":1}}],[\"开始导入\",{\"1\":{\"666\":1}}],[\"开关\",{\"1\":{\"617\":1,\"720\":1}}],[\"开源库使用\",{\"0\":{\"550\":1}}],[\"开启模块\",{\"1\":{\"694\":1}}],[\"开启判断更全面\",{\"1\":{\"678\":1}}],[\"开启材质包加密\",{\"1\":{\"642\":1}}],[\"开启3d领地\",{\"1\":{\"583\":1}}],[\"开启2d领地\",{\"1\":{\"583\":1}}],[\"开启领地\",{\"1\":{\"583\":1}}],[\"开启修改客户端种子后无需手动关闭client\",{\"1\":{\"575\":1}}],[\"开启修改红石速度的功能\",{\"1\":{\"573\":1}}],[\"开启修改存档显示名称的功能\",{\"1\":{\"573\":1}}],[\"开启假种子功能\",{\"1\":{\"573\":1}}],[\"开启方可让所有使用了ll接口的插件获取到真实ip\",{\"1\":{\"528\":1,\"549\":1}}],[\"开启自动备份\",{\"1\":{\"498\":1}}],[\"开启图片加载器模块后生成\",{\"1\":{\"304\":1}}],[\"开启后生成\",{\"1\":{\"286\":1,\"287\":1,\"288\":1,\"289\":1}}],[\"开启\",{\"1\":{\"73\":1,\"578\":1,\"590\":1,\"623\":1,\"662\":1,\"678\":1,\"706\":1}}],[\"开启或者关闭模块\",{\"1\":{\"71\":1}}],[\"开发\",{\"1\":{\"26\":1}}],[\"sub\",{\"1\":{\"2406\":30}}],[\"summary>\",{\"1\":{\"2391\":72,\"2396\":72,\"2406\":72}}],[\"src\",{\"1\":{\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"single\",{\"1\":{\"982\":3,\"1061\":1,\"1271\":6,\"1323\":3,\"1375\":6,\"1427\":3,\"1479\":6,\"1531\":3,\"1579\":3,\"1685\":3,\"1733\":3,\"1785\":3,\"1837\":3,\"1887\":3,\"2255\":6,\"2296\":6,\"2404\":61,\"2406\":182}}],[\"sidebar\",{\"0\":{\"690\":1},\"1\":{\"444\":1}}],[\"say\",{\"1\":{\"685\":1}}],[\"saveformattedjson\",{\"1\":{\"623\":1}}],[\"sakurafrp\",{\"1\":{\"535\":1,\"537\":1,\"539\":1}}],[\"saturation\",{\"1\":{\"164\":1}}],[\"s\",{\"1\":{\"504\":2,\"573\":1}}],[\"sqlitestudio\",{\"1\":{\"608\":1}}],[\"sqlite\",{\"1\":{\"471\":1,\"604\":1,\"609\":1}}],[\"sdk\",{\"0\":{\"2385\":1,\"2387\":1,\"2392\":1,\"2397\":1,\"2402\":1,\"2407\":1},\"1\":{\"388\":1}}],[\"software\",{\"1\":{\"359\":1}}],[\"source\",{\"1\":{\"46\":1}}],[\"scheduletask\",{\"0\":{\"683\":1},\"1\":{\"484\":1,\"685\":1}}],[\"scripts\",{\"1\":{\"307\":1,\"387\":1,\"2365\":1,\"2371\":1,\"2372\":1,\"2376\":1,\"2380\":1}}],[\"scoreboard\",{\"1\":{\"145\":1,\"148\":1}}],[\"system\",{\"1\":{\"254\":1}}],[\"shared\",{\"1\":{\"2406\":144}}],[\"sharedplayers\",{\"1\":{\"208\":1}}],[\"showdisconnectinconsole\",{\"1\":{\"513\":1}}],[\"showactionbar\",{\"1\":{\"493\":1}}],[\"showtitle\",{\"1\":{\"493\":1}}],[\"shop\",{\"1\":{\"475\":1,\"625\":1}}],[\"shoppreference\",{\"1\":{\"328\":1}}],[\"shopdata\",{\"1\":{\"289\":1,\"476\":1}}],[\"sheep\",{\"1\":{\"230\":1,\"694\":1}}],[\"std\",{\"1\":{\"748\":2,\"767\":2,\"786\":2,\"805\":2,\"822\":1,\"839\":1,\"856\":1,\"873\":1,\"893\":2,\"912\":2,\"933\":3,\"952\":2,\"978\":2,\"997\":1,\"1019\":3,\"1038\":2,\"1057\":2,\"1076\":2,\"1095\":2,\"1112\":1,\"1133\":3,\"1156\":4,\"1175\":2,\"1193\":1,\"1575\":1,\"1600\":1,\"1627\":1,\"1658\":1,\"1729\":1,\"1754\":1,\"1781\":2,\"1808\":2,\"1833\":1,\"1858\":1,\"1883\":1,\"1908\":1,\"1933\":1,\"1958\":1,\"1975\":1,\"1994\":2,\"2013\":2,\"2034\":3,\"2055\":3,\"2072\":1,\"2089\":1,\"2111\":3,\"2155\":7,\"2173\":1,\"2194\":2,\"2215\":2,\"2251\":1,\"2292\":1,\"2316\":1,\"2335\":2,\"2353\":1,\"2386\":96}}],[\"stringify\",{\"1\":{\"2380\":1}}],[\"string>>\",{\"1\":{\"750\":1,\"754\":1,\"769\":1,\"773\":1,\"788\":1,\"792\":1,\"807\":1,\"811\":1,\"824\":1,\"828\":1,\"841\":1,\"845\":1,\"858\":1,\"862\":1,\"875\":1,\"879\":1,\"895\":1,\"899\":1,\"935\":1,\"939\":1,\"954\":1,\"958\":1,\"1021\":1,\"1025\":1,\"1078\":1,\"1082\":1,\"1135\":1,\"1139\":1,\"1158\":1,\"1162\":1,\"1177\":1,\"1181\":1,\"1373\":1,\"1377\":1,\"1402\":1,\"1406\":1,\"1425\":1,\"1429\":1,\"1448\":1,\"1452\":1,\"1477\":1,\"1481\":1,\"1506\":1,\"1510\":1,\"1529\":1,\"1533\":1,\"1552\":1,\"1556\":1,\"1731\":1,\"1735\":1,\"1756\":1,\"1760\":1,\"1977\":1,\"1981\":1,\"1996\":1,\"2000\":1,\"2074\":1,\"2078\":1,\"2091\":1,\"2095\":1,\"2113\":1,\"2117\":1,\"2157\":1,\"2161\":1,\"2196\":1,\"2200\":1,\"2217\":1,\"2221\":1,\"2318\":1,\"2322\":1,\"2337\":1,\"2341\":1,\"2355\":1,\"2359\":1,\"2389\":37,\"2391\":74,\"2394\":37,\"2396\":37}}],[\"string\",{\"1\":{\"741\":1,\"743\":1,\"748\":2,\"752\":2,\"760\":1,\"762\":1,\"767\":2,\"771\":2,\"779\":1,\"781\":1,\"786\":2,\"790\":2,\"798\":1,\"800\":1,\"805\":2,\"809\":2,\"817\":1,\"818\":1,\"820\":1,\"822\":3,\"824\":1,\"826\":3,\"828\":1,\"834\":1,\"835\":1,\"837\":1,\"839\":3,\"841\":1,\"843\":3,\"845\":1,\"851\":1,\"852\":1,\"854\":1,\"856\":3,\"858\":1,\"860\":3,\"862\":1,\"868\":1,\"869\":1,\"871\":1,\"873\":3,\"875\":1,\"877\":3,\"879\":1,\"886\":1,\"888\":1,\"893\":2,\"897\":2,\"905\":1,\"907\":1,\"912\":2,\"914\":1,\"916\":2,\"918\":1,\"924\":1,\"926\":1,\"928\":1,\"933\":3,\"935\":1,\"937\":3,\"939\":1,\"945\":1,\"947\":1,\"952\":2,\"956\":2,\"965\":1,\"973\":1,\"978\":2,\"980\":1,\"982\":2,\"984\":1,\"990\":1,\"997\":1,\"1001\":1,\"1010\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1017\":1,\"1019\":5,\"1021\":3,\"1023\":5,\"1025\":3,\"1031\":1,\"1033\":1,\"1038\":2,\"1040\":1,\"1042\":2,\"1044\":1,\"1050\":1,\"1052\":1,\"1057\":2,\"1059\":1,\"1061\":2,\"1063\":1,\"1069\":1,\"1071\":1,\"1072\":1,\"1074\":1,\"1076\":4,\"1078\":2,\"1080\":4,\"1082\":2,\"1088\":1,\"1090\":1,\"1095\":2,\"1097\":1,\"1099\":2,\"1101\":1,\"1107\":1,\"1112\":1,\"1116\":1,\"1124\":1,\"1126\":1,\"1128\":1,\"1129\":1,\"1131\":1,\"1133\":5,\"1135\":3,\"1137\":5,\"1139\":3,\"1145\":1,\"1147\":1,\"1149\":1,\"1151\":1,\"1152\":1,\"1154\":1,\"1156\":6,\"1158\":4,\"1160\":6,\"1162\":4,\"1168\":1,\"1170\":1,\"1171\":1,\"1173\":1,\"1175\":4,\"1177\":2,\"1179\":4,\"1181\":2,\"1188\":1,\"1193\":1,\"1197\":1,\"1203\":1,\"1205\":1,\"1207\":2,\"1209\":1,\"1211\":2,\"1213\":1,\"1367\":1,\"1369\":1,\"1371\":2,\"1373\":1,\"1375\":2,\"1377\":1,\"1396\":1,\"1398\":1,\"1400\":2,\"1402\":1,\"1404\":2,\"1406\":1,\"1419\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1427\":2,\"1429\":1,\"1442\":1,\"1444\":1,\"1446\":2,\"1448\":1,\"1450\":2,\"1452\":1,\"1471\":1,\"1473\":1,\"1475\":2,\"1477\":1,\"1479\":2,\"1481\":1,\"1500\":1,\"1502\":1,\"1504\":2,\"1506\":1,\"1508\":2,\"1510\":1,\"1523\":1,\"1525\":1,\"1527\":2,\"1529\":1,\"1531\":2,\"1533\":1,\"1546\":1,\"1548\":1,\"1550\":2,\"1552\":1,\"1554\":2,\"1556\":1,\"1570\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1595\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"1622\":1,\"1627\":1,\"1629\":1,\"1631\":1,\"1633\":1,\"1653\":1,\"1658\":1,\"1660\":1,\"1662\":1,\"1664\":1,\"1724\":1,\"1725\":1,\"1727\":1,\"1729\":3,\"1731\":2,\"1733\":3,\"1735\":2,\"1749\":1,\"1750\":1,\"1752\":1,\"1754\":3,\"1756\":2,\"1758\":3,\"1760\":2,\"1766\":1,\"1776\":1,\"1781\":2,\"1783\":1,\"1785\":2,\"1787\":1,\"1793\":1,\"1803\":1,\"1808\":2,\"1810\":1,\"1812\":2,\"1814\":1,\"1828\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1853\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"1878\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1903\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"1928\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1953\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"1970\":1,\"1971\":1,\"1973\":1,\"1975\":3,\"1977\":1,\"1979\":3,\"1981\":1,\"1987\":1,\"1989\":1,\"1990\":1,\"1992\":1,\"1994\":4,\"1996\":2,\"1998\":4,\"2000\":2,\"2006\":1,\"2008\":1,\"2013\":2,\"2015\":1,\"2017\":2,\"2019\":1,\"2025\":1,\"2027\":1,\"2029\":1,\"2034\":3,\"2036\":2,\"2038\":3,\"2040\":2,\"2046\":1,\"2048\":1,\"2050\":1,\"2055\":3,\"2057\":2,\"2059\":3,\"2061\":2,\"2067\":1,\"2068\":1,\"2070\":1,\"2072\":3,\"2074\":1,\"2076\":3,\"2078\":1,\"2084\":1,\"2085\":1,\"2087\":1,\"2089\":3,\"2091\":1,\"2093\":3,\"2095\":1,\"2102\":1,\"2104\":1,\"2106\":1,\"2107\":1,\"2109\":1,\"2111\":5,\"2113\":3,\"2115\":5,\"2117\":3,\"2122\":1,\"2124\":1,\"2126\":2,\"2128\":1,\"2130\":2,\"2132\":1,\"2138\":1,\"2140\":1,\"2142\":1,\"2144\":1,\"2146\":1,\"2148\":1,\"2150\":1,\"2155\":7,\"2157\":5,\"2159\":7,\"2161\":5,\"2168\":1,\"2173\":1,\"2177\":1,\"2185\":1,\"2189\":1,\"2194\":2,\"2198\":2,\"2206\":1,\"2210\":1,\"2215\":2,\"2219\":2,\"2228\":1,\"2251\":1,\"2255\":1,\"2263\":1,\"2292\":1,\"2296\":1,\"2311\":1,\"2312\":1,\"2314\":1,\"2316\":3,\"2318\":1,\"2320\":3,\"2322\":1,\"2328\":1,\"2330\":1,\"2335\":2,\"2339\":2,\"2348\":1,\"2349\":1,\"2351\":1,\"2353\":3,\"2355\":1,\"2357\":3,\"2359\":1,\"2386\":152,\"2389\":70,\"2391\":236,\"2394\":70,\"2396\":194,\"2399\":28,\"2401\":152,\"2404\":152,\"2406\":400}}],[\"structures\",{\"1\":{\"655\":1}}],[\"statecode\",{\"1\":{\"2376\":1}}],[\"static\",{\"1\":{\"2391\":158}}],[\"staticpictureresenddurationseconds\",{\"1\":{\"662\":1}}],[\"statistics\",{\"0\":{\"210\":1,\"692\":1,\"2305\":1,\"2306\":1,\"2323\":1},\"1\":{\"480\":1,\"694\":1,\"2314\":3,\"2316\":3,\"2318\":3,\"2320\":3,\"2322\":2,\"2333\":3,\"2335\":3,\"2337\":3,\"2339\":3,\"2341\":2,\"2380\":2,\"2386\":4,\"2389\":4,\"2391\":7,\"2394\":4,\"2396\":7,\"2399\":4,\"2401\":5,\"2404\":4,\"2406\":7}}],[\"startstr\",{\"1\":{\"799\":1,\"803\":1,\"805\":2,\"807\":1,\"809\":1,\"811\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"start\",{\"1\":{\"507\":1}}],[\"studio\",{\"1\":{\"69\":1}}],[\"sb\",{\"1\":{\"146\":1}}],[\"setup\",{\"1\":{\"2365\":1}}],[\"setcallback\",{\"1\":{\"2365\":1}}],[\"setconfig\",{\"0\":{\"1183\":1},\"1\":{\"1191\":3,\"1193\":3,\"1195\":3,\"1197\":3,\"1199\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setcommandenabled\",{\"0\":{\"940\":1},\"1\":{\"950\":3,\"952\":3,\"954\":3,\"956\":3,\"958\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setcommanddisabled\",{\"0\":{\"919\":1},\"1\":{\"931\":3,\"933\":3,\"935\":3,\"937\":3,\"939\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setplayerstatistics\",{\"0\":{\"2323\":1},\"1\":{\"2333\":3,\"2335\":3,\"2337\":3,\"2339\":3,\"2341\":3,\"2380\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setiplocation\",{\"0\":{\"2133\":1},\"1\":{\"2153\":3,\"2155\":3,\"2157\":3,\"2159\":3,\"2161\":3,\"2376\":1,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setlandinfobyposint\",{\"0\":{\"1582\":1},\"1\":{\"1598\":3,\"1600\":3,\"1602\":3,\"1604\":3,\"1606\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setlandinfobypos\",{\"0\":{\"1557\":1},\"1\":{\"1573\":3,\"1575\":3,\"1577\":3,\"1579\":3,\"1581\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setstart\",{\"0\":{\"793\":1},\"1\":{\"803\":3,\"805\":3,\"807\":3,\"809\":3,\"811\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setend\",{\"0\":{\"774\":1},\"1\":{\"784\":3,\"786\":3,\"788\":3,\"790\":3,\"792\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setfakename\",{\"0\":{\"755\":1},\"1\":{\"765\":3,\"767\":3,\"769\":3,\"771\":3,\"773\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"setnickname\",{\"0\":{\"736\":1},\"1\":{\"746\":3,\"748\":3,\"750\":3,\"752\":3,\"754\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"set\",{\"1\":{\"668\":1}}],[\"settings\",{\"1\":{\"628\":1}}],[\"section\",{\"1\":{\"342\":1}}],[\"sendtoast\",{\"1\":{\"590\":1}}],[\"sendmessage\",{\"1\":{\"590\":1}}],[\"send\",{\"1\":{\"132\":1,\"198\":1,\"204\":1}}],[\"sent\",{\"1\":{\"131\":1,\"197\":1,\"203\":1,\"504\":1}}],[\"servercmd\",{\"1\":{\"602\":1}}],[\"server等补全库\",{\"1\":{\"313\":1,\"314\":1}}],[\"serveraddress\",{\"1\":{\"179\":1}}],[\"serverip\",{\"1\":{\"178\":1}}],[\"serversend\",{\"1\":{\"132\":1}}],[\"serversent\",{\"1\":{\"132\":1}}],[\"serverreceive\",{\"1\":{\"129\":1}}],[\"serverreceived\",{\"1\":{\"129\":1}}],[\"serverramfree\",{\"1\":{\"122\":1}}],[\"serverramtotal\",{\"1\":{\"119\":1}}],[\"serverramused\",{\"1\":{\"116\":1}}],[\"serverrambdsused\",{\"1\":{\"113\":1}}],[\"servertransfer\",{\"1\":{\"486\":1}}],[\"servertotalentities\",{\"1\":{\"110\":1}}],[\"servertps\",{\"1\":{\"95\":1}}],[\"serverprotocolversion\",{\"1\":{\"107\":1}}],[\"serverversion\",{\"1\":{\"104\":1}}],[\"serveronline\",{\"1\":{\"101\":1}}],[\"servermspt\",{\"1\":{\"98\":1}}],[\"server\",{\"0\":{\"356\":1,\"357\":1,\"358\":1,\"395\":1},\"1\":{\"95\":1,\"98\":1,\"101\":1,\"104\":1,\"107\":1,\"110\":1,\"113\":1,\"116\":1,\"119\":1,\"122\":1,\"128\":1,\"129\":1,\"131\":1,\"132\":1,\"351\":1,\"359\":2,\"367\":1,\"533\":2}}],[\"sslcertificatepassword\",{\"1\":{\"720\":1}}],[\"sslcertificatepath\",{\"1\":{\"720\":1}}],[\"ss\",{\"1\":{\"93\":1,\"240\":1,\"498\":3,\"507\":1}}],[\"而不是祭祀本\",{\"1\":{\"69\":1,\"399\":1}}],[\"而不是旧插件的依托答辩\",{\"1\":{\"26\":1}}],[\"而不是旧插件的\",{\"1\":{\"26\":2}}],[\"基本类似runcmdasop\",{\"1\":{\"625\":1}}],[\"基本配置\",{\"0\":{\"65\":1}}],[\"基于\",{\"1\":{\"11\":1,\"734\":1,\"2303\":1}}],[\"就可以与其他插件共用一个主命令\",{\"1\":{\"60\":1}}],[\"就行\",{\"1\":{\"33\":1}}],[\"本文件夹有一些简单的示例\",{\"1\":{\"2362\":1}}],[\"本次连接\",{\"1\":{\"196\":1,\"199\":1}}],[\"本插件内置的\",{\"1\":{\"555\":1}}],[\"本插件内置的修改后的分支\",{\"1\":{\"552\":1}}],[\"本插件有个网页配置工具\",{\"1\":{\"336\":1}}],[\"本插件支持多语言和自定义提示语\",{\"0\":{\"246\":1}}],[\"本插件也通过接口导出的获取变量的\",{\"1\":{\"236\":1}}],[\"本插件的诞生离不开\",{\"0\":{\"357\":1,\"365\":1,\"369\":1}}],[\"本插件的所有命令均可以通过接口修改\",{\"1\":{\"63\":1}}],[\"本插件的命令可能与其他插件重合\",{\"1\":{\"60\":1}}],[\"本插件的聊天事件会高于其他插件\",{\"1\":{\"59\":1}}],[\"本插件通常不会与其他插件冲突\",{\"1\":{\"58\":1}}],[\"本项目能长期免费\",{\"1\":{\"43\":1}}],[\"环境下运行\",{\"1\":{\"56\":1}}],[\"加钱\",{\"0\":{\"2181\":1},\"1\":{\"2192\":1,\"2194\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"加入了服务器~\",{\"1\":{\"594\":1}}],[\"加载失败\",{\"0\":{\"361\":1}}],[\"加上本插件对\",{\"1\":{\"56\":1}}],[\"加了插件后服务器卡顿\",{\"0\":{\"28\":1}}],[\"有所改动\",{\"1\":{\"555\":1}}],[\"有效\",{\"1\":{\"474\":1}}],[\"有一些兼容性问题\",{\"1\":{\"56\":1}}],[\"有什么特别的需要可以自己写或者找人定制\",{\"1\":{\"35\":1}}],[\"有什么区别\",{\"0\":{\"25\":1}}],[\"多数面版服使用\",{\"1\":{\"56\":1}}],[\"运行时\",{\"0\":{\"370\":1},\"1\":{\"372\":1}}],[\"运行报错\",{\"0\":{\"360\":1}}],[\"运行后控制台提示已自动导入pfessentials的warp数据即为成功\",{\"1\":{\"269\":1}}],[\"运行后控制台提示已自动导入pfessentials的home数据即为成功\",{\"1\":{\"266\":1}}],[\"运行\",{\"0\":{\"395\":1},\"1\":{\"56\":1}}],[\"运行多处溢出和卡死\",{\"1\":{\"55\":1}}],[\"运行环境\",{\"0\":{\"54\":1},\"1\":{\"55\":1}}],[\"80\",{\"1\":{\"2371\":1,\"2373\":1}}],[\"8089\",{\"1\":{\"720\":2}}],[\"8080\",{\"1\":{\"346\":1,\"347\":1,\"348\":1}}],[\"8\",{\"1\":{\"55\":2,\"583\":1,\"625\":1,\"734\":1}}],[\"850092152\",{\"1\":{\"37\":1}}],[\"测试\",{\"1\":{\"55\":1,\"2365\":1,\"2376\":1}}],[\"源码对应部分\",{\"1\":{\"52\":1}}],[\"确认llmoney\",{\"1\":{\"51\":1}}],[\"解压到指定目录即可自动加载\",{\"1\":{\"644\":1}}],[\"解压到指定目录\",{\"1\":{\"391\":1}}],[\"解压覆盖到\",{\"1\":{\"367\":1}}],[\"解决方法\",{\"1\":{\"50\":1}}],[\"解惑\",{\"0\":{\"20\":1}}],[\"原因\",{\"1\":{\"49\":1}}],[\"但是强制返回float类型\",{\"0\":{\"1046\":1},\"1\":{\"1055\":1,\"1057\":1,\"1059\":1,\"1061\":1,\"1063\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"但是强制返回int类型\",{\"0\":{\"1027\":1},\"1\":{\"1036\":1,\"1038\":1,\"1040\":1,\"1042\":1,\"1044\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"但是依赖微软的\",{\"1\":{\"341\":1}}],[\"但不会时时更新最新的区块\",{\"1\":{\"619\":1}}],[\"但请一定要在云主机设置安全的访问策略\",{\"1\":{\"348\":1}}],[\"但会暂时造成无法通过\",{\"1\":{\"324\":1}}],[\"但可能会影响使用体验\",{\"1\":{\"62\":1}}],[\"但可能影响经济系统运行\",{\"1\":{\"47\":1}}],[\"但只要命令重载不同\",{\"1\":{\"60\":1}}],[\"但仍需注意以下几点\",{\"1\":{\"58\":1}}],[\"但由于\",{\"1\":{\"56\":1}}],[\"但绝不是最无脑的逻辑\",{\"1\":{\"31\":1}}],[\"触发的报错\",{\"1\":{\"47\":1,\"48\":1}}],[\"此功能需要同时开启\",{\"1\":{\"619\":1}}],[\"此栏列举了各模块的使用方法\",{\"1\":{\"432\":1}}],[\"此方法与逝去的\",{\"1\":{\"339\":1}}],[\"此文件可删除\",{\"1\":{\"324\":1,\"327\":1}}],[\"此为插件端启动程序\",{\"1\":{\"367\":1}}],[\"此为\",{\"1\":{\"48\":1}}],[\"此非\",{\"1\":{\"47\":1}}],[\"此外\",{\"1\":{\"27\":1}}],[\"quietconsole\",{\"1\":{\"731\":1}}],[\"questions\",{\"0\":{\"24\":1}}],[\"qqgroup\",{\"1\":{\"46\":1}}],[\"permissiongroupid\",{\"1\":{\"1988\":1,\"1992\":1,\"1994\":2,\"1996\":1,\"1998\":1,\"2000\":1,\"2007\":1,\"2011\":1,\"2013\":2,\"2015\":1,\"2017\":1,\"2019\":1,\"2026\":1,\"2032\":1,\"2034\":2,\"2036\":1,\"2038\":1,\"2040\":1,\"2047\":1,\"2053\":1,\"2055\":2,\"2057\":1,\"2059\":1,\"2061\":1,\"2386\":4,\"2391\":8,\"2396\":8,\"2401\":12,\"2406\":8}}],[\"permissionid\",{\"1\":{\"1765\":1,\"1779\":1,\"1781\":2,\"1783\":1,\"1785\":1,\"1787\":1,\"1792\":1,\"1806\":1,\"1808\":2,\"1810\":1,\"1812\":1,\"1814\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"permissionid参考getlandpermissionbypos返回的key\",{\"0\":{\"1762\":1,\"1789\":1},\"1\":{\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"public\",{\"1\":{\"2391\":85,\"2396\":86,\"2406\":85}}],[\"punishreason\",{\"1\":{\"1235\":1,\"1243\":1,\"2401\":3}}],[\"punishlevel\",{\"1\":{\"1233\":1,\"1243\":1,\"2401\":3}}],[\"pull\",{\"1\":{\"258\":1}}],[\"pullrequest\",{\"1\":{\"79\":1}}],[\"pc\",{\"1\":{\"666\":1}}],[\"pcarrowhit\",{\"1\":{\"583\":1,\"678\":1}}],[\"pcaoecloud\",{\"1\":{\"583\":1,\"678\":1}}],[\"pcsplashpotion\",{\"1\":{\"583\":1,\"678\":1}}],[\"pcimpactdamage\",{\"1\":{\"583\":1,\"678\":1}}],[\"pvp\",{\"0\":{\"676\":1},\"1\":{\"479\":1,\"680\":2,\"682\":1}}],[\"pvpmanager\",{\"0\":{\"676\":1},\"1\":{\"479\":1,\"678\":1}}],[\"popup\",{\"0\":{\"674\":1},\"1\":{\"445\":1}}],[\"port\",{\"1\":{\"346\":1,\"533\":3,\"720\":1}}],[\"position\",{\"1\":{\"170\":1}}],[\"pos\",{\"1\":{\"169\":1}}],[\"png设置新的地址\",{\"1\":{\"668\":1}}],[\"png导入图片\",{\"1\":{\"666\":1}}],[\"png图片\",{\"1\":{\"666\":1}}],[\"png从桌面的xxx\",{\"1\":{\"666\":1}}],[\"png从本地路径导入xxx\",{\"1\":{\"666\":1}}],[\"png从网址导入图片\",{\"1\":{\"666\":1}}],[\"png\",{\"1\":{\"302\":1,\"720\":1}}],[\"param\",{\"1\":{\"2401\":261}}],[\"parse\",{\"1\":{\"2376\":1}}],[\"particlesgraphics\",{\"0\":{\"2222\":1,\"2223\":1,\"2258\":1},\"1\":{\"2249\":3,\"2251\":3,\"2253\":3,\"2255\":3,\"2257\":2,\"2290\":3,\"2292\":3,\"2294\":3,\"2296\":3,\"2298\":2,\"2386\":4,\"2389\":4,\"2391\":7,\"2394\":4,\"2396\":7,\"2399\":4,\"2401\":5,\"2404\":4,\"2406\":7}}],[\"path=\",{\"1\":{\"2365\":2,\"2371\":2,\"2376\":2,\"2380\":2}}],[\"pages\",{\"1\":{\"504\":1,\"632\":1}}],[\"packmanager\",{\"0\":{\"640\":1},\"1\":{\"441\":1,\"642\":1}}],[\"package\",{\"1\":{\"313\":1}}],[\"pack\",{\"1\":{\"295\":1,\"302\":1,\"645\":1,\"646\":1,\"654\":1,\"655\":1}}],[\"packs\",{\"1\":{\"291\":2,\"298\":1,\"299\":1,\"645\":1,\"646\":1}}],[\"papi\",{\"1\":{\"124\":1,\"126\":2,\"127\":1,\"233\":1}}],[\"private\",{\"1\":{\"2391\":72,\"2396\":72,\"2406\":72}}],[\"price3d\",{\"1\":{\"583\":1}}],[\"price2d\",{\"1\":{\"583\":1}}],[\"preservechathistory\",{\"1\":{\"720\":1}}],[\"preventdestroyex\",{\"1\":{\"583\":1}}],[\"pr\",{\"1\":{\"259\":1,\"673\":1,\"675\":1,\"691\":1}}],[\"projectileignite\",{\"1\":{\"678\":1}}],[\"projectiledousefire\",{\"1\":{\"678\":1}}],[\"projectilecatchfire\",{\"1\":{\"678\":1}}],[\"protect\",{\"1\":{\"482\":1}}],[\"protocolversion\",{\"1\":{\"107\":1}}],[\"protocol\",{\"1\":{\"106\":1,\"107\":2}}],[\"province\",{\"1\":{\"188\":1,\"2141\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2376\":2,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"picture\",{\"1\":{\"666\":3,\"667\":1,\"668\":1,\"671\":1}}],[\"pictureloader\",{\"0\":{\"660\":1},\"1\":{\"442\":1,\"662\":1}}],[\"pictures\",{\"1\":{\"304\":1}}],[\"ping\",{\"1\":{\"152\":1,\"504\":1,\"507\":1,\"2371\":1,\"2373\":1}}],[\"pixelfaramitaluminouspolymerizationres\",{\"1\":{\"336\":1}}],[\"pixelfaramitaluminouspolymerization\",{\"1\":{\"68\":1,\"247\":1,\"282\":1,\"353\":1,\"398\":1,\"410\":1,\"423\":1,\"541\":1,\"645\":1,\"646\":1,\"654\":1,\"655\":1,\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"plugin\",{\"1\":{\"362\":2}}],[\"plugins等数据\",{\"1\":{\"414\":1,\"427\":1}}],[\"plugins\",{\"1\":{\"51\":1,\"68\":1,\"247\":1,\"282\":1,\"392\":1,\"398\":1,\"410\":1,\"412\":1,\"423\":1,\"425\":1,\"498\":1,\"541\":1,\"645\":1,\"646\":1,\"654\":1,\"655\":1,\"2370\":1}}],[\"playerxuid\",{\"1\":{\"740\":1,\"746\":1,\"748\":2,\"750\":1,\"752\":1,\"754\":1,\"759\":1,\"765\":1,\"767\":2,\"769\":1,\"771\":1,\"773\":1,\"778\":1,\"784\":1,\"786\":2,\"788\":1,\"790\":1,\"792\":1,\"797\":1,\"803\":1,\"805\":2,\"807\":1,\"809\":1,\"811\":1,\"816\":1,\"820\":1,\"822\":2,\"824\":1,\"826\":1,\"828\":1,\"833\":1,\"837\":1,\"839\":2,\"841\":1,\"843\":1,\"845\":1,\"850\":1,\"854\":1,\"856\":2,\"858\":1,\"860\":1,\"862\":1,\"867\":1,\"871\":1,\"873\":2,\"875\":1,\"877\":1,\"879\":1,\"904\":1,\"910\":1,\"912\":2,\"914\":1,\"916\":1,\"918\":1,\"923\":1,\"931\":1,\"933\":2,\"935\":1,\"937\":1,\"939\":1,\"944\":1,\"950\":1,\"952\":2,\"954\":1,\"956\":1,\"958\":1,\"964\":1,\"976\":1,\"978\":2,\"980\":1,\"982\":1,\"984\":1,\"989\":1,\"995\":1,\"997\":2,\"999\":1,\"1001\":1,\"1003\":1,\"1009\":1,\"1017\":1,\"1019\":2,\"1021\":1,\"1023\":1,\"1025\":1,\"1030\":1,\"1036\":1,\"1038\":2,\"1040\":1,\"1042\":1,\"1044\":1,\"1049\":1,\"1055\":1,\"1057\":2,\"1059\":1,\"1061\":1,\"1063\":1,\"1068\":1,\"1074\":1,\"1076\":2,\"1078\":1,\"1080\":1,\"1082\":1,\"1125\":1,\"1131\":1,\"1133\":2,\"1135\":1,\"1137\":1,\"1139\":1,\"1146\":1,\"1154\":1,\"1156\":2,\"1158\":1,\"1160\":1,\"1162\":1,\"1237\":1,\"1243\":1,\"1621\":1,\"1625\":1,\"1627\":2,\"1629\":1,\"1631\":1,\"1633\":1,\"1652\":1,\"1656\":1,\"1658\":2,\"1660\":1,\"1662\":1,\"1664\":1,\"1723\":1,\"1727\":1,\"1729\":2,\"1731\":1,\"1733\":1,\"1735\":1,\"1748\":1,\"1752\":1,\"1754\":2,\"1756\":1,\"1758\":1,\"1760\":1,\"1775\":1,\"1779\":1,\"1781\":2,\"1783\":1,\"1785\":1,\"1787\":1,\"1802\":1,\"1806\":1,\"1808\":2,\"1810\":1,\"1812\":1,\"1814\":1,\"1827\":1,\"1831\":1,\"1833\":2,\"1835\":1,\"1837\":1,\"1839\":1,\"1852\":1,\"1856\":1,\"1858\":2,\"1860\":1,\"1862\":1,\"1864\":1,\"1877\":1,\"1881\":1,\"1883\":2,\"1885\":1,\"1887\":1,\"1889\":1,\"1902\":1,\"1906\":1,\"1908\":2,\"1910\":1,\"1912\":1,\"1914\":1,\"1927\":1,\"1931\":1,\"1933\":2,\"1935\":1,\"1937\":1,\"1939\":1,\"1952\":1,\"1956\":1,\"1958\":2,\"1960\":1,\"1962\":1,\"1964\":1,\"1969\":1,\"1973\":1,\"1975\":2,\"1977\":1,\"1979\":1,\"1981\":1,\"1986\":1,\"1992\":1,\"1994\":2,\"1996\":1,\"1998\":1,\"2000\":1,\"2005\":1,\"2011\":1,\"2013\":2,\"2015\":1,\"2017\":1,\"2019\":1,\"2024\":1,\"2032\":1,\"2034\":2,\"2036\":1,\"2038\":1,\"2040\":1,\"2045\":1,\"2053\":1,\"2055\":2,\"2057\":1,\"2059\":1,\"2061\":1,\"2066\":1,\"2070\":1,\"2072\":2,\"2074\":1,\"2076\":1,\"2078\":1,\"2083\":1,\"2087\":1,\"2089\":2,\"2091\":1,\"2093\":1,\"2095\":1,\"2167\":1,\"2171\":1,\"2173\":2,\"2175\":1,\"2177\":1,\"2179\":1,\"2184\":1,\"2192\":1,\"2194\":2,\"2196\":1,\"2198\":1,\"2200\":1,\"2205\":1,\"2213\":1,\"2215\":2,\"2217\":1,\"2219\":1,\"2221\":1,\"2227\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2262\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2310\":1,\"2314\":1,\"2316\":2,\"2318\":1,\"2320\":1,\"2322\":1,\"2327\":1,\"2333\":1,\"2335\":2,\"2337\":1,\"2339\":1,\"2341\":1,\"2347\":1,\"2351\":1,\"2353\":2,\"2355\":1,\"2357\":1,\"2359\":1,\"2386\":46,\"2391\":92,\"2396\":92,\"2401\":141,\"2406\":92}}],[\"playersettingenable\",{\"1\":{\"699\":1}}],[\"playerinteractentity\",{\"1\":{\"602\":1}}],[\"playerinteractblock\",{\"1\":{\"602\":1}}],[\"playerplaceblock\",{\"1\":{\"602\":1}}],[\"playerpickupitem\",{\"1\":{\"602\":1}}],[\"playerdestroyblock\",{\"1\":{\"602\":1}}],[\"playerdropitem\",{\"1\":{\"602\":1}}],[\"playerdie\",{\"1\":{\"583\":1}}],[\"playerattack\",{\"1\":{\"602\":1}}],[\"playeropencontainer\",{\"1\":{\"602\":1}}],[\"playerrespawn\",{\"1\":{\"602\":1}}],[\"playerchangedimension\",{\"1\":{\"602\":1}}],[\"playerchat\",{\"1\":{\"602\":1}}],[\"playercmd\",{\"1\":{\"602\":1}}],[\"playercount\",{\"1\":{\"100\":1,\"632\":1}}],[\"playerlangxuid\",{\"1\":{\"1148\":1,\"1154\":1,\"1156\":2,\"1158\":1,\"1160\":1,\"1162\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"playerlangxuid用于格式化的语言获取\",{\"0\":{\"1141\":1},\"1\":{\"1154\":1,\"1156\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"playerleft\",{\"1\":{\"602\":1}}],[\"playerlist\",{\"0\":{\"672\":1},\"1\":{\"446\":1}}],[\"playerjoin\",{\"1\":{\"602\":1}}],[\"player\",{\"1\":{\"230\":1,\"546\":1,\"548\":1,\"694\":1,\"1238\":1,\"2365\":2}}],[\"place\",{\"1\":{\"220\":1,\"694\":1}}],[\"placeholderapi\",{\"1\":{\"125\":1}}],[\"placeholder\",{\"1\":{\"125\":1}}],[\"planet\",{\"1\":{\"46\":1}}],[\"pfshop\",{\"1\":{\"476\":1}}],[\"pfbridge\",{\"1\":{\"457\":1}}],[\"pf\",{\"1\":{\"291\":1,\"309\":1,\"2365\":1,\"2371\":1,\"2373\":1,\"2376\":1,\"2380\":1}}],[\"pfc\",{\"1\":{\"73\":1}}],[\"pflp在获取ip位置的时候会调用这个事件\",{\"1\":{\"2376\":1}}],[\"pflp\",{\"0\":{\"389\":1},\"1\":{\"47\":1,\"235\":1,\"391\":1,\"542\":1,\"746\":1,\"748\":1,\"750\":1,\"752\":1,\"754\":1,\"765\":1,\"767\":1,\"769\":1,\"771\":1,\"773\":1,\"784\":1,\"786\":1,\"788\":1,\"790\":1,\"792\":1,\"803\":1,\"805\":1,\"807\":1,\"809\":1,\"811\":1,\"820\":1,\"822\":1,\"824\":1,\"826\":1,\"828\":1,\"837\":1,\"839\":1,\"841\":1,\"843\":1,\"845\":1,\"854\":1,\"856\":1,\"858\":1,\"860\":1,\"862\":1,\"871\":1,\"873\":1,\"875\":1,\"877\":1,\"879\":1,\"891\":1,\"893\":1,\"895\":1,\"897\":1,\"899\":1,\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"918\":1,\"931\":1,\"933\":1,\"935\":1,\"937\":1,\"939\":1,\"950\":1,\"952\":1,\"954\":1,\"956\":1,\"958\":1,\"976\":1,\"978\":1,\"980\":1,\"982\":1,\"984\":1,\"995\":1,\"997\":1,\"999\":1,\"1001\":1,\"1003\":1,\"1017\":1,\"1019\":1,\"1021\":1,\"1023\":1,\"1025\":1,\"1036\":1,\"1038\":1,\"1040\":1,\"1042\":1,\"1044\":1,\"1055\":1,\"1057\":1,\"1059\":1,\"1061\":1,\"1063\":1,\"1074\":1,\"1076\":1,\"1078\":1,\"1080\":1,\"1082\":1,\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"1110\":1,\"1112\":1,\"1114\":1,\"1116\":1,\"1118\":1,\"1131\":1,\"1133\":1,\"1135\":1,\"1137\":1,\"1139\":1,\"1154\":1,\"1156\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"1173\":1,\"1175\":1,\"1177\":1,\"1179\":1,\"1181\":1,\"1191\":1,\"1193\":1,\"1195\":1,\"1197\":1,\"1199\":1,\"1205\":1,\"1207\":1,\"1209\":1,\"1211\":1,\"1213\":1,\"1219\":1,\"1221\":1,\"1223\":1,\"1225\":1,\"1227\":1,\"1243\":1,\"1265\":1,\"1267\":1,\"1269\":1,\"1271\":1,\"1273\":1,\"1294\":1,\"1296\":1,\"1298\":1,\"1300\":1,\"1302\":1,\"1317\":1,\"1319\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1340\":1,\"1342\":1,\"1344\":1,\"1346\":1,\"1348\":1,\"1369\":1,\"1371\":1,\"1373\":1,\"1375\":1,\"1377\":1,\"1398\":1,\"1400\":1,\"1402\":1,\"1404\":1,\"1406\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1427\":1,\"1429\":1,\"1444\":1,\"1446\":1,\"1448\":1,\"1450\":1,\"1452\":1,\"1473\":1,\"1475\":1,\"1477\":1,\"1479\":1,\"1481\":1,\"1502\":1,\"1504\":1,\"1506\":1,\"1508\":1,\"1510\":1,\"1525\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1533\":1,\"1548\":1,\"1550\":1,\"1552\":1,\"1554\":1,\"1556\":1,\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"1625\":1,\"1627\":1,\"1629\":1,\"1631\":1,\"1633\":1,\"1656\":1,\"1658\":1,\"1660\":1,\"1662\":1,\"1664\":1,\"1679\":1,\"1681\":1,\"1683\":1,\"1685\":1,\"1687\":1,\"1702\":1,\"1704\":1,\"1706\":1,\"1708\":1,\"1710\":1,\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"1831\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1856\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"1973\":1,\"1975\":1,\"1977\":1,\"1979\":1,\"1981\":1,\"1992\":1,\"1994\":1,\"1996\":1,\"1998\":1,\"2000\":1,\"2011\":1,\"2013\":1,\"2015\":1,\"2017\":1,\"2019\":1,\"2032\":1,\"2034\":1,\"2036\":1,\"2038\":1,\"2040\":1,\"2053\":1,\"2055\":1,\"2057\":1,\"2059\":1,\"2061\":1,\"2070\":1,\"2072\":1,\"2074\":1,\"2076\":1,\"2078\":1,\"2087\":1,\"2089\":1,\"2091\":1,\"2093\":1,\"2095\":1,\"2109\":1,\"2111\":1,\"2113\":1,\"2115\":1,\"2117\":1,\"2124\":1,\"2126\":1,\"2128\":1,\"2130\":1,\"2132\":1,\"2153\":1,\"2155\":1,\"2157\":1,\"2159\":1,\"2161\":1,\"2171\":1,\"2173\":1,\"2175\":1,\"2177\":1,\"2179\":1,\"2192\":1,\"2194\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2213\":1,\"2215\":1,\"2217\":1,\"2219\":1,\"2221\":1,\"2249\":1,\"2251\":1,\"2253\":1,\"2255\":1,\"2257\":1,\"2290\":1,\"2292\":1,\"2294\":1,\"2296\":1,\"2298\":1,\"2314\":1,\"2316\":1,\"2318\":1,\"2320\":1,\"2322\":1,\"2333\":1,\"2335\":1,\"2337\":1,\"2339\":1,\"2341\":1,\"2351\":1,\"2353\":1,\"2355\":1,\"2357\":1,\"2359\":1,\"2372\":1,\"2386\":72,\"2389\":72,\"2391\":73,\"2394\":72,\"2396\":73,\"2399\":73,\"2401\":74,\"2404\":72,\"2406\":73}}],[\"pfessentials\",{\"0\":{\"25\":1,\"261\":1},\"1\":{\"27\":1,\"262\":1,\"264\":1,\"265\":1,\"268\":1,\"271\":1,\"274\":1,\"276\":1,\"278\":1,\"339\":1}}],[\"3d\",{\"1\":{\"2365\":1}}],[\"3d领地最小面积\",{\"1\":{\"583\":1}}],[\"3d领地最大面积\",{\"1\":{\"583\":1}}],[\"3d领地回收价格\",{\"1\":{\"583\":1}}],[\"3d领地价格\",{\"1\":{\"583\":1}}],[\"30\",{\"1\":{\"662\":1}}],[\"3000\",{\"1\":{\"583\":1}}],[\"3play\",{\"1\":{\"625\":1}}],[\"3\",{\"0\":{\"368\":1},\"1\":{\"46\":1,\"476\":1,\"513\":2,\"583\":1,\"594\":2,\"625\":2}}],[\"7000\",{\"1\":{\"533\":1}}],[\"7ping\",{\"1\":{\"504\":1}}],[\"7|\",{\"1\":{\"504\":1}}],[\"7运行时\",{\"1\":{\"363\":1}}],[\"7\",{\"0\":{\"370\":1,\"373\":1},\"1\":{\"46\":1,\"55\":1,\"56\":2,\"363\":1,\"371\":1,\"372\":1,\"507\":1,\"594\":2,\"625\":10}}],[\"multifacespreader\",{\"1\":{\"583\":1}}],[\"msg=\",{\"1\":{\"594\":1}}],[\"msg\",{\"1\":{\"507\":1}}],[\"ms\",{\"1\":{\"507\":1}}],[\"mspt\",{\"1\":{\"97\":1,\"98\":1,\"99\":1,\"241\":1}}],[\"mc\",{\"1\":{\"2365\":2,\"2371\":1,\"2376\":2,\"2380\":1,\"2384\":1}}],[\"mcws\",{\"1\":{\"731\":1}}],[\"mcworldfilename\",{\"1\":{\"498\":1}}],[\"mcworld\",{\"1\":{\"498\":1}}],[\"mcfunction文件\",{\"1\":{\"653\":1}}],[\"mcpack\",{\"1\":{\"649\":1}}],[\"mcpf\",{\"1\":{\"336\":1}}],[\"mcaddon或\",{\"1\":{\"649\":1}}],[\"mc19132\",{\"1\":{\"533\":1}}],[\"minsize3d\",{\"1\":{\"583\":1}}],[\"minsize2d\",{\"1\":{\"583\":1}}],[\"min\",{\"1\":{\"561\":1,\"565\":1}}],[\"minecraft\",{\"1\":{\"248\":1,\"313\":1,\"314\":1,\"359\":1}}],[\"minebbs\",{\"0\":{\"1\":1},\"1\":{\"18\":1}}],[\"microsoft\",{\"1\":{\"342\":2,\"371\":1}}],[\"mainmenu\",{\"1\":{\"625\":1}}],[\"maximumownlands\",{\"1\":{\"583\":1}}],[\"maxsize3d\",{\"1\":{\"583\":1}}],[\"maxsize2d\",{\"1\":{\"583\":1}}],[\"maxhomecount\",{\"1\":{\"578\":1}}],[\"max\",{\"1\":{\"561\":1,\"563\":1}}],[\"macos\",{\"1\":{\"380\":1}}],[\"map\",{\"1\":{\"510\":1}}],[\"mapdata\",{\"1\":{\"331\":1}}],[\"mapservice\",{\"0\":{\"615\":1},\"1\":{\"440\":1,\"617\":1,\"722\":1}}],[\"maps\",{\"1\":{\"315\":1}}],[\"manifest\",{\"1\":{\"301\":1,\"645\":1,\"646\":1}}],[\"menu即可打开菜单\",{\"1\":{\"625\":1}}],[\"menu\",{\"0\":{\"620\":1},\"1\":{\"286\":1,\"458\":1,\"623\":1,\"624\":1,\"625\":2}}],[\"message\",{\"1\":{\"208\":1}}],[\"mm\",{\"1\":{\"93\":2,\"240\":2,\"498\":6,\"507\":1,\"602\":1}}],[\"mobdie\",{\"1\":{\"602\":1}}],[\"motd\",{\"0\":{\"516\":1,\"630\":1},\"1\":{\"448\":1,\"477\":1,\"478\":5,\"525\":2,\"632\":1}}],[\"mod\",{\"0\":{\"395\":1},\"1\":{\"367\":1}}],[\"module\",{\"1\":{\"2395\":1,\"2396\":14,\"2405\":1,\"2406\":2}}],[\"modules\",{\"1\":{\"291\":1,\"308\":1,\"2365\":1,\"2371\":1,\"2376\":1,\"2380\":1}}],[\"moduleenabled\",{\"1\":{\"73\":1,\"346\":1,\"402\":1,\"493\":1,\"498\":1,\"504\":1,\"507\":1,\"510\":1,\"513\":1,\"518\":1,\"528\":1,\"561\":1,\"573\":1,\"578\":1,\"583\":1,\"590\":1,\"602\":1,\"617\":1,\"623\":1,\"629\":1,\"632\":1,\"635\":1,\"662\":1,\"678\":1,\"685\":1,\"694\":1,\"699\":1,\"706\":1,\"711\":1,\"720\":1,\"731\":1}}],[\"moduleenabld\",{\"1\":{\"71\":1}}],[\"moneyapi\",{\"1\":{\"628\":1}}],[\"moneyextensions\",{\"1\":{\"470\":1,\"629\":1}}],[\"money命令可与llmoney注册的相关命令同时使用\",{\"1\":{\"61\":1}}],[\"money\",{\"0\":{\"45\":1,\"626\":1,\"2162\":1,\"2163\":1,\"2180\":1,\"2201\":1},\"1\":{\"143\":1,\"148\":1,\"2171\":3,\"2173\":3,\"2175\":3,\"2177\":3,\"2179\":2,\"2192\":3,\"2194\":3,\"2196\":3,\"2198\":3,\"2200\":2,\"2213\":3,\"2215\":3,\"2217\":3,\"2219\":3,\"2221\":2,\"2386\":6,\"2389\":6,\"2391\":10,\"2394\":6,\"2396\":10,\"2399\":6,\"2401\":7,\"2404\":6,\"2406\":10}}],[\"a执行land\",{\"1\":{\"2365\":1}}],[\"area\",{\"1\":{\"2145\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"arm64\",{\"1\":{\"379\":2,\"381\":1,\"382\":1,\"384\":1,\"385\":1}}],[\"arm32\",{\"1\":{\"379\":2}}],[\"addmessage\",{\"1\":{\"2365\":1}}],[\"addplayerpermissiongroup\",{\"0\":{\"2041\":1},\"1\":{\"2053\":3,\"2055\":3,\"2057\":3,\"2059\":3,\"2061\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"add\",{\"0\":{\"960\":1,\"2180\":1},\"1\":{\"976\":3,\"978\":3,\"980\":3,\"982\":3,\"984\":3,\"2192\":3,\"2194\":3,\"2196\":3,\"2198\":3,\"2200\":3,\"2371\":1,\"2373\":1,\"2386\":4,\"2389\":4,\"2391\":8,\"2394\":4,\"2396\":8,\"2399\":4,\"2401\":6,\"2404\":4,\"2406\":8}}],[\"addr\",{\"1\":{\"533\":1}}],[\"address\",{\"1\":{\"182\":1}}],[\"action\",{\"1\":{\"752\":1,\"771\":1,\"790\":1,\"809\":1,\"897\":1,\"937\":1,\"956\":1,\"1001\":1,\"1225\":1,\"2159\":1,\"2198\":1,\"2219\":1,\"2255\":1,\"2296\":1,\"2339\":1,\"2404\":15,\"2406\":30}}],[\"actions\",{\"1\":{\"625\":4}}],[\"auto\",{\"1\":{\"748\":1,\"767\":1,\"786\":1,\"805\":1,\"822\":2,\"839\":2,\"856\":2,\"873\":2,\"893\":1,\"912\":2,\"933\":1,\"952\":1,\"978\":2,\"997\":1,\"1019\":2,\"1038\":2,\"1057\":2,\"1076\":2,\"1095\":2,\"1112\":2,\"1133\":2,\"1156\":2,\"1175\":2,\"1193\":2,\"1207\":2,\"1221\":1,\"1267\":2,\"1296\":2,\"1319\":2,\"1342\":2,\"1371\":2,\"1400\":2,\"1423\":2,\"1446\":2,\"1475\":2,\"1504\":2,\"1527\":2,\"1550\":2,\"1575\":2,\"1600\":2,\"1627\":2,\"1658\":2,\"1681\":2,\"1704\":2,\"1729\":2,\"1754\":2,\"1781\":2,\"1808\":2,\"1833\":2,\"1858\":2,\"1883\":2,\"1908\":2,\"1933\":2,\"1958\":2,\"1975\":2,\"1994\":2,\"2013\":2,\"2034\":2,\"2055\":2,\"2072\":2,\"2089\":2,\"2111\":2,\"2126\":2,\"2155\":1,\"2173\":2,\"2194\":1,\"2215\":1,\"2251\":1,\"2292\":1,\"2316\":2,\"2335\":1,\"2353\":2,\"2386\":72}}],[\"autobackup\",{\"1\":{\"498\":1}}],[\"apr\",{\"1\":{\"734\":1}}],[\"api\",{\"0\":{\"45\":1,\"729\":1,\"730\":1},\"1\":{\"236\":1,\"456\":1,\"2365\":2,\"2371\":1,\"2373\":2,\"2376\":3,\"2380\":2}}],[\"absorption\",{\"1\":{\"625\":1}}],[\"a保护家园\",{\"1\":{\"625\":1}}],[\"a>`\",{\"1\":{\"2376\":1,\"2384\":1}}],[\"a>\",{\"1\":{\"507\":1}}],[\"a<\",{\"1\":{\"507\":1}}],[\"a\",{\"1\":{\"504\":1,\"513\":2,\"594\":2,\"2365\":1,\"2371\":2,\"2373\":1,\"2376\":1,\"2380\":1}}],[\"a↑\",{\"1\":{\"504\":1}}],[\"alpha\",{\"1\":{\"2245\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2286\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"alpine\",{\"1\":{\"379\":3}}],[\"allowtpatoself\",{\"1\":{\"699\":1}}],[\"alreadyloginin\",{\"1\":{\"513\":1}}],[\"al\",{\"1\":{\"504\":1}}],[\"attackecho\",{\"0\":{\"491\":1},\"1\":{\"468\":1,\"493\":1}}],[\"any\",{\"1\":{\"2401\":1}}],[\"an\",{\"1\":{\"362\":1}}],[\"avatar\",{\"1\":{\"333\":1}}],[\"avgping\",{\"1\":{\"154\":1}}],[\"as\",{\"1\":{\"2406\":386}}],[\"as的方式以玩家身份执行\",{\"1\":{\"625\":1}}],[\"asp\",{\"1\":{\"388\":1}}],[\"asyncteleportwaittime\",{\"1\":{\"73\":1}}],[\"asked\",{\"0\":{\"24\":1}}],[\"ts\",{\"1\":{\"2365\":2,\"2371\":2,\"2376\":2,\"2380\":2}}],[\"tasks\",{\"1\":{\"685\":1}}],[\"task\",{\"1\":{\"625\":1}}],[\"targetfolder\",{\"1\":{\"498\":1}}],[\"title\",{\"1\":{\"625\":1}}],[\"tick\",{\"1\":{\"573\":1}}],[\"timeout\",{\"1\":{\"699\":1}}],[\"time\",{\"1\":{\"90\":1,\"93\":1,\"215\":1,\"240\":1,\"498\":3,\"602\":1,\"694\":1,\"2243\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2284\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"this\",{\"1\":{\"2401\":73}}],[\"thickness\",{\"1\":{\"2241\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2282\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"throw\",{\"1\":{\"2376\":1}}],[\"throws\",{\"1\":{\"362\":1}}],[\"theendredstonetps\",{\"1\":{\"573\":1}}],[\"the\",{\"1\":{\"73\":1}}],[\"trygetiplocation\",{\"1\":{\"2376\":1}}],[\"translate\",{\"0\":{\"2097\":1},\"1\":{\"2109\":3,\"2111\":3,\"2113\":3,\"2115\":3,\"2117\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"translation\",{\"1\":{\"330\":1,\"463\":1}}],[\"transferserveronclose\",{\"1\":{\"473\":1}}],[\"true\",{\"1\":{\"73\":3,\"346\":1,\"402\":1,\"493\":3,\"498\":7,\"504\":1,\"507\":2,\"510\":1,\"513\":2,\"518\":2,\"528\":2,\"549\":1,\"561\":1,\"573\":5,\"578\":1,\"583\":31,\"590\":3,\"602\":39,\"617\":1,\"623\":2,\"625\":1,\"629\":1,\"632\":1,\"635\":1,\"642\":1,\"662\":1,\"678\":9,\"685\":1,\"694\":8,\"699\":6,\"706\":1,\"711\":1,\"720\":5,\"731\":1}}],[\"true|false\",{\"1\":{\"71\":1}}],[\"tpmenu\",{\"1\":{\"625\":1}}],[\"tpr\",{\"0\":{\"704\":1},\"1\":{\"438\":1,\"706\":1,\"708\":1}}],[\"tpa\",{\"0\":{\"697\":1,\"2342\":1,\"2343\":1},\"1\":{\"435\":1,\"699\":1,\"2351\":3,\"2353\":3,\"2355\":3,\"2357\":3,\"2359\":2,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"tpaprofiles\",{\"1\":{\"329\":1}}],[\"tps是单位\",{\"1\":{\"573\":1}}],[\"tps\",{\"1\":{\"94\":1,\"95\":1,\"96\":1}}],[\"test\",{\"1\":{\"666\":1}}],[\"textures\",{\"1\":{\"625\":4}}],[\"text\",{\"1\":{\"625\":4,\"972\":1,\"976\":1,\"978\":2,\"980\":1,\"982\":1,\"984\":1,\"2105\":1,\"2109\":1,\"2111\":2,\"2113\":1,\"2115\":1,\"2117\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"temp\",{\"1\":{\"296\":1}}],[\"teleportimmunetime\",{\"1\":{\"699\":1}}],[\"teleporttospawnpointiferror\",{\"1\":{\"73\":1}}],[\"telegram\",{\"1\":{\"37\":1}}],[\"tmessential\",{\"1\":{\"274\":1}}],[\"tmesstntial\",{\"0\":{\"273\":1}}],[\"type\",{\"1\":{\"208\":1,\"533\":1,\"625\":4}}],[\"tolanguage\",{\"1\":{\"2103\":1,\"2109\":1,\"2111\":2,\"2113\":1,\"2115\":1,\"2117\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"token\",{\"1\":{\"731\":1}}],[\"toggles\",{\"1\":{\"602\":1}}],[\"toasttitle=\",{\"1\":{\"594\":1}}],[\"toastcontent=\",{\"1\":{\"594\":1}}],[\"todo未做\",{\"1\":{\"510\":1}}],[\"todo\",{\"1\":{\"495\":1,\"515\":1,\"596\":1}}],[\"toolbox\",{\"1\":{\"474\":2}}],[\"totalsend\",{\"1\":{\"198\":1}}],[\"totalsent\",{\"1\":{\"198\":1}}],[\"totalreceive\",{\"1\":{\"195\":1}}],[\"totalreceived\",{\"1\":{\"195\":1}}],[\"totalentities\",{\"1\":{\"110\":1}}],[\"total\",{\"1\":{\"110\":2,\"118\":1,\"119\":1,\"194\":1,\"195\":1,\"197\":1,\"198\":1}}],[\"to\",{\"0\":{\"45\":1},\"1\":{\"362\":1}}],[\"fmt\",{\"1\":{\"2371\":1,\"2373\":1}}],[\"feedback\",{\"1\":{\"927\":1,\"931\":1,\"933\":2,\"935\":1,\"937\":1,\"939\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"function\",{\"1\":{\"2406\":186}}],[\"functions\",{\"1\":{\"654\":1,\"720\":1}}],[\"func\",{\"1\":{\"826\":1,\"843\":1,\"860\":1,\"877\":1,\"916\":1,\"982\":1,\"1023\":1,\"1042\":1,\"1061\":1,\"1080\":1,\"1099\":1,\"1116\":1,\"1137\":1,\"1160\":1,\"1179\":1,\"1197\":1,\"1211\":1,\"1271\":1,\"1300\":1,\"1323\":1,\"1346\":1,\"1375\":1,\"1404\":1,\"1427\":1,\"1450\":1,\"1479\":1,\"1508\":1,\"1531\":1,\"1554\":1,\"1579\":1,\"1604\":1,\"1631\":1,\"1662\":1,\"1685\":1,\"1708\":1,\"1733\":1,\"1758\":1,\"1785\":1,\"1812\":1,\"1837\":1,\"1862\":1,\"1887\":1,\"1912\":1,\"1937\":1,\"1962\":1,\"1979\":1,\"1998\":1,\"2017\":1,\"2038\":1,\"2059\":1,\"2076\":1,\"2093\":1,\"2115\":1,\"2130\":1,\"2177\":1,\"2320\":1,\"2357\":1,\"2404\":57,\"2406\":114}}],[\"f\",{\"0\":{\"2392\":1},\"1\":{\"753\":1,\"772\":1,\"791\":1,\"810\":1,\"827\":1,\"844\":1,\"861\":1,\"878\":1,\"898\":1,\"917\":1,\"938\":1,\"957\":1,\"983\":1,\"1002\":1,\"1024\":1,\"1043\":1,\"1062\":1,\"1081\":1,\"1100\":1,\"1117\":1,\"1138\":1,\"1161\":1,\"1180\":1,\"1198\":1,\"1212\":1,\"1226\":1,\"1272\":1,\"1301\":1,\"1324\":1,\"1347\":1,\"1376\":1,\"1405\":1,\"1428\":1,\"1451\":1,\"1480\":1,\"1509\":1,\"1532\":1,\"1555\":1,\"1580\":1,\"1605\":1,\"1632\":1,\"1663\":1,\"1686\":1,\"1709\":1,\"1734\":1,\"1759\":1,\"1786\":1,\"1813\":1,\"1838\":1,\"1863\":1,\"1888\":1,\"1913\":1,\"1938\":1,\"1963\":1,\"1980\":1,\"1999\":1,\"2018\":1,\"2039\":1,\"2060\":1,\"2077\":1,\"2094\":1,\"2116\":1,\"2131\":1,\"2160\":1,\"2178\":1,\"2199\":1,\"2220\":1,\"2256\":1,\"2297\":1,\"2321\":1,\"2340\":1,\"2358\":1,\"2393\":1,\"2395\":2}}],[\"float>>\",{\"1\":{\"1059\":1,\"1063\":1,\"2253\":1,\"2257\":1,\"2294\":1,\"2298\":1,\"2389\":3,\"2391\":6,\"2394\":3,\"2396\":3}}],[\"float\",{\"0\":{\"1246\":1,\"1304\":1,\"1350\":1,\"1408\":1,\"1454\":1,\"1512\":1,\"1558\":1,\"1666\":1,\"1712\":1,\"1762\":1,\"1816\":1,\"1866\":1},\"1\":{\"967\":1,\"969\":1,\"971\":1,\"978\":3,\"980\":3,\"984\":3,\"1053\":1,\"1055\":1,\"1057\":1,\"1059\":1,\"1061\":1,\"1063\":1,\"1250\":1,\"1252\":1,\"1254\":1,\"1256\":1,\"1258\":1,\"1260\":1,\"1265\":1,\"1267\":7,\"1269\":6,\"1271\":1,\"1273\":6,\"1308\":1,\"1310\":1,\"1312\":1,\"1317\":1,\"1319\":4,\"1321\":3,\"1323\":1,\"1325\":3,\"1354\":1,\"1356\":1,\"1358\":1,\"1360\":1,\"1362\":1,\"1364\":1,\"1369\":1,\"1371\":7,\"1373\":6,\"1375\":1,\"1377\":6,\"1412\":1,\"1414\":1,\"1416\":1,\"1421\":1,\"1423\":4,\"1425\":3,\"1427\":1,\"1429\":3,\"1458\":1,\"1460\":1,\"1462\":1,\"1464\":1,\"1466\":1,\"1468\":1,\"1473\":1,\"1475\":7,\"1477\":6,\"1479\":1,\"1481\":6,\"1516\":1,\"1518\":1,\"1520\":1,\"1525\":1,\"1527\":4,\"1529\":3,\"1531\":1,\"1533\":3,\"1562\":1,\"1564\":1,\"1566\":1,\"1573\":1,\"1575\":4,\"1577\":3,\"1579\":1,\"1581\":3,\"1670\":1,\"1672\":1,\"1674\":1,\"1679\":1,\"1681\":4,\"1683\":3,\"1685\":1,\"1687\":3,\"1716\":1,\"1718\":1,\"1720\":1,\"1727\":1,\"1729\":4,\"1731\":3,\"1733\":1,\"1735\":3,\"1768\":1,\"1770\":1,\"1772\":1,\"1779\":1,\"1781\":4,\"1783\":4,\"1785\":1,\"1787\":4,\"1820\":1,\"1822\":1,\"1824\":1,\"1831\":1,\"1833\":4,\"1835\":3,\"1837\":1,\"1839\":3,\"1870\":1,\"1872\":1,\"1874\":1,\"1881\":1,\"1883\":4,\"1885\":3,\"1887\":1,\"1889\":3,\"2236\":1,\"2238\":1,\"2240\":1,\"2242\":1,\"2244\":1,\"2246\":1,\"2251\":6,\"2253\":5,\"2257\":5,\"2277\":1,\"2279\":1,\"2281\":1,\"2283\":1,\"2285\":1,\"2287\":1,\"2292\":6,\"2294\":5,\"2298\":5,\"2386\":73,\"2389\":60,\"2391\":168,\"2394\":60,\"2396\":121,\"2399\":13,\"2401\":13,\"2404\":13,\"2406\":14}}],[\"floattext\",{\"0\":{\"959\":1,\"960\":1,\"985\":1},\"1\":{\"323\":1,\"976\":3,\"978\":3,\"980\":3,\"982\":3,\"984\":2,\"995\":3,\"997\":3,\"999\":3,\"1001\":3,\"1003\":2,\"2386\":4,\"2389\":4,\"2391\":7,\"2394\":4,\"2396\":7,\"2399\":4,\"2401\":5,\"2404\":4,\"2406\":7}}],[\"flexible\",{\"1\":{\"666\":1}}],[\"filename\",{\"1\":{\"602\":1}}],[\"fishinghook\",{\"1\":{\"583\":1}}],[\"favicon\",{\"1\":{\"720\":1}}],[\"false为覆盖\",{\"0\":{\"1084\":1},\"1\":{\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"false\",{\"1\":{\"493\":1,\"498\":1,\"625\":5,\"628\":1,\"720\":2,\"731\":2}}],[\"fakelevelname伪造存档名称\",{\"1\":{\"525\":1}}],[\"fakelevelname\",{\"1\":{\"518\":1}}],[\"fakeportipv6伪造\",{\"1\":{\"524\":1}}],[\"fakeportipv6\",{\"1\":{\"518\":1}}],[\"fakeportipv4伪造\",{\"1\":{\"523\":1}}],[\"fakeportipv4\",{\"1\":{\"518\":1}}],[\"fakemaxplayercount伪造最大玩家数量\",{\"1\":{\"522\":1}}],[\"fakemaxplayercount\",{\"1\":{\"518\":1}}],[\"fakemotd\",{\"0\":{\"516\":1},\"1\":{\"477\":1,\"518\":1}}],[\"fakecurrentplayercount伪造当前玩家数量\",{\"1\":{\"521\":1}}],[\"fakecurrentplayercount\",{\"1\":{\"518\":1}}],[\"fakename\",{\"1\":{\"507\":1,\"761\":1,\"765\":1,\"767\":2,\"769\":1,\"771\":1,\"773\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"fakeseed\",{\"1\":{\"451\":1,\"573\":1}}],[\"fail\",{\"0\":{\"45\":1},\"1\":{\"362\":1}}],[\"fork\",{\"1\":{\"734\":1}}],[\"forcedownloadwithoutcovering\",{\"1\":{\"451\":1,\"573\":1}}],[\"for\",{\"1\":{\"359\":1,\"609\":1}}],[\"formatrawstring\",{\"0\":{\"1064\":1},\"1\":{\"1074\":3,\"1076\":3,\"1078\":3,\"1080\":3,\"1082\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"format\",{\"0\":{\"1004\":1,\"1005\":1,\"1026\":1,\"1045\":1,\"1064\":1,\"1083\":1,\"1102\":1,\"1119\":1,\"1140\":1,\"1163\":1},\"1\":{\"242\":1,\"507\":1,\"1013\":1,\"1017\":4,\"1019\":5,\"1021\":4,\"1023\":4,\"1025\":3,\"1036\":3,\"1038\":3,\"1040\":3,\"1042\":3,\"1044\":2,\"1055\":3,\"1057\":3,\"1059\":3,\"1061\":3,\"1063\":2,\"1074\":3,\"1076\":3,\"1078\":3,\"1080\":3,\"1082\":2,\"1093\":3,\"1095\":3,\"1097\":3,\"1099\":3,\"1101\":2,\"1110\":3,\"1112\":3,\"1114\":3,\"1116\":3,\"1118\":2,\"1131\":3,\"1133\":3,\"1135\":3,\"1137\":3,\"1139\":2,\"1154\":3,\"1156\":3,\"1158\":3,\"1160\":3,\"1162\":2,\"1173\":3,\"1175\":3,\"1177\":3,\"1179\":3,\"1181\":2,\"2371\":2,\"2373\":3,\"2386\":19,\"2389\":18,\"2391\":30,\"2394\":18,\"2396\":30,\"2399\":18,\"2401\":22,\"2404\":18,\"2406\":30}}],[\"f1\",{\"1\":{\"241\":1,\"504\":1}}],[\"friend\",{\"1\":{\"2406\":1}}],[\"friendlydisconnect\",{\"0\":{\"511\":1},\"1\":{\"454\":1,\"513\":1}}],[\"frps\",{\"1\":{\"554\":1}}],[\"frp的配置文件\",{\"1\":{\"528\":1}}],[\"frpc2\",{\"1\":{\"528\":2}}],[\"frpconfigs\",{\"1\":{\"528\":1}}],[\"frpclient\",{\"1\":{\"528\":1}}],[\"frpc\",{\"0\":{\"526\":1,\"538\":1},\"1\":{\"481\":1,\"528\":1,\"541\":1,\"542\":1,\"554\":3,\"555\":1}}],[\"frp\",{\"1\":{\"478\":1,\"523\":1,\"531\":1,\"532\":1,\"533\":1,\"551\":1}}],[\"free\",{\"1\":{\"121\":1,\"122\":1}}],[\"frequently\",{\"0\":{\"24\":1}}],[\"fromlanguage\",{\"1\":{\"2101\":1,\"2109\":1,\"2111\":2,\"2113\":1,\"2115\":1,\"2117\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"from\",{\"1\":{\"46\":1,\"734\":1,\"2373\":1}}],[\"framework\",{\"1\":{\"26\":1}}],[\"故仅需修改客户端即可导出链接真实\",{\"1\":{\"554\":1}}],[\"故放置到plugins\",{\"1\":{\"274\":1}}],[\"故导入后\",{\"1\":{\"265\":1}}],[\"故障排查\",{\"0\":{\"44\":1}}],[\"故在性能上有很大优势\",{\"1\":{\"26\":1}}],[\"因为我并不会因为失去用户而有任何损失\",{\"1\":{\"43\":1}}],[\"我这不提供\",{\"1\":{\"459\":1}}],[\"我并不会因此站在道德的制高点指责你\",{\"1\":{\"43\":1}}],[\"我不想要\",{\"0\":{\"38\":1}}],[\"体验更好的同类插件\",{\"1\":{\"43\":1}}],[\"靠的就是清静\",{\"1\":{\"43\":1}}],[\"若是被人拿去倒卖呢\",{\"1\":{\"43\":1}}],[\"为什么不开源\",{\"0\":{\"42\":1}}],[\"还容易增加跑路趋势\",{\"1\":{\"41\":1}}],[\"拆散功能通常不仅会增加维护成本\",{\"1\":{\"41\":1}}],[\"能不能单独做个\",{\"0\":{\"40\":1}}],[\"所有玩家的家都会被导入\",{\"1\":{\"265\":1}}],[\"所有者\",{\"1\":{\"208\":1}}],[\"所有游戏内的提示语都在\",{\"1\":{\"39\":1}}],[\"所有功能在\",{\"1\":{\"39\":1}}],[\"且需要在\",{\"1\":{\"619\":1}}],[\"且允许玩家使用材质包\",{\"1\":{\"573\":1}}],[\"且有网页配置工具\",{\"1\":{\"39\":1}}],[\"且代码质量堪忧\",{\"1\":{\"27\":1}}],[\"均有开关\",{\"1\":{\"39\":1}}],[\"javascript\",{\"0\":{\"2397\":1},\"1\":{\"745\":1,\"764\":1,\"783\":1,\"802\":1,\"819\":1,\"836\":1,\"853\":1,\"870\":1,\"890\":1,\"909\":1,\"930\":1,\"949\":1,\"975\":1,\"994\":1,\"1016\":1,\"1035\":1,\"1054\":1,\"1073\":1,\"1092\":1,\"1109\":1,\"1130\":1,\"1153\":1,\"1172\":1,\"1190\":1,\"1204\":1,\"1218\":1,\"1242\":1,\"1264\":1,\"1293\":1,\"1316\":1,\"1339\":1,\"1368\":1,\"1397\":1,\"1420\":1,\"1443\":1,\"1472\":1,\"1501\":1,\"1524\":1,\"1547\":1,\"1572\":1,\"1597\":1,\"1624\":1,\"1655\":1,\"1678\":1,\"1701\":1,\"1726\":1,\"1751\":1,\"1778\":1,\"1805\":1,\"1830\":1,\"1855\":1,\"1880\":1,\"1905\":1,\"1930\":1,\"1955\":1,\"1972\":1,\"1991\":1,\"2010\":1,\"2031\":1,\"2052\":1,\"2069\":1,\"2086\":1,\"2108\":1,\"2123\":1,\"2152\":1,\"2170\":1,\"2191\":1,\"2212\":1,\"2248\":1,\"2289\":1,\"2313\":1,\"2332\":1,\"2350\":1,\"2398\":1,\"2400\":1}}],[\"js对象\",{\"1\":{\"2400\":1}}],[\"js\",{\"1\":{\"311\":1,\"548\":1}}],[\"json字符串\",{\"0\":{\"1201\":1,\"2120\":1,\"2307\":1,\"2324\":1,\"2344\":1},\"1\":{\"1205\":1,\"1207\":1,\"1209\":1,\"1211\":1,\"1213\":1,\"2124\":1,\"2126\":1,\"2128\":1,\"2130\":1,\"2132\":1,\"2314\":1,\"2316\":1,\"2318\":1,\"2320\":1,\"2322\":1,\"2333\":1,\"2335\":1,\"2337\":1,\"2339\":1,\"2341\":1,\"2351\":1,\"2353\":1,\"2355\":1,\"2357\":1,\"2359\":1,\"2386\":5,\"2389\":5,\"2391\":5,\"2394\":5,\"2396\":5,\"2399\":5,\"2401\":5,\"2404\":5,\"2406\":5}}],[\"jsonstring\",{\"1\":{\"2028\":1,\"2032\":1,\"2034\":2,\"2036\":1,\"2038\":1,\"2040\":1,\"2049\":1,\"2053\":1,\"2055\":2,\"2057\":1,\"2059\":1,\"2061\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"jsonstr\",{\"1\":{\"1187\":1,\"1191\":1,\"1193\":2,\"1195\":1,\"1197\":1,\"1199\":1,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"json具体配置\",{\"1\":{\"624\":1}}],[\"json存储了玩家的\",{\"1\":{\"598\":1}}],[\"json对应项frpconfigs添加对应配置\",{\"1\":{\"542\":1}}],[\"json所在目录\",{\"1\":{\"528\":1}}],[\"json中开启如下配置\",{\"1\":{\"345\":1}}],[\"json中的consolelanguage字段定义了默认语言\",{\"1\":{\"253\":1}}],[\"json文件\",{\"1\":{\"336\":1}}],[\"json文件是插件的主配置文件\",{\"1\":{\"283\":1}}],[\"json为开启经济接口\",{\"1\":{\"49\":1}}],[\"json\",{\"1\":{\"39\":1,\"68\":1,\"264\":1,\"268\":1,\"271\":1,\"276\":1,\"278\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"301\":1,\"313\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"398\":1,\"476\":1,\"498\":1,\"622\":1,\"645\":1,\"646\":1,\"2376\":2,\"2380\":1}}],[\"joinlocation\",{\"0\":{\"588\":1},\"1\":{\"447\":1,\"590\":1,\"594\":3}}],[\"join\",{\"1\":{\"226\":1,\"694\":1}}],[\"jpeg\",{\"1\":{\"19\":1,\"416\":1,\"429\":1}}],[\"群\",{\"1\":{\"37\":1}}],[\"务必带上截图等必要内容\",{\"1\":{\"37\":1}}],[\"如实现玩家花费游戏币赎罪\",{\"1\":{\"2379\":1}}],[\"如使用\",{\"1\":{\"694\":2}}],[\"如钟\",{\"1\":{\"625\":1}}],[\"如关闭此模块\",{\"1\":{\"619\":1}}],[\"如zh\",{\"1\":{\"593\":1}}],[\"如自行搭建的\",{\"1\":{\"531\":1}}],[\"如需要隐藏某玩家的归属地信息或信息有误\",{\"1\":{\"599\":1}}],[\"如需参考请打开上文的分支链接\",{\"1\":{\"555\":1}}],[\"如需反作弊推荐使用\",{\"1\":{\"474\":1}}],[\"如需使用\",{\"1\":{\"314\":1}}],[\"如玩家不在白名单\",{\"1\":{\"455\":1}}],[\"如玩家个人设置的语言\",{\"1\":{\"326\":1}}],[\"如不成功请手动下载\",{\"1\":{\"407\":1,\"420\":1}}],[\"如果嫌领地保护的太好可以关闭\",{\"1\":{\"583\":1}}],[\"如果目标目录存在\",{\"1\":{\"498\":1}}],[\"如果存档是虚空或者超平坦请千万不要开启次功能\",{\"1\":{\"453\":1}}],[\"如果不放心\",{\"1\":{\"410\":1,\"423\":1}}],[\"如果系统不是很新的话需要手动安装\",{\"1\":{\"341\":1}}],[\"如果你有兴趣\",{\"1\":{\"258\":1}}],[\"如果你的服务器恰好有外语使用者或者学习者\",{\"1\":{\"256\":1}}],[\"如果你只需要某个功能\",{\"1\":{\"41\":1}}],[\"如位置有误也可打开修改\",{\"1\":{\"327\":1}}],[\"如因变量重名需要指定使用\",{\"1\":{\"233\":1}}],[\"如侧边栏\",{\"1\":{\"83\":1}}],[\"如visual\",{\"1\":{\"69\":1}}],[\"如\",{\"1\":{\"61\":1,\"541\":1,\"542\":1,\"625\":1}}],[\"如在这个仓库开个\",{\"1\":{\"37\":1}}],[\"如有建议也可提出\",{\"1\":{\"31\":1}}],[\"吗\",{\"0\":{\"34\":1}}],[\"请使用getlandpermissionbypos\",{\"0\":{\"1916\":1,\"1941\":1},\"1\":{\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"请使用专业的编辑工具编辑\",{\"1\":{\"69\":1,\"399\":1}}],[\"请求冷却时间\",{\"1\":{\"699\":1}}],[\"请求超时时间\",{\"1\":{\"699\":1}}],[\"请求传送\",{\"0\":{\"697\":1},\"1\":{\"435\":1}}],[\"请勿在超平坦地图使用这个功能\",{\"1\":{\"569\":1}}],[\"请向管理员申请白名单\",{\"1\":{\"513\":1}}],[\"请检查你的网络环境\",{\"1\":{\"513\":1}}],[\"请催更\",{\"1\":{\"510\":1}}],[\"请点击左侧的菜单切换到具体模块的使用\",{\"1\":{\"433\":1}}],[\"请前往\",{\"0\":{\"390\":1,\"411\":1,\"424\":1}}],[\"请正确安装\",{\"1\":{\"363\":1}}],[\"请自行修改\",{\"1\":{\"39\":1}}],[\"请问可以增加\",{\"0\":{\"34\":1}}],[\"请不要无故猜测插件算法\",{\"1\":{\"31\":1}}],[\"最小值\",{\"1\":{\"566\":1}}],[\"最世界最低点\",{\"1\":{\"565\":1}}],[\"最大值512\",{\"1\":{\"564\":1}}],[\"最大高度\",{\"1\":{\"563\":1}}],[\"最低点设置过低可能会导致世界生成的比较奇怪\",{\"1\":{\"453\":1}}],[\"最低延迟\",{\"1\":{\"157\":1}}],[\"最近\",{\"1\":{\"155\":1}}],[\"最近一次延迟\",{\"1\":{\"153\":1}}],[\"最新版本下载liteloaderbds\",{\"1\":{\"52\":1}}],[\"最新构建\",{\"0\":{\"3\":1,\"390\":1,\"411\":1,\"424\":1}}],[\"最后假装没\",{\"1\":{\"33\":1}}],[\"这样玩家输入\",{\"1\":{\"625\":1}}],[\"这样玩家使用钟右键即可打开菜单\",{\"1\":{\"625\":1}}],[\"这样可以在任意地点通过http\",{\"1\":{\"348\":1}}],[\"这里提供两种方法\",{\"1\":{\"2369\":1}}],[\"这里\",{\"1\":{\"535\":1}}],[\"这并不会带来什么弊端\",{\"1\":{\"41\":1}}],[\"这不是定制插件\",{\"1\":{\"35\":1}}],[\"这可能能初步定位问题\",{\"1\":{\"33\":1}}],[\"这个插件与旧插件\",{\"0\":{\"25\":1}}],[\"可指定玩家否则playerxuid填写空字符串\",{\"0\":{\"1712\":1,\"1737\":1,\"1762\":1,\"1789\":1},\"1\":{\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":4,\"2404\":4,\"2406\":4}}],[\"可设置提示\",{\"0\":{\"920\":1},\"1\":{\"931\":1,\"933\":1,\"935\":1,\"937\":1,\"939\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"可设置在服务器关闭后传送玩家到其他服务器\",{\"1\":{\"487\":1}}],[\"可\",{\"1\":{\"673\":1,\"675\":1,\"691\":1}}],[\"可选\",{\"1\":{\"625\":1}}],[\"可触发多个回调\",{\"1\":{\"625\":1}}],[\"可在控制台或者游戏内管理员使用\",{\"1\":{\"501\":1}}],[\"可自定义多个边界\",{\"1\":{\"467\":1}}],[\"可翻译自己发出的消息等\",{\"1\":{\"463\":1}}],[\"可删除\",{\"1\":{\"333\":1}}],[\"可运行以执行npm\",{\"1\":{\"314\":1}}],[\"可通过脚本文件来扩展插件功能\",{\"1\":{\"312\":1}}],[\"可供其他插件使用\",{\"1\":{\"236\":1}}],[\"可使用通配符\",{\"1\":{\"498\":1}}],[\"可使用\",{\"1\":{\"233\":1}}],[\"可以实现自定义称号显示等\",{\"1\":{\"2383\":1}}],[\"可以参考使用\",{\"1\":{\"2362\":1}}],[\"可以修改此文件\",{\"1\":{\"599\":1}}],[\"可以手动修改或删除\",{\"1\":{\"598\":1}}],[\"可以多开frp\",{\"1\":{\"528\":1}}],[\"可以配合这个功能来修复\",{\"1\":{\"478\":1}}],[\"可以在配置文件修改默认命令\",{\"1\":{\"340\":1}}],[\"可以打开网页上传config\",{\"1\":{\"336\":1}}],[\"可以删除即删除指定区块的缓存\",{\"1\":{\"316\":1}}],[\"可以帮助我们翻译语言文件\",{\"1\":{\"258\":1}}],[\"可以通过页面底部的在\",{\"1\":{\"80\":1}}],[\"可以先阅读报错的具体内容\",{\"1\":{\"33\":1}}],[\"可关闭插件的其他功能\",{\"1\":{\"41\":1}}],[\"可实现更多的配置文件以外的自定义以及二次开发\",{\"1\":{\"9\":1,\"2301\":1}}],[\"遇到问题莫慌\",{\"1\":{\"33\":1}}],[\"遇到喜庆的红色报错\",{\"0\":{\"32\":1}}],[\"驱动的\",{\"1\":{\"33\":1}}],[\"boolean\",{\"0\":{\"1712\":1,\"1737\":1,\"1762\":1,\"1789\":1},\"1\":{\"916\":1,\"1099\":1,\"1116\":1,\"1197\":1,\"1271\":1,\"1300\":1,\"1323\":1,\"1346\":1,\"1579\":1,\"1604\":1,\"1631\":1,\"1662\":1,\"1685\":1,\"1708\":1,\"1727\":1,\"1729\":1,\"1731\":1,\"1733\":1,\"1735\":1,\"1752\":1,\"1754\":1,\"1756\":1,\"1758\":1,\"1760\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":2,\"1787\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":2,\"1814\":1,\"1837\":1,\"1862\":1,\"1887\":1,\"1912\":1,\"1937\":1,\"1962\":1,\"2017\":1,\"2038\":1,\"2059\":1,\"2386\":4,\"2389\":4,\"2391\":4,\"2394\":4,\"2396\":4,\"2399\":4,\"2401\":30,\"2404\":29,\"2406\":54}}],[\"bool>>\",{\"1\":{\"914\":1,\"918\":1,\"1097\":1,\"1101\":1,\"1114\":1,\"1118\":1,\"1195\":1,\"1199\":1,\"1269\":1,\"1273\":1,\"1298\":1,\"1302\":1,\"1321\":1,\"1325\":1,\"1344\":1,\"1348\":1,\"1577\":1,\"1581\":1,\"1602\":1,\"1606\":1,\"1629\":1,\"1633\":1,\"1660\":1,\"1664\":1,\"1683\":1,\"1687\":1,\"1706\":1,\"1710\":1,\"1783\":1,\"1787\":1,\"1810\":1,\"1814\":1,\"1835\":1,\"1839\":1,\"1860\":1,\"1864\":1,\"1885\":1,\"1889\":1,\"1910\":1,\"1914\":1,\"1935\":1,\"1939\":1,\"1960\":1,\"1964\":1,\"2015\":1,\"2019\":1,\"2036\":1,\"2040\":1,\"2057\":1,\"2061\":1,\"2389\":25,\"2391\":50,\"2394\":25,\"2396\":25}}],[\"bool\",{\"1\":{\"908\":1,\"910\":1,\"912\":1,\"914\":1,\"916\":1,\"918\":1,\"1091\":1,\"1093\":1,\"1095\":1,\"1097\":1,\"1099\":1,\"1101\":1,\"1108\":1,\"1110\":1,\"1112\":1,\"1114\":1,\"1116\":1,\"1118\":1,\"1189\":1,\"1191\":1,\"1193\":1,\"1195\":1,\"1197\":1,\"1199\":1,\"1241\":1,\"1243\":1,\"1263\":1,\"1265\":1,\"1267\":1,\"1269\":1,\"1271\":1,\"1273\":1,\"1292\":1,\"1294\":1,\"1296\":1,\"1298\":1,\"1300\":1,\"1302\":1,\"1315\":1,\"1317\":1,\"1319\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1338\":1,\"1340\":1,\"1342\":1,\"1344\":1,\"1346\":1,\"1348\":1,\"1571\":1,\"1573\":1,\"1575\":1,\"1577\":1,\"1579\":1,\"1581\":1,\"1596\":1,\"1598\":1,\"1600\":1,\"1602\":1,\"1604\":1,\"1606\":1,\"1623\":1,\"1625\":1,\"1627\":1,\"1629\":1,\"1631\":1,\"1633\":1,\"1654\":1,\"1656\":1,\"1658\":1,\"1660\":1,\"1662\":1,\"1664\":1,\"1677\":1,\"1679\":1,\"1681\":1,\"1683\":1,\"1685\":1,\"1687\":1,\"1700\":1,\"1702\":1,\"1704\":1,\"1706\":1,\"1708\":1,\"1710\":1,\"1777\":1,\"1779\":1,\"1781\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1804\":1,\"1806\":1,\"1808\":1,\"1810\":1,\"1812\":1,\"1814\":1,\"1829\":1,\"1831\":1,\"1833\":1,\"1835\":1,\"1837\":1,\"1839\":1,\"1854\":1,\"1856\":1,\"1858\":1,\"1860\":1,\"1862\":1,\"1864\":1,\"1879\":1,\"1881\":1,\"1883\":1,\"1885\":1,\"1887\":1,\"1889\":1,\"1904\":1,\"1906\":1,\"1908\":1,\"1910\":1,\"1912\":1,\"1914\":1,\"1929\":1,\"1931\":1,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1954\":1,\"1956\":1,\"1958\":1,\"1960\":1,\"1962\":1,\"1964\":1,\"2009\":1,\"2011\":1,\"2013\":1,\"2015\":1,\"2017\":1,\"2019\":1,\"2030\":1,\"2032\":1,\"2034\":1,\"2036\":1,\"2038\":1,\"2040\":1,\"2051\":1,\"2053\":1,\"2055\":1,\"2057\":1,\"2059\":1,\"2061\":1,\"2386\":25,\"2389\":25,\"2391\":50,\"2394\":25,\"2396\":50,\"2399\":26,\"2401\":26,\"2404\":25,\"2406\":50}}],[\"book\",{\"1\":{\"625\":1}}],[\"bowding\",{\"1\":{\"493\":1}}],[\"b奠定发展\",{\"1\":{\"625\":1}}],[\"buttons\",{\"1\":{\"625\":1}}],[\"bug\",{\"0\":{\"36\":1,\"408\":1,\"421\":1},\"1\":{\"33\":2,\"478\":1,\"523\":1}}],[\"binditem\",{\"1\":{\"625\":1}}],[\"browser\",{\"1\":{\"609\":1}}],[\"breakdoor\",{\"1\":{\"583\":1}}],[\"blockexplode\",{\"1\":{\"602\":1}}],[\"blockmove\",{\"1\":{\"583\":1}}],[\"blockfall\",{\"1\":{\"583\":1}}],[\"blacklist\",{\"1\":{\"490\":1}}],[\"b服务端支持游戏版本\",{\"1\":{\"513\":1}}],[\"b\",{\"1\":{\"507\":1,\"513\":4,\"594\":2,\"2239\":1,\"2249\":1,\"2251\":2,\"2253\":1,\"2255\":1,\"2257\":1,\"2280\":1,\"2290\":1,\"2292\":2,\"2294\":1,\"2296\":1,\"2298\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"bdxwebsocket\",{\"1\":{\"457\":2,\"734\":1}}],[\"bdswebsocketapiprotocol\",{\"1\":{\"733\":1}}],[\"bds\",{\"0\":{\"413\":1,\"426\":1},\"1\":{\"29\":1,\"56\":1,\"112\":1,\"113\":1,\"114\":1,\"367\":1,\"528\":1,\"541\":1,\"555\":1}}],[\"by\",{\"0\":{\"556\":1},\"1\":{\"437\":1,\"460\":1}}],[\"basic\",{\"1\":{\"751\":1,\"770\":1,\"789\":1,\"808\":1,\"825\":1,\"842\":1,\"859\":1,\"876\":1,\"896\":1,\"915\":1,\"936\":1,\"955\":1,\"981\":1,\"1000\":1,\"1022\":1,\"1041\":1,\"1060\":1,\"1079\":1,\"1098\":1,\"1115\":1,\"1136\":1,\"1159\":1,\"1178\":1,\"1196\":1,\"1210\":1,\"1224\":1,\"1270\":1,\"1299\":1,\"1322\":1,\"1345\":1,\"1374\":1,\"1403\":1,\"1426\":1,\"1449\":1,\"1478\":1,\"1507\":1,\"1530\":1,\"1553\":1,\"1578\":1,\"1603\":1,\"1630\":1,\"1661\":1,\"1684\":1,\"1707\":1,\"1732\":1,\"1757\":1,\"1784\":1,\"1811\":1,\"1836\":1,\"1861\":1,\"1886\":1,\"1911\":1,\"1936\":1,\"1961\":1,\"1978\":1,\"1997\":1,\"2016\":1,\"2037\":1,\"2058\":1,\"2075\":1,\"2092\":1,\"2114\":1,\"2129\":1,\"2158\":1,\"2176\":1,\"2197\":1,\"2218\":1,\"2254\":1,\"2295\":1,\"2319\":1,\"2338\":1,\"2356\":1}}],[\"baidu\",{\"1\":{\"666\":1,\"2376\":1,\"2384\":1}}],[\"backonclose\",{\"1\":{\"625\":1}}],[\"back\",{\"1\":{\"510\":2}}],[\"backupcrontab\",{\"1\":{\"498\":1}}],[\"backup\",{\"0\":{\"496\":1},\"1\":{\"472\":1,\"498\":4,\"500\":1}}],[\"ban\",{\"1\":{\"320\":1}}],[\"bat\",{\"1\":{\"314\":1}}],[\"belowname\",{\"0\":{\"502\":1},\"1\":{\"449\":1,\"504\":1}}],[\"beta\",{\"1\":{\"391\":1,\"392\":1,\"412\":1,\"425\":1}}],[\"bedrock\",{\"0\":{\"357\":1,\"358\":1,\"395\":1},\"1\":{\"351\":1,\"359\":1,\"518\":1,\"573\":1}}],[\"behaviorlog\",{\"0\":{\"600\":1},\"1\":{\"471\":1,\"602\":2}}],[\"behavior\",{\"1\":{\"298\":1,\"646\":1}}],[\"beplaceholderapi\",{\"0\":{\"231\":1},\"1\":{\"232\":1,\"233\":1,\"235\":1}}],[\"既然插件是人写的\",{\"1\":{\"33\":1}}],[\"不储存具体日志的文字描述\",{\"1\":{\"605\":1}}],[\"不宜过小\",{\"1\":{\"567\":1}}],[\"不需要专门对接\",{\"1\":{\"545\":1}}],[\"不加~表示bds目录\",{\"1\":{\"528\":1}}],[\"不过受限于\",{\"1\":{\"656\":1}}],[\"不过关闭后玩家可视的新区块更多\",{\"1\":{\"575\":1}}],[\"不过目前咕了\",{\"1\":{\"570\":1}}],[\"不过通常没啥用\",{\"1\":{\"478\":1}}],[\"不过推荐在已有的语言文件上更改\",{\"1\":{\"249\":1}}],[\"不保证\",{\"1\":{\"474\":1}}],[\"不与其他监听聊天消息的插件冲突\",{\"1\":{\"465\":1}}],[\"不包含玩家上下文\",{\"0\":{\"1164\":1},\"1\":{\"1173\":1,\"1175\":1,\"1177\":1,\"1179\":1,\"1181\":1,\"2386\":1,\"2389\":1,\"2391\":1,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":1,\"2406\":1}}],[\"不包含\",{\"0\":{\"405\":1,\"418\":1}}],[\"不得直接将\",{\"1\":{\"262\":1}}],[\"不会污染地图目录和服务端目录的行为包文件夹\",{\"1\":{\"657\":1}}],[\"不会污染地图目录和服务端目录的行为包\",{\"1\":{\"647\":1,\"651\":1}}],[\"不会因为注册相同命令而造成控制台报错\",{\"1\":{\"62\":1}}],[\"不会按照个人需求增加任何功能\",{\"1\":{\"35\":1}}],[\"不支持大多数面板服\",{\"1\":{\"55\":1}}],[\"不用担心被人说三道四\",{\"1\":{\"43\":1}}],[\"不是所有东西都开源都有更多的人参与开发\",{\"1\":{\"43\":1}}],[\"不能保证插件的所有模块都有最优算法\",{\"1\":{\"31\":1}}],[\"不推荐尝试使用\",{\"1\":{\"27\":1}}],[\"吃单核的缺陷\",{\"1\":{\"29\":1}}],[\"已经停止维护\",{\"1\":{\"27\":1}}],[\"也支持较早的基于\",{\"1\":{\"457\":1}}],[\"也可选择关闭\",{\"1\":{\"678\":1}}],[\"也可改成127\",{\"1\":{\"347\":1}}],[\"也可以通过$pf\",{\"1\":{\"2376\":1}}],[\"也可以把用上的图片发评论区\",{\"1\":{\"728\":1}}],[\"也可以使用方法二\",{\"1\":{\"343\":1}}],[\"也可以新建自己的语言文件\",{\"1\":{\"249\":1}}],[\"也可以在文档下方的聊天框提问\",{\"1\":{\"23\":1}}],[\"也必定无法解决全部问题\",{\"1\":{\"77\":1}}],[\"也不知道当时怎么想的还用\",{\"1\":{\"26\":1}}],[\"class\",{\"1\":{\"2390\":1,\"2391\":14,\"2406\":26}}],[\"clock\",{\"1\":{\"625\":1}}],[\"cmd\",{\"1\":{\"885\":1,\"891\":1,\"893\":2,\"895\":1,\"897\":1,\"899\":1,\"906\":1,\"910\":1,\"912\":2,\"914\":1,\"916\":1,\"918\":1,\"925\":1,\"931\":1,\"933\":2,\"935\":1,\"937\":1,\"939\":1,\"946\":1,\"950\":1,\"952\":2,\"954\":1,\"956\":1,\"958\":1,\"2365\":5,\"2386\":4,\"2391\":8,\"2396\":8,\"2401\":12,\"2406\":8}}],[\"c进行各种传送\",{\"1\":{\"625\":1}}],[\"c++\",{\"0\":{\"2385\":1},\"1\":{\"546\":1,\"547\":1,\"747\":1,\"766\":1,\"785\":1,\"804\":1,\"821\":1,\"838\":1,\"855\":1,\"872\":1,\"892\":1,\"911\":1,\"932\":1,\"951\":1,\"977\":1,\"996\":1,\"1018\":1,\"1037\":1,\"1056\":1,\"1075\":1,\"1094\":1,\"1111\":1,\"1132\":1,\"1155\":1,\"1174\":1,\"1192\":1,\"1206\":1,\"1220\":1,\"1266\":1,\"1295\":1,\"1318\":1,\"1341\":1,\"1370\":1,\"1399\":1,\"1422\":1,\"1445\":1,\"1474\":1,\"1503\":1,\"1526\":1,\"1549\":1,\"1574\":1,\"1599\":1,\"1626\":1,\"1657\":1,\"1680\":1,\"1703\":1,\"1728\":1,\"1753\":1,\"1780\":1,\"1807\":1,\"1832\":1,\"1857\":1,\"1882\":1,\"1907\":1,\"1932\":1,\"1957\":1,\"1974\":1,\"1993\":1,\"2012\":1,\"2033\":1,\"2054\":1,\"2071\":1,\"2088\":1,\"2110\":1,\"2125\":1,\"2154\":1,\"2172\":1,\"2193\":1,\"2214\":1,\"2250\":1,\"2291\":1,\"2315\":1,\"2334\":1,\"2352\":1}}],[\"c当前账号已在其他设备登录\",{\"1\":{\"513\":1}}],[\"c你的客户端版本过新\",{\"1\":{\"513\":1}}],[\"c你的客户端版本太低\",{\"1\":{\"513\":1}}],[\"c未能通过microsoft服务的身份验证\",{\"1\":{\"513\":1}}],[\"c❤\",{\"1\":{\"504\":1}}],[\"create\",{\"1\":{\"2365\":1}}],[\"createland3d\",{\"0\":{\"1634\":1},\"1\":{\"1656\":3,\"1658\":3,\"1660\":3,\"1662\":3,\"1664\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"createland2d\",{\"0\":{\"1607\":1},\"1\":{\"1625\":3,\"1627\":3,\"1629\":3,\"1631\":3,\"1633\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"createmcworldfile\",{\"1\":{\"498\":1}}],[\"createzipfile\",{\"1\":{\"498\":1}}],[\"checkislandsharedtoplayerbyposint\",{\"0\":{\"1890\":1},\"1\":{\"1906\":3,\"1908\":3,\"1910\":3,\"1912\":3,\"1914\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkislandsharedtoplayerbypos\",{\"0\":{\"1865\":1},\"1\":{\"1881\":3,\"1883\":3,\"1885\":3,\"1887\":3,\"1889\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkplayerhasopenchestpermission\",{\"0\":{\"1940\":1},\"1\":{\"1956\":3,\"1958\":3,\"1960\":3,\"1962\":3,\"1964\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkplayerhascreatechestpermission\",{\"0\":{\"1915\":1},\"1\":{\"1931\":3,\"1933\":3,\"1935\":3,\"1937\":3,\"1939\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkplayerislandownerbyposint\",{\"0\":{\"1840\":1},\"1\":{\"1856\":3,\"1858\":3,\"1860\":3,\"1862\":3,\"1864\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkplayerislandownerbypos\",{\"0\":{\"1815\":1},\"1\":{\"1831\":3,\"1833\":3,\"1835\":3,\"1837\":3,\"1839\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkposhaslandint\",{\"0\":{\"1326\":1},\"1\":{\"1340\":3,\"1342\":3,\"1344\":3,\"1346\":3,\"1348\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkposhasland\",{\"0\":{\"1303\":1},\"1\":{\"1317\":3,\"1319\":3,\"1321\":3,\"1323\":3,\"1325\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checklandpermissionbyposint\",{\"0\":{\"1788\":1},\"1\":{\"1806\":3,\"1808\":3,\"1810\":3,\"1812\":3,\"1814\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checklandpermissionbypos\",{\"0\":{\"1761\":1},\"1\":{\"1779\":3,\"1781\":3,\"1783\":3,\"1785\":3,\"1787\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkcubehaslandint\",{\"0\":{\"1274\":1},\"1\":{\"1294\":3,\"1296\":3,\"1298\":3,\"1300\":3,\"1302\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"checkcubehasland\",{\"0\":{\"1245\":1},\"1\":{\"1265\":3,\"1267\":3,\"1269\":3,\"1271\":3,\"1273\":3,\"2386\":2,\"2389\":2,\"2391\":4,\"2394\":2,\"2396\":4,\"2399\":2,\"2401\":3,\"2404\":2,\"2406\":4}}],[\"cheatcount\",{\"1\":{\"1239\":1,\"1243\":1,\"2401\":3}}],[\"cheatpunish\",{\"0\":{\"1229\":1},\"1\":{\"1243\":3,\"2399\":2,\"2401\":3}}],[\"chooseitemcountperpage\",{\"1\":{\"583\":1}}],[\"chunk\",{\"1\":{\"575\":1}}],[\"chromium\",{\"1\":{\"341\":1}}],[\"chatex\",{\"0\":{\"735\":1,\"736\":1,\"755\":1,\"774\":1,\"793\":1,\"812\":1,\"829\":1,\"846\":1,\"863\":1},\"1\":{\"746\":3,\"748\":3,\"750\":3,\"752\":3,\"754\":2,\"765\":3,\"767\":3,\"769\":3,\"771\":3,\"773\":2,\"784\":3,\"786\":3,\"788\":3,\"790\":3,\"792\":2,\"803\":3,\"805\":3,\"807\":3,\"809\":3,\"811\":2,\"820\":3,\"822\":3,\"824\":3,\"826\":3,\"828\":2,\"837\":3,\"839\":3,\"841\":3,\"843\":3,\"845\":2,\"854\":3,\"856\":3,\"858\":3,\"860\":3,\"862\":2,\"871\":3,\"873\":3,\"875\":3,\"877\":3,\"879\":2,\"2386\":16,\"2389\":16,\"2391\":25,\"2394\":16,\"2396\":25,\"2399\":16,\"2401\":17,\"2404\":16,\"2406\":25}}],[\"chatenhancement\",{\"0\":{\"505\":1},\"1\":{\"464\":1,\"507\":1}}],[\"chattranslation\",{\"1\":{\"462\":1}}],[\"chat\",{\"1\":{\"321\":1,\"332\":1}}],[\"cef\",{\"1\":{\"341\":1}}],[\"customize\",{\"1\":{\"297\":1,\"645\":1,\"646\":1}}],[\"city\",{\"1\":{\"190\":1,\"2143\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2376\":3,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"cn\",{\"1\":{\"73\":1,\"294\":1,\"342\":1,\"371\":1,\"593\":1}}],[\"cooldown\",{\"1\":{\"699\":1}}],[\"corntab\",{\"1\":{\"685\":1,\"687\":1}}],[\"colorping\",{\"1\":{\"2368\":1,\"2371\":1,\"2373\":2}}],[\"color\",{\"1\":{\"625\":1}}],[\"costmoney\",{\"1\":{\"625\":4}}],[\"count\",{\"1\":{\"2186\":1,\"2192\":1,\"2194\":2,\"2196\":1,\"2198\":1,\"2200\":1,\"2207\":1,\"2213\":1,\"2215\":2,\"2217\":1,\"2219\":1,\"2221\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"countperpage\",{\"1\":{\"583\":1}}],[\"country\",{\"1\":{\"186\":1,\"2139\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2376\":3,\"2386\":1,\"2391\":2,\"2396\":2,\"2401\":3,\"2406\":2}}],[\"copyfolder\",{\"1\":{\"498\":1}}],[\"command\",{\"0\":{\"880\":1,\"881\":1,\"900\":1,\"919\":1,\"940\":1},\"1\":{\"891\":3,\"893\":3,\"895\":3,\"897\":3,\"899\":2,\"910\":3,\"912\":3,\"914\":3,\"916\":3,\"918\":2,\"931\":3,\"933\":3,\"935\":3,\"937\":3,\"939\":2,\"950\":3,\"952\":3,\"954\":3,\"956\":3,\"958\":2,\"2365\":2,\"2386\":8,\"2389\":8,\"2391\":13,\"2394\":8,\"2396\":13,\"2399\":8,\"2401\":9,\"2404\":8,\"2406\":13}}],[\"commandpassword\",{\"1\":{\"731\":1}}],[\"commandmap\",{\"0\":{\"508\":1},\"1\":{\"483\":1,\"510\":1}}],[\"common\",{\"1\":{\"533\":1}}],[\"com\",{\"1\":{\"336\":1,\"342\":1,\"367\":1,\"371\":1,\"457\":1,\"531\":1,\"533\":1,\"666\":1,\"2376\":2,\"2384\":1}}],[\"const\",{\"1\":{\"746\":1,\"748\":2,\"765\":1,\"767\":2,\"784\":1,\"786\":2,\"803\":1,\"805\":2,\"820\":1,\"822\":1,\"837\":1,\"839\":1,\"854\":1,\"856\":1,\"871\":1,\"873\":1,\"891\":1,\"893\":2,\"910\":1,\"912\":2,\"931\":1,\"933\":3,\"950\":1,\"952\":2,\"976\":1,\"978\":5,\"995\":1,\"997\":2,\"1017\":1,\"1019\":3,\"1036\":1,\"1038\":2,\"1055\":1,\"1057\":2,\"1074\":1,\"1076\":2,\"1093\":1,\"1095\":2,\"1110\":1,\"1112\":1,\"1131\":1,\"1133\":3,\"1154\":1,\"1156\":4,\"1173\":1,\"1175\":2,\"1191\":1,\"1193\":1,\"1205\":1,\"1219\":1,\"1243\":1,\"1265\":1,\"1267\":7,\"1294\":1,\"1296\":7,\"1317\":1,\"1319\":4,\"1340\":1,\"1342\":4,\"1369\":1,\"1371\":7,\"1398\":1,\"1400\":7,\"1421\":1,\"1423\":4,\"1444\":1,\"1446\":4,\"1473\":1,\"1475\":7,\"1502\":1,\"1504\":7,\"1525\":1,\"1527\":4,\"1548\":1,\"1550\":4,\"1573\":1,\"1575\":5,\"1598\":1,\"1600\":5,\"1625\":1,\"1627\":6,\"1656\":1,\"1658\":8,\"1679\":1,\"1681\":4,\"1702\":1,\"1704\":4,\"1727\":1,\"1729\":5,\"1752\":1,\"1754\":5,\"1779\":1,\"1781\":6,\"1806\":1,\"1808\":6,\"1831\":1,\"1833\":5,\"1856\":1,\"1858\":5,\"1881\":1,\"1883\":5,\"1906\":1,\"1908\":5,\"1931\":1,\"1933\":5,\"1956\":1,\"1958\":5,\"1973\":1,\"1975\":1,\"1992\":1,\"1994\":2,\"2011\":1,\"2013\":2,\"2032\":1,\"2034\":3,\"2053\":1,\"2055\":3,\"2070\":1,\"2072\":1,\"2087\":1,\"2089\":1,\"2109\":1,\"2111\":3,\"2124\":1,\"2153\":1,\"2155\":7,\"2171\":1,\"2173\":1,\"2192\":1,\"2194\":3,\"2213\":1,\"2215\":3,\"2249\":1,\"2251\":10,\"2290\":1,\"2292\":13,\"2314\":1,\"2316\":1,\"2333\":1,\"2335\":2,\"2351\":1,\"2353\":1,\"2365\":1,\"2371\":1,\"2373\":1,\"2386\":257,\"2399\":73,\"2401\":1}}],[\"console\",{\"1\":{\"602\":19}}],[\"consolecommand\",{\"1\":{\"73\":1}}],[\"consolelanguage\",{\"1\":{\"73\":1,\"254\":1}}],[\"content\",{\"1\":{\"625\":1}}],[\"containerchanged\",{\"1\":{\"602\":1}}],[\"config\",{\"1\":{\"39\":1,\"68\":1,\"285\":1,\"398\":1,\"542\":1,\"622\":1}}],[\"code\",{\"1\":{\"69\":1}}],[\"c\",{\"0\":{\"2387\":1},\"1\":{\"26\":1,\"513\":2,\"594\":2,\"666\":1,\"749\":1,\"768\":1,\"787\":1,\"806\":1,\"823\":1,\"840\":1,\"857\":1,\"874\":1,\"894\":1,\"913\":1,\"934\":1,\"953\":1,\"979\":1,\"998\":1,\"1020\":1,\"1039\":1,\"1058\":1,\"1077\":1,\"1096\":1,\"1113\":1,\"1134\":1,\"1157\":1,\"1176\":1,\"1194\":1,\"1208\":1,\"1222\":1,\"1268\":1,\"1297\":1,\"1320\":1,\"1343\":1,\"1372\":1,\"1401\":1,\"1424\":1,\"1447\":1,\"1476\":1,\"1505\":1,\"1528\":1,\"1551\":1,\"1576\":1,\"1601\":1,\"1628\":1,\"1659\":1,\"1682\":1,\"1705\":1,\"1730\":1,\"1755\":1,\"1782\":1,\"1809\":1,\"1834\":1,\"1859\":1,\"1884\":1,\"1909\":1,\"1934\":1,\"1959\":1,\"1976\":1,\"1995\":1,\"2014\":1,\"2035\":1,\"2056\":1,\"2073\":1,\"2090\":1,\"2112\":1,\"2127\":1,\"2156\":1,\"2174\":1,\"2195\":1,\"2216\":1,\"2252\":1,\"2293\":1,\"2317\":1,\"2336\":1,\"2354\":1,\"2371\":1,\"2373\":1,\"2388\":1,\"2390\":2}}],[\"更新\",{\"0\":{\"413\":1,\"426\":1}}],[\"更新插件本体\",{\"0\":{\"408\":1,\"421\":1}}],[\"更新插件\",{\"0\":{\"404\":1,\"417\":1}}],[\"更新和维护\",{\"1\":{\"355\":1}}],[\"更新日志\",{\"0\":{\"16\":1}}],[\"更利于维护\",{\"1\":{\"26\":1}}],[\"0暴露公网\",{\"1\":{\"720\":1}}],[\"00\",{\"1\":{\"504\":1}}],[\"0即暴露地址到公网\",{\"1\":{\"348\":1}}],[\"0\",{\"0\":{\"370\":1,\"373\":2},\"1\":{\"26\":1,\"346\":4,\"347\":4,\"348\":3,\"371\":1,\"372\":1,\"513\":2,\"518\":4,\"533\":2,\"583\":3,\"594\":3,\"625\":4,\"662\":1,\"699\":2,\"720\":7,\"731\":4,\"2371\":1,\"2373\":1}}],[\"微软\",{\"1\":{\"26\":1}}],[\"孰能无惑\",{\"0\":{\"21\":1}}],[\"人非生而知之者\",{\"0\":{\"21\":1}}],[\"l系统商店\",{\"1\":{\"625\":1}}],[\"l领地\",{\"1\":{\"625\":1}}],[\"l任务\",{\"1\":{\"625\":1}}],[\"l传送菜单\",{\"1\":{\"625\":1}}],[\"l内容\",{\"1\":{\"625\":1}}],[\"lgui菜单\",{\"1\":{\"625\":1}}],[\"let\",{\"1\":{\"754\":1,\"773\":1,\"792\":1,\"811\":1,\"820\":1,\"828\":1,\"837\":1,\"845\":1,\"854\":1,\"862\":1,\"871\":1,\"879\":1,\"899\":1,\"910\":1,\"918\":1,\"939\":1,\"958\":1,\"976\":1,\"984\":1,\"1003\":1,\"1017\":1,\"1025\":1,\"1036\":1,\"1044\":1,\"1055\":1,\"1063\":1,\"1074\":1,\"1082\":1,\"1093\":1,\"1101\":1,\"1110\":1,\"1118\":1,\"1131\":1,\"1139\":1,\"1154\":1,\"1162\":1,\"1173\":1,\"1181\":1,\"1191\":1,\"1199\":1,\"1205\":1,\"1213\":1,\"1227\":1,\"1243\":1,\"1265\":1,\"1273\":1,\"1294\":1,\"1302\":1,\"1317\":1,\"1325\":1,\"1340\":1,\"1348\":1,\"1369\":1,\"1377\":1,\"1398\":1,\"1406\":1,\"1421\":1,\"1429\":1,\"1444\":1,\"1452\":1,\"1473\":1,\"1481\":1,\"1502\":1,\"1510\":1,\"1525\":1,\"1533\":1,\"1548\":1,\"1556\":1,\"1573\":1,\"1581\":1,\"1598\":1,\"1606\":1,\"1625\":1,\"1633\":1,\"1656\":1,\"1664\":1,\"1679\":1,\"1687\":1,\"1702\":1,\"1710\":1,\"1727\":1,\"1735\":1,\"1752\":1,\"1760\":1,\"1779\":1,\"1787\":1,\"1806\":1,\"1814\":1,\"1831\":1,\"1839\":1,\"1856\":1,\"1864\":1,\"1881\":1,\"1889\":1,\"1906\":1,\"1914\":1,\"1931\":1,\"1939\":1,\"1956\":1,\"1964\":1,\"1973\":1,\"1981\":1,\"1992\":1,\"2000\":1,\"2011\":1,\"2019\":1,\"2032\":1,\"2040\":1,\"2053\":1,\"2061\":1,\"2070\":1,\"2078\":1,\"2087\":1,\"2095\":1,\"2109\":1,\"2117\":1,\"2124\":1,\"2132\":1,\"2161\":1,\"2171\":1,\"2179\":1,\"2200\":1,\"2221\":1,\"2257\":1,\"2298\":1,\"2314\":1,\"2322\":1,\"2341\":1,\"2351\":1,\"2359\":1,\"2376\":5,\"2394\":72,\"2396\":144}}],[\"lecternblockdropbook\",{\"1\":{\"583\":1}}],[\"levelname\",{\"1\":{\"451\":1,\"573\":1}}],[\"level\",{\"1\":{\"162\":1,\"504\":1,\"518\":1,\"573\":1}}],[\"l\",{\"1\":{\"513\":3}}],[\"ld\",{\"1\":{\"510\":1}}],[\"long>>\",{\"1\":{\"2175\":1,\"2389\":1,\"2391\":2}}],[\"long\",{\"1\":{\"2169\":1,\"2171\":1,\"2173\":2,\"2175\":1,\"2177\":2,\"2179\":1,\"2187\":1,\"2194\":2,\"2196\":1,\"2198\":1,\"2208\":1,\"2215\":2,\"2217\":1,\"2219\":1,\"2386\":6,\"2389\":3,\"2391\":8,\"2394\":1,\"2396\":1,\"2399\":1,\"2401\":1,\"2404\":4,\"2406\":10}}],[\"log\",{\"1\":{\"2365\":1,\"2376\":1,\"2380\":1}}],[\"logquery\",{\"1\":{\"720\":1}}],[\"logo\",{\"1\":{\"666\":1}}],[\"localhost\",{\"1\":{\"720\":1}}],[\"local\",{\"1\":{\"533\":2}}],[\"locationcache\",{\"1\":{\"327\":1,\"598\":1}}],[\"location\",{\"0\":{\"2118\":1,\"2119\":1,\"2133\":1},\"1\":{\"184\":1,\"731\":1,\"2124\":3,\"2126\":3,\"2128\":3,\"2130\":3,\"2132\":3,\"2153\":3,\"2155\":3,\"2157\":3,\"2159\":3,\"2161\":2,\"2376\":2,\"2386\":4,\"2389\":4,\"2391\":7,\"2394\":4,\"2396\":7,\"2399\":4,\"2401\":5,\"2404\":4,\"2406\":7}}],[\"lowestping\",{\"1\":{\"156\":1}}],[\"load\",{\"0\":{\"45\":1}}],[\"listen\",{\"1\":{\"2365\":1,\"2371\":1,\"2376\":4,\"2380\":1,\"2384\":2}}],[\"lightningbolt\",{\"1\":{\"583\":1}}],[\"linux\",{\"1\":{\"377\":1}}],[\"linux+wine\",{\"1\":{\"56\":1}}],[\"liteldev\",{\"1\":{\"367\":1}}],[\"liteloaderbds\",{\"0\":{\"365\":1,\"366\":1},\"1\":{\"352\":1,\"367\":1}}],[\"liteloader\",{\"0\":{\"361\":1,\"369\":1,\"389\":1},\"1\":{\"11\":1,\"353\":1,\"362\":2,\"498\":1,\"2303\":1,\"2389\":1,\"2391\":1,\"2394\":2,\"2396\":2,\"2404\":1,\"2406\":1}}],[\"live\",{\"1\":{\"336\":1}}],[\"lljs\",{\"0\":{\"2364\":1},\"1\":{\"2370\":1,\"2375\":1}}],[\"llac\",{\"1\":{\"488\":1}}],[\"llachelper\",{\"1\":{\"488\":1}}],[\"llanticheat用\",{\"0\":{\"1230\":1},\"1\":{\"1243\":1,\"2399\":1,\"2401\":1}}],[\"llanticheat\",{\"1\":{\"474\":1}}],[\"llnet\",{\"0\":{\"405\":1,\"413\":1,\"418\":1,\"426\":1}}],[\"ll\",{\"0\":{\"413\":1,\"426\":1},\"1\":{\"59\":1,\"545\":2,\"746\":1,\"765\":1,\"784\":1,\"803\":1,\"820\":1,\"837\":1,\"854\":1,\"871\":1,\"891\":1,\"910\":1,\"931\":1,\"950\":1,\"976\":1,\"995\":1,\"1017\":1,\"1036\":1,\"1055\":1,\"1074\":1,\"1093\":1,\"1110\":1,\"1131\":1,\"1154\":1,\"1173\":1,\"1191\":1,\"1205\":1,\"1219\":1,\"1243\":1,\"1265\":1,\"1294\":1,\"1317\":1,\"1340\":1,\"1369\":1,\"1398\":1,\"1421\":1,\"1444\":1,\"1473\":1,\"1502\":1,\"1525\":1,\"1548\":1,\"1573\":1,\"1598\":1,\"1625\":1,\"1656\":1,\"1679\":1,\"1702\":1,\"1727\":1,\"1752\":1,\"1779\":1,\"1806\":1,\"1831\":1,\"1856\":1,\"1881\":1,\"1906\":1,\"1931\":1,\"1956\":1,\"1973\":1,\"1992\":1,\"2011\":1,\"2032\":1,\"2053\":1,\"2070\":1,\"2087\":1,\"2109\":1,\"2124\":1,\"2153\":1,\"2171\":1,\"2192\":1,\"2213\":1,\"2249\":1,\"2290\":1,\"2314\":1,\"2333\":1,\"2351\":1,\"2399\":73}}],[\"llmoney\",{\"1\":{\"49\":1,\"52\":1}}],[\"llse\",{\"1\":{\"48\":1}}],[\"lazulikao\",{\"1\":{\"336\":1}}],[\"lazy<func<int\",{\"1\":{\"2391\":15}}],[\"lazy<func<float\",{\"1\":{\"2391\":11}}],[\"lazy<func<string>>\",{\"1\":{\"2391\":2}}],[\"lazy<func<string\",{\"1\":{\"2391\":29}}],[\"lazy<action<string\",{\"1\":{\"2391\":14}}],[\"lazy<action>\",{\"1\":{\"2391\":1}}],[\"lazy\",{\"1\":{\"19\":1,\"416\":1,\"429\":1,\"2396\":72,\"2406\":72}}],[\"landinfo\",{\"1\":{\"1569\":1,\"1573\":1,\"1575\":2,\"1577\":1,\"1579\":1,\"1581\":1,\"1594\":1,\"1598\":1,\"1600\":2,\"1602\":1,\"1604\":1,\"1606\":1,\"2386\":2,\"2391\":4,\"2396\":4,\"2401\":6,\"2406\":4}}],[\"lands\",{\"0\":{\"1244\":1,\"1245\":1,\"1274\":1,\"1303\":1,\"1326\":1,\"1349\":1,\"1378\":1,\"1407\":1,\"1430\":1,\"1453\":1,\"1482\":1,\"1511\":1,\"1534\":1,\"1557\":1,\"1582\":1,\"1607\":1,\"1634\":1,\"1665\":1,\"1688\":1,\"1711\":1,\"1736\":1,\"1761\":1,\"1788\":1,\"1815\":1,\"1840\":1,\"1865\":1,\"1890\":1,\"1915\":1,\"1940\":1,\"1965\":1,\"1982\":1,\"2001\":1,\"2020\":1,\"2041\":1,\"2062\":1,\"2079\":1},\"1\":{\"1265\":3,\"1267\":3,\"1269\":3,\"1271\":3,\"1273\":2,\"1294\":3,\"1296\":3,\"1298\":3,\"1300\":3,\"1302\":2,\"1317\":3,\"1319\":3,\"1321\":3,\"1323\":3,\"1325\":2,\"1340\":3,\"1342\":3,\"1344\":3,\"1346\":3,\"1348\":2,\"1369\":3,\"1371\":3,\"1373\":3,\"1375\":3,\"1377\":2,\"1398\":3,\"1400\":3,\"1402\":3,\"1404\":3,\"1406\":2,\"1421\":3,\"1423\":3,\"1425\":3,\"1427\":3,\"1429\":2,\"1444\":3,\"1446\":3,\"1448\":3,\"1450\":3,\"1452\":2,\"1473\":3,\"1475\":3,\"1477\":3,\"1479\":3,\"1481\":2,\"1502\":3,\"1504\":3,\"1506\":3,\"1508\":3,\"1510\":2,\"1525\":3,\"1527\":3,\"1529\":3,\"1531\":3,\"1533\":2,\"1548\":3,\"1550\":3,\"1552\":3,\"1554\":3,\"1556\":2,\"1573\":3,\"1575\":3,\"1577\":3,\"1579\":3,\"1581\":2,\"1598\":3,\"1600\":3,\"1602\":3,\"1604\":3,\"1606\":2,\"1625\":3,\"1627\":3,\"1629\":3,\"1631\":3,\"1633\":2,\"1656\":3,\"1658\":3,\"1660\":3,\"1662\":3,\"1664\":2,\"1679\":3,\"1681\":3,\"1683\":3,\"1685\":3,\"1687\":2,\"1702\":3,\"1704\":3,\"1706\":3,\"1708\":3,\"1710\":2,\"1727\":3,\"1729\":3,\"1731\":3,\"1733\":3,\"1735\":2,\"1752\":3,\"1754\":3,\"1756\":3,\"1758\":3,\"1760\":2,\"1779\":3,\"1781\":3,\"1783\":3,\"1785\":3,\"1787\":2,\"1806\":3,\"1808\":3,\"1810\":3,\"1812\":3,\"1814\":2,\"1831\":3,\"1833\":3,\"1835\":3,\"1837\":3,\"1839\":2,\"1856\":3,\"1858\":3,\"1860\":3,\"1862\":3,\"1864\":2,\"1881\":3,\"1883\":3,\"1885\":3,\"1887\":3,\"1889\":2,\"1906\":3,\"1908\":3,\"1910\":3,\"1912\":3,\"1914\":2,\"1931\":3,\"1933\":3,\"1935\":3,\"1937\":3,\"1939\":2,\"1956\":3,\"1958\":3,\"1960\":3,\"1962\":3,\"1964\":2,\"1973\":3,\"1975\":3,\"1977\":3,\"1979\":3,\"1981\":2,\"1992\":3,\"1994\":3,\"1996\":3,\"1998\":3,\"2000\":2,\"2011\":3,\"2013\":3,\"2015\":3,\"2017\":3,\"2019\":2,\"2032\":3,\"2034\":3,\"2036\":3,\"2038\":3,\"2040\":2,\"2053\":3,\"2055\":3,\"2057\":3,\"2059\":3,\"2061\":2,\"2070\":3,\"2072\":3,\"2074\":3,\"2076\":3,\"2078\":2,\"2087\":3,\"2089\":3,\"2091\":3,\"2093\":3,\"2095\":2,\"2386\":70,\"2389\":70,\"2391\":106,\"2394\":70,\"2396\":106,\"2399\":70,\"2401\":71,\"2404\":70,\"2406\":106}}],[\"landtiptime\",{\"1\":{\"583\":1}}],[\"landtipcount\",{\"1\":{\"583\":1}}],[\"landdata\",{\"1\":{\"271\":1,\"325\":1}}],[\"land\",{\"0\":{\"270\":1,\"581\":1},\"1\":{\"206\":1,\"208\":15,\"443\":1,\"510\":1,\"583\":2,\"625\":1,\"2365\":3}}],[\"language\",{\"0\":{\"2096\":1,\"2097\":1},\"1\":{\"326\":1,\"2109\":3,\"2111\":3,\"2113\":3,\"2115\":3,\"2117\":2,\"2149\":1,\"2153\":1,\"2155\":2,\"2157\":1,\"2159\":1,\"2161\":1,\"2386\":3,\"2389\":2,\"2391\":6,\"2394\":2,\"2396\":6,\"2399\":2,\"2401\":6,\"2404\":2,\"2406\":6}}],[\"language命令修改个人的插件语言\",{\"1\":{\"256\":1}}],[\"lang\",{\"1\":{\"39\":1,\"247\":1,\"292\":1,\"293\":1,\"294\":1,\"593\":1}}],[\"插件对接\",{\"0\":{\"544\":1}}],[\"插件依赖文件夹\",{\"1\":{\"309\":1,\"310\":1}}],[\"插件的主配置文件\",{\"1\":{\"285\":1}}],[\"插件的所有游戏内提示语\",{\"1\":{\"251\":1}}],[\"插件目录\",{\"1\":{\"598\":1}}],[\"插件目录下的config\",{\"1\":{\"283\":1}}],[\"插件目录位于\",{\"1\":{\"282\":1}}],[\"插件目录的文件结构\",{\"0\":{\"281\":1}}],[\"插件启动后自动导入plugins\",{\"1\":{\"264\":1,\"268\":1,\"271\":1}}],[\"插件配置\",{\"0\":{\"64\":1}}],[\"插件也会继续处理\",{\"1\":{\"59\":1}}],[\"插件兼容性\",{\"0\":{\"53\":1}}],[\"插件\",{\"0\":{\"36\":1,\"389\":1}}],[\"插件多线程\",{\"1\":{\"31\":1}}],[\"插件多线程密集\",{\"1\":{\"29\":1}}],[\"插件性能如何\",{\"0\":{\"30\":1}}],[\"插件更新日志\",{\"0\":{\"17\":1}}],[\"插件重大变更\",{\"0\":{\"13\":1,\"14\":1}}],[\"插件是普通人类写的\",{\"1\":{\"6\":1}}],[\"使用network模块获取ip位置\",{\"1\":{\"2376\":1}}],[\"使用ssl证书\",{\"1\":{\"720\":1}}],[\"使用数据库查看软件\",{\"0\":{\"607\":1}}],[\"使用第三方服务\",{\"0\":{\"534\":1}}],[\"使用说明\",{\"0\":{\"519\":1,\"681\":1,\"695\":1}}],[\"使用corntab表达式\",{\"1\":{\"498\":1}}],[\"使用效果\",{\"0\":{\"494\":1,\"514\":1,\"595\":1}}],[\"使用请注意安全\",{\"0\":{\"344\":1}}],[\"使用网页配置插件\",{\"0\":{\"334\":1}}],[\"使用玩家名存储\",{\"1\":{\"265\":1}}],[\"使用\",{\"0\":{\"231\":1,\"611\":1,\"2364\":1},\"1\":{\"26\":1,\"235\":1,\"604\":1,\"687\":1}}],[\"使用了极为先进的巨硬\",{\"1\":{\"26\":1}}],[\"使用脚本联动\",{\"1\":{\"12\":1,\"2304\":1}}],[\"使用方法\",{\"0\":{\"10\":1,\"529\":1,\"2302\":1},\"1\":{\"2373\":1,\"2376\":1}}],[\"功能需要同时开启\",{\"1\":{\"722\":1}}],[\"功能简介\",{\"0\":{\"434\":1}}],[\"功能名称\",{\"1\":{\"71\":1}}],[\"功能的插件\",{\"0\":{\"40\":1}}],[\"功能以及\",{\"0\":{\"34\":1}}],[\"功能\",{\"0\":{\"38\":1},\"1\":{\"11\":1,\"88\":1,\"138\":1,\"213\":1,\"619\":1,\"720\":1,\"2303\":1}}],[\"的领地\",{\"0\":{\"1666\":1,\"1689\":1},\"1\":{\"1679\":1,\"1681\":1,\"1683\":1,\"1685\":1,\"1687\":1,\"1702\":1,\"1704\":1,\"1706\":1,\"1708\":1,\"1710\":1,\"2386\":2,\"2389\":2,\"2391\":2,\"2394\":2,\"2396\":2,\"2399\":2,\"2401\":2,\"2404\":2,\"2406\":2}}],[\"的具体内容\",{\"1\":{\"632\":1}}],[\"的接口即可获取到真实\",{\"1\":{\"545\":1}}],[\"的接口取消了聊天事件\",{\"1\":{\"59\":1}}],[\"的作弊惩罚暂时没做\",{\"1\":{\"488\":1}}],[\"的端口\",{\"1\":{\"478\":1}}],[\"的存档名称\",{\"1\":{\"478\":2,\"525\":1}}],[\"的在线玩家数量\",{\"1\":{\"478\":1}}],[\"的消息联动\",{\"1\":{\"457\":1}}],[\"的浏览器打开http\",{\"1\":{\"347\":1}}],[\"的home和warp数据文件与pfessentials相同\",{\"1\":{\"274\":1}}],[\"的数据文件夹复制到本插件的数据文件夹\",{\"1\":{\"262\":1}}],[\"的形式提交到这个仓库\",{\"1\":{\"258\":1}}],[\"的所有变量均可在\",{\"1\":{\"235\":1}}],[\"的格式\",{\"1\":{\"233\":1}}],[\"的变量\",{\"0\":{\"231\":1},\"1\":{\"233\":1}}],[\"的命令\",{\"1\":{\"73\":1}}],[\"的各种魔法依赖较高\",{\"1\":{\"56\":1}}],[\"的面板服并配置了\",{\"1\":{\"55\":1}}],[\"的功能有\",{\"0\":{\"36\":1}}],[\"的\",{\"1\":{\"11\":1,\"542\":1,\"594\":2,\"2303\":1,\"2372\":1}}],[\"介绍\",{\"0\":{\"8\":1,\"2300\":1,\"2361\":1}}],[\"帖子\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,kt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(it(t,I[s],n)):e==="search"?self.postMessage(ot(t,I[s],n)):self.postMessage({suggestions:it(t,I[s],n),results:ot(t,I[s],n)})};
//# sourceMappingURL=index.js.map
